{"version":3,"sources":["constants/index.js","notifications/client.js","ipc/client.js","stores/PreferencesStore.js","services/AlgorithmUtils.js","stores/GraphStore.js","stores/ImportStore.js","stores/ProjectStore.js","stores/SearchStore.js","stores/index.js","components/PreferencesDialog.jsx","components/utils/Collapsable.jsx","components/utils/CommonItemRenderer.jsx","components/utils/SimpleSelect.jsx","components/ImportDialog.jsx","components/OpenDialog.jsx","components/NewProjectDialog.jsx","components/ProjectDetailDialog.jsx","components/SaveSnapshotDialog.jsx","components/RenameSnapshotDialog.jsx","components/OpenSnapshotDialog.jsx","components/ShareDialog.jsx","components/StatisticsDialog.jsx","components/Dialogs.jsx","components/Navbar.jsx","components/WorkspaceView.jsx","visualizers/ThreeJSVis.jsx","components/panels/GlobalPanel.jsx","components/utils/SwitchCollapsable.jsx","components/panels/SelectionPanel.jsx","components/panels/NodesPanel.jsx","components/panels/LabelsPanel.jsx","components/panels/NodeDetailPanel.jsx","components/Legends.jsx","components/StatusBar.jsx","components/FloatingCards.jsx","app.jsx","index.js","graph-frontend/src/structure/node.js","graph-frontend/include/THREE.MeshLine.js","graph-frontend/index.js","graph-frontend/src/imports.js","graph-frontend/src/process.js","graph-frontend/include/QuickHull.js","graph-frontend/include/ConvexGeometry.js","graph-frontend/include/CSS3DRenderer.js","graph-frontend/include/OrbitControls.js","graph-frontend/src/utils/utils.js","graph-frontend/src/setup.js","graph-frontend/src/addremove.js","graph-frontend/src/highlighting.js","graph-frontend/src/select.js","graph-frontend/src/mouse.js","graph-frontend/src/modify.js","graph-frontend/src/draw.js","graph-frontend/src/api.js","graph-frontend/src/update.js"],"names":["scales","scale","LOAD_USER_CONFIG","SAVE_USER_CONFIG","FETCH_WORKSPACE_PROJECTS","CREATE_NEW_PROJECT","DELETE_FILE","CHANGE_WORKSPACE_FOLDER","CHOOSE_GRAPH_FILE","CHOOSE_STATE_FILE","NODE_AND_EDGE_FILE","ONLY_EDGE_FILE","GRAPH_AND_STATE_FILE","ONLY_GRAPH_FILE","IMPORT_GRAPH","OPEN_GRAPH","SEARCH_REQUEST","ADD_NODE","toaster","Toaster","create","position","Position","TOP","ipcRenderer","send","eventString","console","log","requestChooseGraphFile","requestChooseStateFile","requestOpen","appState","import","graphFile","stateFile","requestImportGraphFromCSV","hasNodeFile","delimiter","newProjectName","loading","importConfig","nodes","path","nodeFile","hasColumns","columns","toJS","mapping","edges","edgeFile","createMissing","importGraphFromCSV","then","graph","runInAction","rawGraph","metadata","initialGlobalConfig","overrides","Map","dialogOpen","readCSV","fileObject","hasHeader","a","file","reader","FileReader","readAsText","Promise","resolve","reject","onload","content","result","parse","comment","trim","auto_parse","skip_empty_lines","undefined","config","fromId","parseInt","toId","nodesArr","createGraph","degreeDict","selectedNodeFileFromInput","forEach","node","addNode","id","toString","degree","map","n","pagerank","selectedEdgeFileFromInput","it","from","to","hasNode","push","edgesSet","Set","edgesArr","addEdge","edgeKey","has","add","addLink","source_id","target_id","rank","pageRank","node_id","snapshotName","fullNodes","length","fullEdges","Math","floor","nodeProperties","Object","keys","nodeComputed","edgeProperties","PreferencesStore","userConfig","requestSaveUserConfig","darkMode","this","workspace","workspacePath","observable","jsnx","require","jsgraphs","averageClusteringCoefficient","snapshot","jsnxGraph","Graph","addNodesFrom","addEdgesFrom","e","convertToJsnx","averageClustering","connectedComponents","i","idDict","g","ConnectedComponents","convertToJSGraph","componentCount","GraphStore","ref","colorBy","color","sizeBy","size","min","max","labelBy","shape","labelSize","labelLength","nodesShowingLabels","hasGraphLoaded","nodeids","filter","includes","frame","removeSelected","positions","getPositions","global","optionalConfig","getSnapshot","noPosition","noGlobal","noOverride","JSON","stringify","savedStatesStr","savedStates","savedOverrides","entries","k","v","clear","merge","initialNodesShowingLabels","uniq","ret","p","Number","MAX_VALUE","MIN_VALUE","domain","minMax","range","override","get","label","nodeSizeScale","nodeColorScale","computed","action","ImportStore","topN","ready","ProjectStore","SearchStore","preferences","search","project","window","loadAndDisplaySnapshotFromURL","url","fetch","method","mode","response","text","loadSnapshotFromURL","snapshotString","split","pop","loadImmediateStates","loadAndDisplaySnapshotFromStrapi","uuid","json","body","catch","error","loadSnapshotFromStrapi","loadInitialSampleGraph","location","hash","substring","startsWith","decodeURIComponent","alert","saveSnapshotToString","saveImmediateStates","addEventListener","event","autorun","hasGraph","updateGraph","computedGraph","setAllNodesShape","setLabelRelativeSize","setLabelLength","paused","updatePositions","showLabels","searchStr","searchOrder","runSearch","panelOpen","candidates","splice","highlightNodeIds","lines","topLinesAsString","l","join","key","show","message","intent","Intent","DANGER","timeout","onerror","PreferencesDialog","observer","iconName","className","classnames","Classes","DARK","isOpen","onClose","title","checked","onChange","saveUserConfig","toggleDark","CONTROL_GROUP","INPUT_GROUP","FILL","type","DISABLED","INPUT","placeholder","readOnly","value","PRIMARY","onClick","React","Component","name","onToggle","children","MINIMAL","rightIconName","handleClick","item","isActive","ACTIVE","items","onSelect","fill","itemRenderer","CommonItemRenderer","filterable","onItemSelect","PreviewTable","props","numRows","selectedRegions","values","indexOf","rows","cols","renderCell","ImportDialog","changeAvailable","targetValue","setState","available","canImport","state","renderNodesSelection","Collapsable","nodesOpen","target","files","SimpleSelect","renderEdgesSelection","edgesOpen","disabled","newDelimiter","updateDelimiter","DIALOG_BODY","renderDelimiterSelection","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","projectMetadata","createdDate","Date","toLocaleString","turnOffLabelCSSRenderer","OpenDialog","renderSelectGraph","renderSelectState","selectedGraph","selectedState","openDialogOpen","NewProjectDialog","isNewProjectNameDuplicate","projects","some","isNewProjectNameEmpty","isValidated","isNewProjectDialogOpen","dir","ProjectDetailDialog","currentProject","isProjectDetailDialogOpen","hasGraphData","interactive","elevation","Card","ELEVATION_TWO","graphDataPath","snapshotPaths","snapshotPath","replace","BUTTON","INTENT_PRIMARY","currentSnapshotName","filePath","SaveSnapshotDialog","isSaveSnapshotDialogOpen","stringCopyOfSnapshot","document","getElementById","select","execCommand","isRenameSnapshotDialogOpen","OpenSnapshotDialog","selectedFile","openSnapshotDialogOpen","NONE","fileAsString","uuidv4","ShareDialog","isShared","isFetching","sharedURL","handleRequest","bind","backendURL","cache","headers","referrer","ok","shareDialogOpen","StatisticsDialog","statisticsDialogOpen","TABLE","style","width","components","Dialogs","display","RenameSnapshotDialog","Navbar","NAVBAR","NAVBAR_GROUP","ALIGN_LEFT","NAVBAR_HEADING","BOTTOM","NAVBAR_DIVIDER","resumeLayout","forceUpdate","pauseLayout","selectedNodes","pinSelectedNodes","WARNING","unpinSelectedNodes","removeNodes","getSelectedIds","ALIGN_RIGHT","href","fontSize","textDecoration","icon","faGithub","WorkspaceView","textAlign","height","ThreeJSVis","graphFrame","Frame","init","ee","on","data","menu","MenuFactory","MenuItemFactory","toggleSelectedLabels","ContextMenu","left","pageX","top","pageY","flex","GlobalPanel","timeOutRef","sizeOptionOpen","colorOptionOpen","shapeOptionOpen","CARD","allPropertiesKeyList","backgroundImage","backgroundColor","hex","x1","y1","x2","y2","stopColor","stopOpacity","offset","x","y","stepSize","labelStepSize","b","pluralize","SelectionPanel","twoLayerUpdate","nodeId","set","nodeAttrs","delete","batchTwoLayerUpdate","labelOptionOpen","SwitchCollapsable","overrideConfig","NodesPanel","getRenderedNodes","LabelsPanel","showAllLabels","hideAllLabels","hideSelectedLabels","showSelectedLabels","NodeDetail","TABLE_STRIPED","direction","itemDirection","itemMargin","shapeMargin","labelFormat","format","r","cx","cy","StatusBar","RenderOptionsCard","animate","panel","Expander","FloatingCards","optionsVisible","optionsInvisible","sideButtonVis","marginLeft","sideButtonInv","toggleOptions","isRenderOptionsCardHidden","ELEVATION_2","justifyContent","alignItems","numCandidates","INTERACTIVE","userSelect","onMouseOver","onMouseDown","onMouseLeave","pageNum","allCands","slice","nPerPage","pointerEvents","cursor","pages","maxPage","paddingTop","paddingRight","paddingBottom","FocusStyleManager","onlyShowFocusOnTabs","loadUserConfig","DELETE","Keys","BACKSPACE","P","U","App","keydown","which","ReactDOM","render","$","Node","index","in","out","renderData","domainData","vx","vy","connectedTo","outNodeIds","outNode","inArray","prototype","connectNode","exports","Edge","source","THREE","memcpy","src","srcOffset","dst","dstOffset","subarray","buffer","MeshLine","previous","next","side","indices_array","uvs","counters","geometry","BufferGeometry","widthCallback","setGeometry","c","Geometry","j","vertices","z","Float32Array","Array","process","compareV3","aa","ab","copyV3","w","attributes","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","addAttribute","setIndex","advance","array","MeshLineMaterial","parameters","check","d","Material","call","lineWidth","useMap","Color","opacity","resolution","Vector2","sizeAttenuation","near","far","dashArray","useDash","visibility","alphaTest","material","RawShaderMaterial","uniforms","vertexShader","fragmentShader","setValues","constructor","copy","balancedBinTree","Argo","STATS","OrbitControls","d3","default","STATS_SHOW","NODE_COLOR","NODE_HIGHLIGHT","ADJACENT_HIGHLIGHT","SEARCH_HIGHLIGHT","NODE_HTEXTURE","NODE_TEXTURE","NODE_NO_HTEX","NODE_NO_TEX","NODE_NO_HCOLOR","NODE_NO_COLOR","NODE_NO_HIGHLIGHT","NODE_NEIGHBOR_HIGHLIGHT","NODE_SHAPE","NODE_HSHAPE","NODE_SIZE","HIGHLIGHT_SIZE","LAYOUT","LINES","MAP","MAP_RENDER_PER_NUMBER_OF_FRAME","TEXT_SCALE","TEXT_SIZE","TEXT_X_OFFSET","TEXT_Y_OFFSET","TEXT_BACK_COLOR","TEXT_OPACITY","TEXT_WIREFRAME","PIN_COLOR","def","spawn","options","self","inGraph","layout","layout_options","graphLayout","lineObjects","lineIndices","MAX_LINES","textureLoader","TextureLoader","crossOrigin","oldIntersect","selection","fov","mouseStart","Vector3","mouseEnd","dragging","showBox","renderWidth","renderHeight","maxZoom","mouseDown","layoutInit","relativeFontSize","mapShowing","mapRenderPerNumberOfFrame","lastNode","fakeNodes","rightClickedNode","doHighlightNeighbors","prevHighlights","neighborHost","hull","stats","showPanel","appendChild","dom","begin","controls","update","end","requestAnimationFrame","renderer","WebGLRenderer","alpha","antialias","preserveDrawingBuffer","setDisplayParams","setRendererParams","setupCamera","setupMinimap","setupGeometry","setupSelect","element","domElement","cssRenderer","canvas","querySelector","setupLayout","setupGraph","preventDefault","onWindowResize","clientRect","getBoundingClientRect","minimap","aspect","ccamera","updateProjectionMatrix","setSize","stage","numberOfFrameSinceMiniMapRerender","updateCamera","updateNodes","updateLabels","updateEdges","forEachNode","force","forceLink","restart","stop","tickToStatic","ceil","alphaMin","alphaDecay","tick","setViewport","setScissor","setScissorTest","scene","camera","Visible","QuickHull","tolerance","faces","newFaces","assigned","VertexList","unassigned","Face","normal","midpoint","area","constant","outside","mark","edge","HalfEdge","vertex","face","prev","twin","VertexNode","point","head","tail","assign","setFromPoints","points","isArray","makeEmpty","compute","setFromObject","object","updateMatrixWorld","traverse","isGeometry","clone","applyMatrix4","matrixWorld","isBufferGeometry","attribute","count","fromBufferAttribute","addVertexToFace","append","insertBefore","removeVertexFromFace","remove","removeAllVerticesFromFace","start","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distanceToPoint","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","distance","computeExtremes","minVertices","maxVertices","getComponent","setComponent","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","v0","v1","v2","v3","extremes","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","cleanup","e0","e1","e2","triangle","Triangle","dot","distanceTo","lengthSquared","last","insertAfter","ConvexGeometry","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","normals","Float32BufferAttribute","CSS3DObject","Object3D","parentNode","removeChild","CSS3DSprite","CSS3DRenderer","_width","_height","REVISION","matrix","Matrix4","objects","createElement","overflow","WebkitTransformStyle","MozTransformStyle","oTransformStyle","transformStyle","cameraElement","epsilon","getObjectCSSMatrix","elements","setClearColor","isPaused","getSize","tan","degToRad","getEffectiveFOV","WebkitPerspective","MozPerspective","oPerspective","perspective","parent","matrixWorldInverse","getInverse","getCameraCSSMatrix","WebkitTransform","MozTransform","oTransform","transform","renderObject","transpose","copyPosition","cachedStyle","module","enabled","minDistance","Infinity","minZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","SPACE","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","position0","zoom0","zoom","spacePan","bothPan","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","reset","scope","dispatchEvent","changeEvent","STATE","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","EPS","quaternion","dispose","removeEventListener","onContextMenu","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","PerspectiveCamera","targetDistance","clientHeight","OrthographicCamera","right","clientWidth","bottom","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","clientX","clientY","button","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","spacePanStart","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleKeyUp","EventDispatcher","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","relMouseCoords","currentElement","totalOffsetX","totalOffsetY","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","prepNode","nodeToAdd","hcolor","linecolor","numYeast","random","tsize","make1x1Rect","rectShape","Shape","moveTo","lineTo","ShapeGeometry","make2x2Rect","volToRadius","volume","createNGraph","setupNgraphLayout","setupD3Layout","forceSimulation","forceManyBody","strength","forceY","forceX","velocityDecay","setPixelRatio","devicePixelRatio","oldCoords","panToMousePosition","coordX","coordY","coefficient","Scene","Group","setupFancyEdges","setUpSimpleEdges","rect","setupSelectionBox","setupBoundaries","setupViewPort","edgeCount","LineBasicMaterial","linewidth","vertexColors","VertexColors","shading","FlatShading","line","LineSegments","frustumCulled","colors","drawCount","selectBox","Line","visible","boundaries","setBoundarySize","viewPort","setViewPortSize","computeBoundingSphere","nodeCount","setupMouseHandlers","callback","coords","mouseX","mouseY","mousePosition","unproject","normalize","isMouseCoordinatesOnMinimap","raycaster","Raycaster","pos","onRightClick","getAttribute","focus","onRightClickCoords","callMouseHandler","intersects","intersectObjects","nodeIndex","getNode","ctrlKey","mouseHandler","graphNode","fx","fy","pinnedx","pinnedy","drawNode","links","removeNode","removeGraphEdges","undrawEdges","draw_object","undrawNode","nodeLinks","getLinks","removeLink","textHolder","hidden","killed","drawEdge","addNeighbors","neighbors","newNode","addNeighbors2","removeFakes","extend","highlightNode","toggle","setHex","highlightEdges","froms","tos","highlightNeighbors","colorNodeOpacity","colorNodeEdge","linkObjs","dc","op","selectNode","isSelected","updateSelection","clearSelection","hideme","diffx","diffy","checkSelection","npos","getNodePosition","insideBox","posx","posy","ctrl","leftMouseDown","onHover","lastHover","startTime","endTime","now","newNodeIds","emit","setUniformNodeSize","s","hsize","setNodeDataSize","dataValue","dataVal","setUniformNodeColor","hsvDegree","setNodeDataColor","mapNodeAttributes","val","mod","attr","changeLabelFontSize","changeLabelLength","changeNodes","changeNode","numChars","relativeSize","createHighlightMesh","texture","hshape","hgeometry","CircleGeometry","createHighlightDrawObject","getNodeSize","hmaterial","MeshBasicMaterial","transparent","highlight","Mesh","createNodeMesh","createNodeDrawObject","createPinMesh","pinMesh","createNodeLabel","wireframe","wireframeLinewidth","DoubleSide","PlaneGeometry","textMesh","createAndSetupLabelTextMesh","createAndSetupLabelDiv","createAndSetupTextHolder","bbox","Box3","createLabelDiv","createLabelDivElement","createTextNode","textElement","createLabelTextElement","textOverflow","whiteSpace","setupNodeDrawObject","htexture","onTextureLoad","load","himage","image","hide","updateColorsAndPositions","setTimeout","v1pos","v2pos","v1color","v2color","setMouseMode","mouseMode","isMouseModeMove","pause","mapSelectedNodes","mapAllNodes","setLabelFontSize","toggleMap","turnOnLabelCSSRenderer","updateNodesShowingLabels","toggleLabels","hideLabels","setCanvasSize","setNodeShape","getNumSelected","getNodesCount","updateViewPortEdgeColor","getGraph","getNodeList","poses","getPinPositions","alias","toggleAlias","setLastNode","dragLastNode","lowerRes","getNeighbors","toggleNeighborHighlight","getSelected","setDrawRange","total","thisNode","step","oldNode","updateNode","forEachLink","link","getLink","childNodes","innerText"],"mappings":"+XAUaA,GAAM,mBAHS,eAIVC,KADC,cAFM,YAIVA,KAFI,GAKNC,EAAmB,mBAEnBC,EAAmB,mBAGnBC,EAA2B,2BAG3BC,EAAqB,qBAGrBC,EAAc,cA4BdC,EAA0B,0BAS1BC,EAAoB,oBAEpBC,EAAoB,oBAGpBC,EAAqB,4BACrBC,EAAiB,kBAEjBC,EAAuB,+BACvBC,EAAkB,kBAClBC,EAAe,eAEfC,EAAa,aAGbC,EAAiB,iBAKjBC,EAAW,W,iBCjFXC,EAAUC,IAAQC,OAAO,CACpCC,SAAUC,IAASC,M,+mBC6DrB,I,2BAAMC,GAAc,CAClBC,KAAM,SAACC,GACLC,QAAQC,IAAR,2BAAgCF,EAAhC,aAiPG,SAASG,KACdL,GAAYC,KAAKjB,GAGZ,SAASsB,KACdN,GAAYC,KAAKhB,GAGZ,SAASsB,KACdP,GAAYC,KACVV,EACAiB,GAASC,OAAOC,UAChBF,GAASC,OAAOE,WA2Bb,SAASC,GAA0BC,EAAaC,EAAWC,GAC3DA,IACHA,EAAiB,gBAEnBP,GAASC,OAAOO,SAAU,EAC1B,IAAMC,EAAe,CACnBJ,cACAK,MAAO,CACLC,KAAMX,GAASC,OAAOQ,aAAaG,SAASD,KAC5CE,WAAYb,GAASC,OAAOQ,aAAaG,SAASC,WAClDC,QAASC,eAAKf,GAASC,OAAOQ,aAAaG,SAASE,SACpDE,QAASD,eAAKf,GAASC,OAAOQ,aAAaG,SAASI,UAEtDC,MAAO,CACLN,KAAMX,GAASC,OAAOQ,aAAaS,SAASP,KAC5CE,WAAYb,GAASC,OAAOQ,aAAaS,SAASL,WAClDC,QAASC,eAAKf,GAASC,OAAOQ,aAAaS,SAASJ,SACpDE,QAASD,eAAKf,GAASC,OAAOQ,aAAaS,SAASF,SACpDG,cAAenB,GAASC,OAAOQ,aAAaS,SAASC,eAEvDb,YACAC,kBAEFf,GAAYC,KAAKX,EAAc2B,G,4CAG/BW,CAAmBX,GAAcY,KAAK,SAAAC,GACpCC,sBAAY,sBAAuB,WACjCvB,GAASsB,MAAME,SAAWF,EAAME,SAChCxB,GAASsB,MAAMG,SAAWH,EAAMG,WAGlCzB,GAASsB,MAAMZ,MAAQV,GAASsB,MAAMI,oBAAoBhB,MAC1DV,GAASsB,MAAMK,UAAY,IAAIC,IAC/B5B,GAASC,OAAOO,SAAU,EAC1BR,GAASC,OAAO4B,YAAa,I,SAIlBC,G,oFAAf,WAAuBC,EAAYC,EAAW1B,GAA9C,iBAAA2B,EAAA,4DACQC,EAAOH,GACPI,EAAS,IAAIC,YACZC,WAAWH,GAHpB,kBAIS,IAAII,QAAQ,SAACC,EAASC,GAC3BL,EAAOM,OAAS,WACd,IAAMC,EAAUP,EAAOQ,OACnBX,GACFO,EAAQK,KAAMF,EAAS,CACrBG,QAAS,IACTC,MAAM,EACNC,YAAY,EACZC,kBAAkB,EAClBlC,QAASkB,EACT1B,eAGJiC,EAAQK,KAAMF,EAAS,CACrBG,QAAS,IACTC,MAAM,EACNC,YAAY,EACZC,kBAAkB,EAClBlC,aAASmC,EACT3C,mBAvBR,0C,mEA8BA,WAAkC4C,GAAlC,iCAAAjB,EAAA,wDAKQkB,EAASD,EAAOxC,MAAMG,WAAaqC,EAAOjC,MAAMD,QAAQmC,OAASC,SAASF,EAAOjC,MAAMD,QAAQmC,QAC/FE,EAAOH,EAAOxC,MAAMG,WAAaqC,EAAOjC,MAAMD,QAAQqC,KAAOD,SAASF,EAAOjC,MAAMD,QAAQqC,MAG7FC,EAAW,GACThC,EAAQiC,MACRC,EAAa,IACfN,EAAO7C,YAZb,iCAaqByB,GAAQ9B,GAASC,OAAOwD,0BAA2BP,EAAOxC,MAAMG,WAAYqC,EAAO5C,WAbxG,QAaIgD,EAbJ,QAcaI,QAAQ,SAAAC,GAAI,OAAIrC,EAAMsC,QAAQD,EAAKT,EAAOxC,MAAMM,QAAQ6C,IAAIC,WAA5C,IACrBD,GAAIF,EAAKT,EAAOxC,MAAMM,QAAQ6C,IAAIC,WAAYC,OAAQ,GAAMJ,OAChEL,EACEA,EAASU,IACP,SAAAC,GAAC,aAAUA,EAAV,CAAaJ,GAAII,EAAEf,EAAOxC,MAAMM,QAAQ6C,IAAIC,WAAYC,OAAQ,EAAGG,SAAU,OACzER,QAAQ,SAAAO,GAAC,OAAIT,EAAWS,EAAEJ,IAAM,IAnB7C,yBAqBsB/B,GAAQ9B,GAASC,OAAOkE,0BAA2BjB,EAAOjC,MAAMJ,WAAYqC,EAAO5C,WArBzG,eAqBQW,EArBR,OAsBMiC,EAAOjC,MAAME,eACfF,EAAMyC,QAAQ,SAACU,GACb,IAAMC,EAAOD,EAAGjB,GAAQW,WAClBQ,EAAKF,EAAGf,GAAMS,WACfxC,EAAMiD,QAAQF,KACjB/C,EAAMsC,QAAQS,EAAM,CAAER,GAAIQ,EAAMN,OAAQ,IACxCT,EAASkB,KAAK,CAAEX,GAAIQ,EAAMN,OAAQ,EAAGG,SAAU,IAC/CV,EAAWa,GAAQ,GAEhB/C,EAAMiD,QAAQD,KACjBhD,EAAMsC,QAAQU,EAAI,CAAET,GAAIS,EAAIP,OAAQ,IACpCT,EAASkB,KAAK,CAAEX,GAAIS,EAAIP,OAAQ,EAAGG,SAAU,IAC7CV,EAAWc,GAAM,KAKjBG,EAAW,IAAIC,IAEfC,EAAW,GAEXC,EAAU,SAACP,EAAMC,GACrB,IAAMO,EAAO,UAAMR,EAAN,uBAAeC,GACxBG,EAASK,IAAID,KAGjBJ,EAASM,IAAIF,GACbvD,EAAM0D,QAAQX,EAAMC,GACpBd,EAAWc,IAAO,EAClBK,EAASH,KAAK,CACZS,UAAWZ,EACXa,UAAWZ,MAIfrD,EAAMyC,QAAQ,SAAAU,GACZ,IAAMC,EAAOD,EAAGjB,GAAQW,WAClBQ,EAAKF,EAAGf,GAAMS,WAEpBc,EAAQP,EAAMC,GACdM,EAAQN,EAAID,KAGRc,EAAOC,IAAS9D,GACtBgC,EAAWA,EAASU,IAAI,SAAAC,GAAC,aAAUA,EAAV,CAAaoB,QAASpB,EAAEJ,GAAIK,SAAUiB,EAAKlB,EAAEJ,IAAKE,OAAQP,EAAWS,EAAEJ,QAlElG,kBAmES,CACLrC,SAAU,CAAEd,MAAO4C,EAAUrC,MAAO0D,GACpClD,SAAU,CACR6D,aAAc,iBACdC,UAAWjC,EAASkC,OACpBC,UAAWC,KAAKC,MAAMhB,EAASa,OAAS,GACxCI,eAAgBC,OAAOC,KAAKxC,EAAS,IACrCyC,aAAc,CAAC,WAAY,UAC3BC,eAAgB,CAAC,YAAa,gBA3EpC,2C,iEC5ZqBC,I,mdD6fnBzG,GAAYC,KAAKvB,K,wCAGZ,SAA+BgI,GACpC1G,GAAYC,KAAKtB,EAAkB+H,GCpejCC,CALmB,CACjBC,SAAUC,KAAKD,SACfE,UAAWD,KAAKE,oB,+CAzBnBC,c,yEAAwB,K,8CAExBA,c,yEAA4B,K,sDAC5BA,c,yEAAoC,K,+CACpCA,c,yEAA6B,K,oDAC7BA,c,yEAAkC,K,yDAClCA,c,yEAAuC,K,wCAOvCA,c,yEAAsB,K,6CAEtBA,c,wEAA2B,M,6CCnBxBC,GAAOC,EAAQ,KACfC,GAAWD,EAAQ,KAkDlB,SAASE,GAA6BC,GACzC,IAAMC,EA7CH,SAAuBD,GAC1B,IAAMC,EAAY,IAAIL,GAAKM,MAG3B,OAFAD,EAAUE,aAAaH,EAASrF,SAASd,MAAMsD,IAAI,SAAAC,GAAC,MAAI,CAACA,EAAEJ,GAAII,MAC/D6C,EAAUG,aAAaJ,EAASrF,SAASP,MAAM+C,IAAI,SAAAkD,GAAC,MAAI,CAACA,EAAEjC,UAAWiC,EAAEhC,cACjE4B,EAyCWK,CAAcN,GAC1BlE,EAAS8D,GAAKW,kBAAkBN,GAEtC,OADAnH,QAAQC,IAAI,oCACL+C,EAOJ,SAAS0E,GAAoBR,GAEhC,OAtCG,SAA0BA,GAC7B,IACIS,EADAC,EAAS,GAEb,IAAKD,EAAI,EAAGA,EAAIT,EAASrF,SAASd,MAAM8E,OAAQ8B,IAC5CC,EAAOV,EAASrF,SAASd,MAAM4G,GAAGzD,IAAMyD,EAE5C,IAAIE,EAAI,IAAIb,GAASI,MAAMF,EAASrF,SAASd,MAAM8E,QAInD,OAHAqB,EAASrF,SAASP,MAAMyC,QAAQ,SAAAwD,GAC5BM,EAAE5C,QAAQ2C,EAAOL,EAAEjC,WAAYsC,EAAOL,EAAEhC,cAErC,IAAIyB,GAASc,oBAAoBD,GA2B/BE,CAAiBb,GAChBc,iB,4ECzDOC,I,GAkElBpB,aAAWqB,I,GACXrB,aAAWqB,I,oDAjEZnG,oBAAsB,CACpBhB,MAAO,CACLoH,QAAS,WACTC,MAAO,CACL9J,MAAO,eACPoG,KAAM,UACNC,GAAI,WAEN0D,OAAQ,WACRC,KAAM,CACJC,IAAK,EACLC,IAAK,GACLlK,MAAO,gBAETmK,QAAS,UACTC,MAAO,SACPC,UAAW,EACXC,YAAa,K,iFAUjBC,mBAAqB,G,sUA2CrBC,gBAAiB,E,wDAqELC,GACVrC,KAAK7E,SAASd,MAAQ2F,KAAK7E,SAASd,MAAMiI,OACxC,SAAA1E,GAAC,OAAKyE,EAAQE,SAAS3E,EAAEJ,MAE3BwC,KAAK7E,SAASP,MAAQoF,KAAK7E,SAASP,MAAM0H,OACxC,SAAAzB,GAAC,OAAKwB,EAAQE,SAAS1B,EAAEjC,aAAeyD,EAAQE,SAAS1B,EAAEhC,aAE7DlF,GAASsB,MAAMuH,MAAMC,mB,oCAcrB,MAViB,CACftH,SAAU6E,KAAK7E,SACfG,UAAW0E,KAAK1E,UAChB6G,mBAAoBnC,KAAKmC,mBACzBO,UAAW1C,KAAKwC,MAAMG,eACtBvH,SAAU4E,KAAK5E,SACfwH,OAAQ,CACNvI,MAAO2F,KAAK3F,U,0CAaEwI,GAClB,IAAMrC,EAAWR,KAAK8C,cAetB,OAXID,IACEA,EAAeE,aACjBvC,EAASkC,eAAY9F,GAEnBiG,EAAeG,WACjBxC,EAASoC,YAAShG,GAEhBiG,EAAeI,aACjBzC,EAASlF,eAAYsB,IAGlBsG,KAAKC,UAAU3C,K,0CAIJ4C,GAClB,IAAMC,EAAcH,KAAK3G,MAAM6G,GAC/B,GAAKC,EAAL,CAGA,IAAMC,EAAiB,IAAI/H,IACzBiE,OAAO+D,QAAQF,EAAY/H,WAAWqC,IAAI,oCAAE6F,EAAF,KAAKC,EAAL,WAAY,CACpDD,EACA,IAAIjI,IAAIiE,OAAO+D,QAAQE,QAG3BzD,KAAK1E,UAAUoI,QACf1D,KAAK1E,UAAUqI,MAAML,GAEjBD,EAAYjI,WACd4E,KAAK5E,SAAWiI,EAAYjI,UAE1BiI,EAAYT,SACd5C,KAAK3F,MAAQgJ,EAAYT,OAAOvI,OAIlC2F,KAAK7E,SAAWkI,EAAYlI,SACxBkI,EAAYX,YACd1C,KAAK0C,UAAYW,EAAYX,WAE3BW,EAAYlB,qBACdnC,KAAK4D,0BAA4BP,EAAYlB,mBAC7CnC,KAAKmC,mBAAqBkB,EAAYlB,uB,2CAhKxC,OAAO0B,KAAK,GAAD,oBACN7D,KAAK5E,SAASmE,gBADR,aAENS,KAAK5E,SAASsE,gBAChB4C,OAAO,SAAAkB,GAAC,MAAU,OAANA,M,+BAgBf,OAHIxD,KAAK7E,SAASd,MAAM8E,OAAS,IAC/Ba,KAAKoC,gBAAiB,GAEjBpC,KAAKoC,iB,6BAMZ,IADA,IAAM0B,EAAM,GACZ,6BACK9D,KAAK5E,SAASmE,gBADnB,aAEKS,KAAK5E,SAASsE,eAFnB,eAGG,CAHE,IAAMqE,EAAC,KAINlC,EAAMmC,OAAOC,UACbnC,EAAMkC,OAAOE,UAFhB,uBAID,YAAgBlE,KAAK7E,SAASd,MAA9B,+CAAqC,CAAC,IAA3BuD,EAA0B,QACnCiE,EAAMxC,KAAKyC,IAAIzC,KAAKwC,IAAIA,EAAKjE,EAAEmG,IAAK,MACpCjC,EAAMzC,KAAKyC,IAAIA,EAAKlE,EAAEmG,KANvB,kFASDD,EAAIC,GAAK,CAAClC,EAAKC,GAEjB,OAAOgC,I,oCAKP,OAAOnM,EAAOqI,KAAK3F,MAAMuH,KAAKhK,SAC3BuM,OAAOnE,KAAKoE,OAAOpE,KAAK3F,MAAMsH,SAC9B0C,MAAM,CAACrE,KAAK3F,MAAMuH,KAAKC,IAAK7B,KAAK3F,MAAMuH,KAAKE,Q,qCAK/C,OAAOnK,EAAOqI,KAAK3F,MAAMqH,MAAM9J,SAC5BuM,OAAOnE,KAAKoE,OAAOpE,KAAK3F,MAAMoH,UAC9B4C,MAAM,CAACrE,KAAK3F,MAAMqH,MAAM1D,KAAMgC,KAAK3F,MAAMqH,MAAMzD,O,oCAI/B,IAAD,OACZhD,EAAQiC,MAoBd,OAnBA8C,KAAK7E,SAASd,MAAMgD,QAAQ,SAAAO,GAC1B,IAAM0G,EAAW,EAAKhJ,UAAUiJ,IAAI3G,EAAEJ,GAAGC,YACzCxC,EAAMsC,QAAQK,EAAEJ,GAAGC,WAAY,CAC7B+G,MAAQF,GAAYA,EAASC,IAAI,UAAa3G,EAAE,EAAKvD,MAAM0H,SAC3DH,KACG0C,GAAYA,EAASC,IAAI,SAC1B,EAAKE,cAAc7G,EAAE,EAAKvD,MAAMsH,SAClCD,MACG4C,GAAYA,EAASC,IAAI,UAC1B,EAAKG,eAAe9G,EAAE,EAAKvD,MAAMoH,UACnCO,MAAQsC,GAAYA,EAASC,IAAI,UAAa3G,EAAE,EAAKvD,MAAM2H,OAC3DR,IAAK5D,MAIToC,KAAK7E,SAASP,MAAMyC,QAAQ,SAAAwD,GAC1B5F,EAAM0D,QAAQkC,EAAEjC,UAAUnB,WAAYoD,EAAEhC,UAAUpB,cAG7CxC,I,wCA2FP,OAAOsF,GAHU,CACfpF,SAAU6E,KAAK7E,a,iCAUjB,OAAO6F,GAHU,CACf7F,SAAU6E,KAAK7E,e,0CApNlBgF,c,yEACOH,KAAK3E,oBAAoBhB,S,6CAGhC8F,c,wEAA2B,M,yDAI3BA,c,wEAAuC,M,8CAEvCA,c,wEACgB,CACfuB,MAAO,OACPE,KAAM,EACN4C,MAAO,GACPxC,MAAO,a,wCAGR7B,c,wEACU,CACT9F,MAAO,GACPO,MAAO,O,wCAGRuF,c,wEACU,CACTjB,UAAW,EACXE,UAAW,EACXG,eAAgB,GAChBG,aAAc,CAAC,WAAY,UAC3BC,eAAgB,GAChBV,aAAc,iB,iDAIf0F,Y,qMAQuB,Q,sHACI,Q,yCAE3BxE,c,yEAAuB,IAAI5E,O,2CAC3B4E,c,wEAAyB,Y,qCAIzBwE,Y,0GAQAA,Y,+GAoBAA,Y,uHAOAA,Y,uHAOAA,Y,4HA2EAC,U,sFCpMkBC,I,0XAClB1E,c,wEAAuB,M,yCACvBA,c,wEAAuB,M,0CAEvBA,c,yEAAwB,K,uCAExBA,c,yEAAqB,K,yDAGrBA,c,yEAAuC,Q,yDACvCA,c,yEAAuC,Q,4CAEvCA,c,wEACc,CACb5F,SAAU,CACRD,KAAM,GACNwK,KAAM,GACNtK,YAAY,EACZuK,OAAO,EACPtK,QAAS,GACTE,QAAS,CACP6C,GAAI,SAENvD,UAAW,KAEbY,SAAU,CACRP,KAAM,GACNyK,OAAO,EACPvK,YAAY,EACZC,QAAS,GACTqK,KAAM,GACNnK,QAAS,CACPmC,OAAQ,QACRE,KAAM,SAERlC,eAAe,EACfb,UAAW,S,ICpCI+K,I,qiBAElB7E,c,wEAAsB,M,8CAKtBA,c,yEAA4B,Q,mDAG5BA,c,wEAAiC,gB,oDAGjCA,c,wEAAkC,a,sDAKlCA,c,yEAAoC,K,yDACpCA,c,yEAAuC,K,wDACvCA,c,yEAAsC,K,0DACtCA,c,yEAAwC,K,0CAIxCA,c,yEAAwB,K,8CAKxBA,c,wEAA4B,M,IC9BV8E,I,2OAClB9E,c,wEAAuB,M,0CACvBA,c,wEAAwB,M,6CACxBA,c,yEAA2B,K,yCAC3BA,c,yEAAuB,K,ICmBpBxG,GAAW,IATf,aAAe,oBACbqG,KAAKkF,YAAc,IAAItF,GACvBI,KAAK/E,MAAQ,IAAIsG,GACjBvB,KAAKpG,OAAS,IAAIiL,GAClB7E,KAAKmF,OAAS,IAAIF,GAClBjF,KAAKoF,QAAU,IAAIJ,IAMvBK,OAAO1L,SAAWA,GAElB,IAiBM2L,GAAgC,SAACC,IAjBX,SAACA,GAC3B,OAAOC,MAAMD,EAAK,CAChBE,OAAQ,MACRC,KAAM,SACL1K,KAAK,SAAA2K,GAAQ,OAAIA,EAASC,UAc7BC,CAAoBN,GAAKvK,KAAK,SAAA8K,GAE5BnM,GAASsB,MAAMG,SAAS6D,aAAesG,EAAIQ,MAAM,KAAKC,OAAST,EAAIQ,MAAM,KAAKC,MAAMA,MACpFrM,GAASsB,MAAMgL,oBAAoBH,MAIjCI,GAAmC,SAACC,IAlBX,SAACA,GAC9B,IAAMZ,EAAG,UTlCgB,mCSkChB,2BAAoCY,GAC7C,OAAOX,MAAMD,EAAK,CAChBE,OAAQ,MACRC,KAAM,SACL1K,KAAK,SAAA2K,GAAQ,OAAIA,EAASS,SAAQpL,KAAK,SAAAoL,GAAI,OAAIA,EAAK,GAAGC,OAAMC,MAAM,SAAAC,OActEC,CAAuBL,GAAMnL,KAAK,SAAA8K,GAEhCnM,GAASsB,MAAMG,SAAS6D,aAAe,SACvCtF,GAASsB,MAAMgL,oBAAoBH,MAIvCT,OAAOC,8BAAgCA,GAEvCD,OAAOoB,uBAAP,qBAAgC,8BAAA7K,EAAA,wDAE1B2J,EAAM,+DAGNF,OAAOqB,SAASC,KALU,sBAMtBA,EAAOtB,OAAOqB,SAASC,KAAKC,UAAU,IAEnCzH,QAAU,GAAKwH,EAAKE,WAAW,SARZ,gBAS1B,IACEtB,EAAMuB,mBAAmBH,GACzB,MAAO9F,GACPvH,QAAQiN,MAAM1F,GACdkG,MAAM,8BAbkB,6BAkB1Bb,GAAiCS,GAlBP,0BAuB9BrB,GAA8BC,GAvBA,0CA0BhCF,OAAO2B,qBAAuB,WAE5B,OADuBrN,GAASsB,MAAMgM,uBAKxC5B,OAAO6B,iBAAiB,OAAQ,SAACC,GAC/B9B,OAAOoB,2BAOTW,kBAAQ,YACDzN,GAASsB,MAAMoM,UAAY1N,GAASsB,MAAME,SAASd,MAAM8E,OAAS,IACrExF,GAASsB,MAAMoM,UAAW,KAI9BD,kBAAQ,WACFzN,GAASsB,MAAMuH,QACjB7I,GAASsB,MAAMuH,MAAM8E,YAAY3N,GAASsB,MAAMsM,eAChD5N,GAASsB,MAAMuH,MAAMgF,iBAAiB7N,GAASsB,MAAMZ,MAAM2H,OAC3DrI,GAASsB,MAAMuH,MAAMiF,qBAAqB9N,GAASsB,MAAMZ,MAAM4H,WAC/DtI,GAASsB,MAAMuH,MAAMkF,eAAe/N,GAASsB,MAAMZ,MAAM6H,gBAI7DkF,kBAAQ,WACFzN,GAASsB,MAAMuH,OAAS7I,GAASsB,MAAMyH,YAEzC/I,GAASsB,MAAMuH,MAAMmF,QAAS,EAC9BhO,GAASsB,MAAMuH,MAAMoF,gBAAgBjO,GAASsB,MAAMyH,WACpD/I,GAASsB,MAAMyH,UAAY,KAC3BpJ,QAAQC,IAAI,iCAEVI,GAASsB,MAAMuH,OAAS7I,GAASsB,MAAM2I,4BACzCjK,GAASsB,MAAMuH,MAAMqF,WAAWlO,GAASsB,MAAM2I,2BAC/CjK,GAASsB,MAAM2I,0BAA4B,QAI/CwD,kBAAQ,WACN,IAAMU,EAAYnO,GAASwL,OAAO2C,UAC9BA,EAAU3I,QAAU,EPwWnB,SAAmB2I,GACxB3O,GAAYC,KAAKT,EAAgBmP,EAAWnO,GAASsB,MAAM8M,aOxWzDC,CAAUF,IAEVnO,GAASwL,OAAO8C,WAAY,EAC5BtO,GAASwL,OAAO+C,WAAWC,OAAO,EAAGxO,GAASwL,OAAO+C,WAAW/I,QAC5DxF,GAASsB,MAAMuH,OACjB7I,GAASsB,MAAMuH,MAAM4F,iBAAiB,IAAI,MAMhDhB,kBAAQ,WACN,IAAMvL,EAAOlC,GAASC,OAAOkE,0BACvBnC,EAAYhC,GAASC,OAAOQ,aAAaS,SAASL,WAClDP,EAAYN,GAASC,OAAOQ,aAAaS,SAASZ,UAExD,GAAK4B,EAAL,CAGA,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,WAAWH,GAElBC,EAAOM,OAAS,WAEd,IAEMiM,EAFevM,EAAOQ,OAEDyJ,MAAM,MAE3BuC,GADaD,EAAMlJ,OACAkJ,EAAM1K,IAAI,SAAA4K,GAAC,OAAIA,EAAE9L,SAAQ6F,OAAO,SAACiG,EAAGtH,GAAJ,OAAUA,EAAI,KAAIuH,KAAK,OAChFlP,QAAQC,IAAI+O,GAGZ,IACE,IAAMvK,EAAKpC,EAAYY,KAAM+L,EAAkB,CAC7C9L,QAAS,IACTC,MAAM,EACNC,YAAY,EACZC,kBAAkB,EAClBlC,QAASkB,EACT1B,cACGsC,KAAM+L,EAAkB,CAC3B9L,QAAS,IACTC,MAAM,EACNC,YAAY,EACZC,kBAAkB,EAClBlC,aAASmC,EACT3C,cAEFiB,sBAAY,mCAAoC,WAC9CvB,GAASC,OAAOQ,aAAaS,SAASiK,KAAO/G,EAC7CpE,GAASC,OAAOQ,aAAaS,SAASJ,QAAU+E,OAAOC,KAAK1B,EAAG,IAAIJ,IAAI,SAAA8K,GAAG,gBAAOA,KACjF9O,GAASC,OAAOQ,aAAaS,SAASF,QAAQmC,OAASnD,GAASC,OAAOQ,aAAaS,SAASJ,QAAQ,GACrGd,GAASC,OAAOQ,aAAaS,SAASF,QAAQqC,KAAOrD,GAASC,OAAOQ,aAAaS,SAASJ,QAAQ,GACnGd,GAASC,OAAOQ,aAAaS,SAASkK,OAAQ,IAEhD,SACAlM,EAAQ6P,KAAK,CACXC,QAAS,6BACTC,OAAQC,IAAOC,OACfC,SAAU,MAKhBjN,EAAOkN,QAAU,WACf1P,QAAQiN,MAAMzK,EAAOyK,OACrB1N,EAAQ6P,KAAK,CACXC,QAAS,4BACTC,OAAQC,IAAOC,OACfC,SAAU,QAKhB3B,kBAAQ,WACN,IAAMvL,EAAOlC,GAASC,OAAOwD,0BACvBzB,EAAYhC,GAASC,OAAOQ,aAAaG,SAASC,WAClDP,EAAYN,GAASC,OAAOQ,aAAaG,SAASN,UAExD,GAAK4B,EAAL,CAGA,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,WAAWH,GAElBC,EAAOM,OAAS,WAEd,IAEMiM,EAFevM,EAAOQ,OAEDyJ,MAAM,MAE3BuC,GADaD,EAAMlJ,OACAkJ,EAAM1K,IAAI,SAAA4K,GAAC,OAAIA,EAAE9L,SAAQ6F,OAAO,SAACiG,EAAGtH,GAAJ,OAAUA,EAAI,KAAIuH,KAAK,OAChFlP,QAAQC,IAAI+O,GAGZ,IACE,IAAMvK,EAAKpC,EAAYY,KAAM+L,EAAkB,CAC7C9L,QAAS,IACTC,MAAM,EACNC,YAAY,EACZC,kBAAkB,EAClBlC,QAASkB,EACT1B,cACGsC,KAAM+L,EAAkB,CAC3B9L,QAAS,IACTC,MAAM,EACNC,YAAY,EACZC,kBAAkB,EAClBlC,aAASmC,EACT3C,cAGFiB,sBAAY,mCAAoC,WAC9CvB,GAASC,OAAOQ,aAAaG,SAASuK,KAAO/G,EAC7CpE,GAASC,OAAOQ,aAAaG,SAASE,QAAU+E,OAAOC,KAAK1B,EAAG,IAAIJ,IAAI,SAAA8K,GAAG,gBAAOA,KACjF9O,GAASC,OAAOQ,aAAaG,SAASI,QAAQmC,OAASnD,GAASC,OAAOQ,aAAaG,SAASE,QAAQ,GACrGd,GAASC,OAAOQ,aAAaG,SAASI,QAAQqC,KAAOrD,GAASC,OAAOQ,aAAaG,SAASE,QAAQ,GACnGd,GAASC,OAAOQ,aAAaG,SAASwK,OAAQ,IAEhD,SACAlM,EAAQ6P,KAAK,CACXC,QAAS,4BACTC,OAAQC,IAAOC,OACfC,SAAU,MAKhBjN,EAAOkN,QAAU,WACf1P,QAAQiN,MAAMzK,EAAOyK,OACrB1N,EAAQ6P,KAAK,CACXC,QAAS,4BACTC,OAAQC,IAAOC,OACfC,SAAU,QAKDpP,I,sDAAAA,MC1MAsP,GAjEdC,Y,oLAGG,OACE,kBAAC,IAAD,CACEC,SAAS,MACTC,UAAWC,IAAW,eACnBC,IAAQC,KAAO5P,GAASuL,YAAYnF,WAEvCyJ,OAAQ7P,GAASuL,YAAY1J,WAC7BiO,QAAS,WACP9P,GAASuL,YAAY1J,YAAa,GAEpCkO,MAAM,eAEN,yBAAKN,UAAU,kBACb,kBAAC,IAAD,CACE5E,MAAM,YACNmF,QAAShQ,GAASuL,YAAYnF,SAC9B6J,SAAU,WACRjQ,GAASuL,YAAYnF,UAAYpG,GAASuL,YAAYnF,SACtDpG,GAASuL,YAAY2E,iBACjBlQ,GAASsB,MAAMuH,OACjB7I,GAASsB,MAAMuH,MAAMsH,gBAK3B,6FACA,yBAAKV,UAAWC,IAAWC,IAAQS,gBACjC,yBAAKX,UAAWC,IAAWC,IAAQU,YAAaV,IAAQW,OACtD,2BACEC,KAAK,OACLd,UAAWC,IAAWC,IAAQa,SAAUb,IAAQc,OAChDC,YAAY,6BACZC,UAAQ,EACRC,MAAO5Q,GAASuL,YAAYhF,iBAGhC,kBAAC,IAAD,CACE0I,OAAQC,IAAO2B,QACfC,QAAS,WRwdrBtR,GAAYC,KAAKlB,KQ1dP,sBAUJ,yBAAKkR,UAAU,oBACb,yBAAKA,UAAU,4BACb,kBAAC,IAAD,CACER,OAAQC,IAAO2B,QACfC,QAAS,WACP9Q,GAASuL,YAAY1J,YAAa,GAEpCoK,KAAK,gB,GAvDa8E,IAAMC,a,sDCJvB,mBAAGC,EAAH,EAAGA,KAAMpB,EAAT,EAASA,OAAQqB,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,SAA3B,OACb,6BACE,kBAAC,IAAD,CACE1B,UAAWC,IAAWC,IAAQW,KAAMX,IAAQyB,QAAS,mBACrDC,cAAexB,EAAS,aAAe,eACvCiB,QAASI,GAERD,GAEH,kBAAC,KAAD,CAAUpB,OAAQA,GAASsB,K,mBCVhB,mBAAGG,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,SAAtB,OACb,kBAAC,KAAD,CACE/B,UAAW+B,EAAW7B,IAAQ8B,OAAS,GACvC3C,IAAKyC,EACLT,QAASQ,EACTrF,KAAMsF,KCHK,mBAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUf,EAApB,EAAoBA,MAApB,IAA2BgB,YAA3B,gBACb,kBAAC,KAAD,CACEF,MAAOA,EACPG,aAAcC,GACdC,YAAY,EACZC,aAAcL,GAEd,kBAAC,IAAD,CAAQlC,UAAWmC,EAAOjC,IAAQW,KAAO,KAAMrE,KAAM2E,MCanDqB,GADL1C,Y,oLAGG,IAAMrN,EAAOmE,KAAK6L,MAAMhQ,KACxB,OACE,kBAAC,KAAD,CACEuN,UAAU,uBACV0C,QAASjQ,EAAKiJ,KAAK3F,OACnB4M,gBAAiBvM,OAAOwM,OAAOnQ,EAAKlB,SACjCgD,IAAI,SAAAI,GAAE,OAAIlC,EAAKpB,QAAQwR,QAAQlO,KAC/BJ,IAAI,SAAAI,GAAE,MAAK,CAAEmO,KAAM,KAAMC,KAAM,CAACpO,EAAIA,OAEtClC,EAAKpB,QAAQkD,IAAI,SAAAI,GAAE,OAClB,kBAAC,KAAD,CACE0K,IAAK1K,EACL6M,KAAM7M,EACNqO,WAAY,SAAAnL,GAAC,OAAI,kBAAC,KAAD,KAAOpF,EAAKiJ,KAAK7D,GAAGlD,c,GAftB2M,IAAMC,a,GA8OlB0B,GAvNdnD,Y,eAEC,WAAY2C,GAAQ,IAAD,8BACjB,4CAAMA,KASRS,gBAAkB,SAAAC,GACZA,IAAgBjU,IAClBqB,GAASC,OAAOQ,aAAaS,SAASC,eAAgB,GAExD,EAAK0R,SAAS,CAAEC,UAAWF,KAdV,EAiBnBG,UAAY,WACV,OAAI,EAAKC,MAAMF,YAAcpU,EAEzBsB,GAASC,OAAOQ,aAAaS,SAASkK,OACtCpL,GAASC,OAAOQ,aAAaG,SAASwK,MAE/B,EAAK4H,MAAMF,YAAcnU,GAC3BqB,GAASC,OAAOQ,aAAaS,SAASkK,OAxB9B,EA6BnB6H,qBAAuB,WACrB,IAAMrS,EAAWZ,GAASC,OAAOQ,aAAaG,SAC9C,OAAI,EAAKoS,MAAMF,YAAcnU,EACpB,KAGP,kBAACuU,GAAD,CACEjC,KAAK,QACLpB,OAAQ,EAAKmD,MAAMG,UACnBjC,SAAU,kBAAM,EAAK2B,SAAS,CAAEM,WAAY,EAAKH,MAAMG,cAEvD,yBAAK1D,UAAWC,IAAWC,IAAQS,gBACjC,yBAAKX,UAAWC,IAAWC,IAAQU,YAAaV,IAAQW,OACtD,2BACEC,KAAK,OACLd,UAAWC,IAAWC,IAAQa,UAC9BP,SAAU,SAACzC,GACLA,EAAM4F,OAAOC,MAAM7N,OAAS,IAGhCxF,GAASC,OAAOwD,0BAA4B+J,EAAM4F,OAAOC,MAAM,SAKvE,kBAAC,IAAD,CACExI,MAAM,cACNmF,QAASpP,EAASC,WAClBoP,SAAU,kBAAOrP,EAASC,YAAcD,EAASC,cAElDD,EAASwK,OACR,yBAAKqE,UAAU,oBACb,kBAAC,GAAD,CAAcvN,KAAMtB,IADtB,sBAGE,kBAAC0S,GAAD,CACE5B,MAAO9Q,EAASE,QAChB8P,MAAOhQ,EAASI,QAAQ6C,GACxB8N,SAAU,SAAAvN,GAAE,OAAKxD,EAASI,QAAQ6C,GAAKO,QAlEhC,EA0EnBmP,qBAAuB,WACrB,IAAMrS,EAAWlB,GAASC,OAAOQ,aAAaS,SAC9C,OACE,kBAACgS,GAAD,CACEjC,KAAK,QACLpB,OAAQ,EAAKmD,MAAMQ,UACnBtC,SAAU,kBAAM,EAAK2B,SAAS,CAAEW,WAAY,EAAKR,MAAMQ,cAEvD,yBAAK/D,UAAWC,IAAWC,IAAQS,gBACjC,yBAAKX,UAAWC,IAAWC,IAAQU,YAAaV,IAAQW,OACtD,2BACEC,KAAK,OACLd,UAAWC,IAAWC,IAAQa,UAC9BP,SAAU,SAACzC,GACLA,EAAM4F,OAAOC,MAAM7N,OAAS,IAGhCxF,GAASC,OAAOkE,0BAA4BqJ,EAAM4F,OAAOC,MAAM,SAKvE,kBAAC,IAAD,CACExI,MAAM,cACNmF,QAAS9O,EAASL,WAClBoP,SAAU,kBAAO/O,EAASL,YAAcK,EAASL,cAEnD,kBAAC,IAAD,CACEgK,MAAM,uBACNmF,QAAS9O,EAASC,cAClBsS,SAAU,EAAKT,MAAMF,YAAcnU,EACnCsR,SAAU,kBAAO/O,EAASC,eAAiBD,EAASC,iBAErDD,EAASkK,OACR,yBAAKqE,UAAU,oBACb,kBAAC,GAAD,CAAcvN,KAAMhB,IADtB,wBAGE,kBAACoS,GAAD,CACE5B,MAAOxQ,EAASJ,QAChB8P,MAAO1P,EAASF,QAAQmC,OACxBwO,SAAU,SAAAvN,GAAE,OAAKlD,EAASF,QAAQmC,OAASiB,KAC1C,IACH,6BARF,wBAUE,kBAACkP,GAAD,CACE5B,MAAOxQ,EAASJ,QAChB8P,MAAO1P,EAASF,QAAQqC,KACxBsO,SAAU,SAAAvN,GAAE,OAAKlD,EAASF,QAAQqC,KAAOe,QAvHnD,EAAK4O,MAAQ,CACXF,UAAWnU,EACXwU,WAAW,EACXK,WAAW,EACXlT,UAAW,KANI,E,6EAiIFoT,GACfrN,KAAKwM,SAAS,CAACvS,UAAWoT,IAEN,OAAhBA,IACFA,EAAe,MAGjB1T,GAASC,OAAOQ,aAAaS,SAASZ,UAAYoT,EAClD1T,GAASC,OAAOQ,aAAaG,SAASN,UAAYoT,I,iDAGxB,IAAD,OACzB,OACE,yBAAKjE,UAAU,oBAAf,qBAEE,kBAAC6D,GAAD,CACE5B,MAAO,CAAC,IAAK,MAAO,KACpBd,MAAOvK,KAAK2M,MAAM1S,UAClBqR,SAAU,SAAAvN,GAAQ,EAAKuP,gBAAgBvP,MACtC,O,+BAKC,IAAD,OACP,OACE,kBAAC,IAAD,CACEoL,SAAS,SACTC,UAAWC,IAAW,eACnBC,IAAQC,KAAO5P,GAASuL,YAAYnF,WAEvCyJ,OAAQ7P,GAASC,OAAO4B,WACxBiO,QAAS,WACP9P,GAASC,OAAO4B,YAAa,GAE/BkO,MAAM,cAEL/P,GAASC,OAAOO,QACf,kBAAC,KAAD,MAEA,6BACE,yBAAKiP,UAAWC,IAAWC,IAAQiE,YAAa,kBAAhD,UAEE,kBAACN,GAAD,CACE5B,MAAO,CAAC/S,EAAgBD,GACxBkS,MAAOvK,KAAK2M,MAAMF,UAClBnB,SAAUtL,KAAKsM,kBAEhBtM,KAAK4M,uBACL5M,KAAKkN,uBACLlN,KAAKwN,4BAER,yBAAKpE,UAAWE,IAAQmE,eACtB,yBAAKrE,UAAWE,IAAQoE,uBACtB,kBAAC,IAAD,CACEtE,UAAWC,IAAW,eACnBC,IAAQa,UAAYnK,KAAK0M,cAE5B9D,OAAQC,IAAO2B,QACfC,QAAS,WZyQpB,IAAiCkD,IYvQI,CACtB/C,KAAMjR,GAASyL,QAAQlL,eACvB0T,aAAa,IAAIC,MAAOC,kBZsQ5C3U,GAAYC,KAAKpB,EAAoB2V,GYpQnB5T,GACE,EAAK4S,MAAMF,YAAcpU,EAAoBsB,GAASC,OAAOQ,aAAaS,SAASZ,UAAWN,GAASyL,QAAQlL,gBAKjHP,GAASsB,MAAMuH,MAAMuL,2BAEvBnI,KAAK,mB,GA3MI8E,IAAMC,a,GC4FlBqD,GAnHd9E,Y,eAEC,WAAY2C,GAAQ,IAAD,8BACjB,4CAAMA,KAQRa,UAAY,WACV,OAAI,EAAKC,MAAMF,YAAclU,EACpBoB,GAASC,OAAOE,WAAaH,GAASC,OAAOC,UAE7CF,GAASC,OAAOC,WAbR,EAkBnByS,gBAAkB,SAAAC,GACZA,IAAgBjU,IAClBqB,GAASC,OAAOQ,aAAaS,SAASC,eAAgB,GAExD,EAAK0R,SAAS,CAAEC,UAAWF,KAtBV,EAyBnB0B,kBAAoB,WAClB,OACE,yBAAK7E,UAAWC,IAAWC,IAAQS,gBACjC,yBAAKX,UAAWC,IAAWC,IAAQU,YAAaV,IAAQW,OACtD,2BACEC,KAAK,OACLd,UAAWC,IAAWC,IAAQa,SAAUb,IAAQc,OAChDC,YAAY,oBACZC,UAAQ,EACRC,MAAO5Q,GAASC,OAAOC,aAG3B,kBAAC,IAAD,CAAQ+O,OAAQC,IAAO2B,QAASC,QAASjR,IAAzC,iBArCa,EA4CnB0U,kBAAoB,WAClB,OACE,yBAAK9E,UAAWC,IAAWC,IAAQS,gBACjC,yBAAKX,UAAWC,IAAWC,IAAQU,YAAaV,IAAQW,OACtD,2BACEC,KAAK,OACLd,UAAWC,IAAWC,IAAQa,SAAUb,IAAQc,OAChDC,YAAY,uBACZC,UAAQ,EACRC,MAAO5Q,GAASC,OAAOE,aAG3B,kBAAC,IAAD,CAAQ8O,OAAQC,IAAO2B,QAASC,QAAShR,IAAzC,iBAtDJ,EAAKkT,MAAQ,CACXF,UAAWjU,EACX2V,cAAe,KACfC,cAAe,MALA,E,sEAgEjB,OACE,kBAAC,IAAD,CACEjF,SAAS,SACTC,UAAWC,IAAW,eACnBC,IAAQC,KAAO5P,GAASuL,YAAYnF,WAEvCyJ,OAAQ7P,GAASuL,YAAYmJ,eAC7B5E,QAAS,WACP9P,GAASuL,YAAYmJ,gBAAiB,GAExC3E,MAAM,aAEL/P,GAASC,OAAOO,QACf,kBAAC,KAAD,MAEA,6BACE,yBAAKiP,UAAWC,IAAWC,IAAQiE,YAAa,kBAAhD,UAEE,kBAACN,GAAD,CACE5B,MAAO,CAAC9S,EAAsBC,GAC9B+R,MAAOvK,KAAK2M,MAAMF,UAClBnB,SAAUtL,KAAKsM,kBAEhBtM,KAAKiO,oBACLjO,KAAK2M,MAAMF,YAAclU,GACxByH,KAAKkO,qBAET,yBAAK9E,UAAWE,IAAQmE,eACtB,yBAAKrE,UAAWE,IAAQoE,uBACtB,kBAAC,IAAD,CACEtE,UAAWC,IAAW,eACnBC,IAAQa,UAAYnK,KAAK0M,cAE5B9D,OAAQC,IAAO2B,QACfC,QAAS,WACP9Q,GAASuL,YAAYmJ,gBAAiB,EACtC3U,MAEFkM,KAAK,iB,GAvGE8E,IAAMC,a,GCyChB2D,GAvDdpF,Y,oLAIG,IAAMqF,EAA4B5U,GAASyL,QAAQoJ,SAASC,KAAK,SAAA1K,GAAC,OAAIA,EAAE6G,OAASjR,GAASyL,QAAQlL,iBAC5FwU,EAAmE,KAA3C/U,GAASyL,QAAQlL,eAAeuC,OACxDkS,IAAgBJ,GAA6BG,GAEnD,OACE,kBAAC,IAAD,CACEvF,SAAS,WACTK,OAAQ7P,GAASyL,QAAQwJ,uBACzBnF,QAAS,WACP9P,GAASyL,QAAQwJ,wBAAyB,GAE5ClF,MAAM,sBAEN,yBAAKN,UAAWE,IAAQiE,aACtB,2BAAOnE,UAAU,sBAAjB,eAEE,0BAAMA,UAAU,iBAAhB,cAA4CmF,GAA6B,wCACzE,2BACEnF,UAAU,WACVc,KAAK,OACLG,YAAY,cACZwE,IAAI,OACJtE,MAAO5Q,GAASyL,QAAQlL,eACxB0P,SAAU,SAAAzC,GACRxN,GAASyL,QAAQlL,eAAiBiN,EAAM4F,OAAOxC,WAKvD,yBAAKnB,UAAWE,IAAQmE,eACtB,yBAAKrE,UAAWE,IAAQoE,uBACtB,kBAAC,IAAD,CACEtE,UAAWC,IAAW,eACnBC,IAAQa,UAAYwE,IAEvB/F,OAAQC,IAAO2B,QACfC,QAAS,WACHkE,IACFhV,GAASyL,QAAQwJ,wBAAyB,EAC1CjV,GAASC,OAAO4B,YAAa,IAGjCoK,KAAK,gB,GA7CY8E,IAAMC,a,sBC6FtBmE,GA5Fd5F,Y,oLAGG,OACEvP,GAASyL,QAAQ2J,gBACf,kBAAC,IAAD,CACE5F,SAAS,WACTK,OAAQ7P,GAASyL,QAAQ4J,0BACzBvF,QAAS,WACP9P,GAASyL,QAAQ4J,2BAA4B,GAE/CtF,MAAK,eAAU/P,GAASyL,QAAQ2J,eAAenE,KAA1C,aAEJjR,GAASyL,QAAQ2J,eAAeE,aAC/B,yBAAK7F,UAAWE,IAAQiE,aACtB,kBAAC,KAAD,CACE2B,aAAa,EACbC,UAAWC,KAAKC,cAChB5E,QAAS,WACP9Q,GAASC,OAAOC,UACdF,GAASyL,QAAQ2J,eAAeO,cAClC3V,GAASyL,QAAQ4J,2BAA4B,EAC7CtV,OAGF,kBAAC,KAAD,CAAMyP,SAAS,UAVjB,oCAYA,6BACA,yBAAKC,UAAU,yBAAf,yBACA,6BACGzP,GAASyL,QAAQ2J,eAAeQ,cAAc5R,IAC7C,SAAA6R,GACE,OACE,yBAAK/G,IAAK+G,GACR,kBAAC,KAAD,CACEN,aAAa,EACbC,UAAWC,KAAKC,eAGhB,4BACGG,EACEC,QAAQ,YAAa,IACrBA,QAAQ,aAAa,KAE1B,kBAAC,IAAD,CACErG,UAAWC,IAAW,CACpBC,IAAQoG,OACRpG,IAAQqG,iBAEVlF,QAAS,WACP9Q,GAASC,OAAOC,UACdF,GAASyL,QAAQ2J,eAAeO,cAClC3V,GAASC,OAAOE,UAAY0V,EAC5B7V,GAASyL,QAAQwK,oBAAsBJ,EACpCC,QAAQ,YAAa,IACrBA,QAAQ,aAAa,IACxB9V,GAASyL,QAAQ4J,2BAA4B,EAC7CtV,OAbJ,iBAkBA,kBAAC,IAAD,CACE0P,UAAWC,IAAW,CAACC,IAAQoG,SAC/BjF,QAAS,WfqP9B,IAAuBoF,IenPcL,EfoP1CrW,GAAYC,KAAKnB,EAAa4X,GenPFlW,GAASyL,QAAQ2J,eAAeQ,cAAgB5V,GAASyL,QAAQ2J,eAAeQ,cAAcjN,OAC5F,SAAAhI,GAAI,OAAIA,IAASkV,MANvB,gBAoBd,mG,GAjFsB9E,IAAMC,a,GCyEzBmF,GA/Dd5G,Y,oLAUG,OACI,kBAAC,IAAD,CACEC,SAAS,WACTK,OAAQ7P,GAASyL,QAAQ2K,yBACzBtG,QAAS,WACP9P,GAASyL,QAAQ2K,0BAA2B,GAE9CrG,MAAK,iBAEL,yBAAKN,UAAWC,IAAWC,IAAQiE,cAajC,yJACA,2BAAO/P,GAAG,oBAAoB0M,KAAK,WAAWK,MAAO5Q,GAASyL,QAAQ4K,qBAAsB1F,UAAQ,IACpG,4BACEG,QAAS,WACPwF,SAASC,eAAe,qBAAqBC,SAC7CF,SAASG,YAAY,UAHzB,sBAUF,yBAAKhH,UAAWE,IAAQmE,eACtB,yBAAKrE,UAAWE,IAAQoE,uBACtB,kBAAC,IAAD,CAIE9E,OAAQC,IAAO2B,QACfC,QAAS,WACP9Q,GAASyL,QAAQ2K,0BAA2B,GAE9CnK,KAAK,gB,GArDY8E,IAAMC,a,GCyCxBmF,GAtDd5G,Y,eAEC,WAAY2C,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACX/B,KAAM,IAHS,E,sEAOT,IAAD,OACP,OACI,kBAAC,IAAD,CACEzB,SAAS,WACTK,OAAQ7P,GAASyL,QAAQiL,2BACzB5G,QAAS,WACP9P,GAASyL,QAAQiL,4BAA6B,GAEhD3G,MAAK,mBAEL,yBAAKN,UAAWC,IAAWC,IAAQiE,cACjC,2BAAOnE,UAAU,sBAAjB,gBAEE,0BAAMA,UAAU,iBAAhB,eACA,2BACEA,UAAU,WACVc,KAAK,OACLG,YAAY,cACZwE,IAAI,OACJtE,MAAOvK,KAAK2M,MAAM/B,KAClBhB,SAAU,SAAAzC,GAAK,OAAI,EAAKqF,SAAS,CAAE5B,KAAMzD,EAAM4F,OAAOxC,aAK5D,yBAAKnB,UAAWE,IAAQmE,eACtB,yBAAKrE,UAAWE,IAAQoE,uBACtB,kBAAC,IAAD,CACEtE,UAAWC,IAAW,eACnBC,IAAQa,UAAYnK,KAAK2M,MAAM/B,OAElChC,OAAQC,IAAO2B,QACfC,QAAS,WACP9Q,GAASsB,MAAMG,SAAS6D,aAAe,EAAK0N,MAAM/B,KAClDjR,GAASyL,QAAQiL,4BAA6B,GAEhDzK,KAAK,gB,GA5CY8E,IAAMC,a,GC0ExB2F,GA9EdpH,Y,eAEC,WAAY2C,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACT4D,aAAc,MAHD,E,sEAOT,IAAD,OACP,OACE,kBAAC,IAAD,CACEpH,SAAS,SACTC,UAAWC,IAAW,eACnBC,IAAQC,KAAO5P,GAASuL,YAAYnF,WAEvCyJ,OAAQ7P,GAASuL,YAAYsL,uBAC7B/G,QAAS,WACP9P,GAASuL,YAAYsL,wBAAyB,GAEhD9G,MAAM,aAEN,6BACI,yBAAKN,UAAWC,IAAWC,IAAQiE,cAC/B,yBAAKnE,UAAWC,IAAWC,IAAQS,gBAC/B,yBAAKX,UAAWC,IAAWC,IAAQU,YAAaV,IAAQW,OACpD,2BACIC,KAAK,OACLd,UAAWC,IAAWC,IAAQa,UAC9BP,SAAU,SAACzC,GACHA,EAAM4F,OAAOC,MAAM7N,OAAS,GAGhC,EAAKqN,SAAS,CACV+D,aAAcpJ,EAAM4F,OAAOC,MAAM,WAOzD,yBAAK5D,UAAWE,IAAQmE,eACtB,yBAAKrE,UAAWE,IAAQoE,uBACtB,kBAAC,IAAD,CACEtE,UAAWC,IAAW,eACnBC,IAAQa,UAAYnK,KAAK2M,MAAM4D,eAElC3H,OAAQC,IAAO2B,QACfC,QAAS,WAEP9Q,GAASuL,YAAYsL,wBAAyB,EAG9C3X,EAAQ6P,KAAK,CACTC,QAAS,yCACTC,OAAQC,IAAO4H,KACf1H,QAAS,MAIb,IAAMjN,EAAS,IAAIC,WACnBD,EAAOE,WAAW,EAAK2Q,MAAM4D,cAE7BzU,EAAOM,OAAS,WACZ,IAAMsU,EAAe5U,EAAOQ,OAC5B3C,GAASsB,MAAMgL,oBAAoByK,KAGzC9K,KAAK,iB,GAnEU8E,IAAMC,a,aCKjCgG,GAAStQ,EAAQ,KA6JRuQ,GA3Jd1H,Y,eAEC,WAAY2C,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACXkE,UAAU,EACVC,YAAY,EACZC,UAAW,yBAGb,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,iBARJ,E,mHAWC9K,G,6EAEZ+K,E,UrB/BiB,mC,uBqBiCV1L,MAAM0L,EAAY,CAC3BzL,OAAQ,OACRC,KAAM,OACNyL,MAAO,WACPC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,cACVhL,KAAMnD,KAAKC,UAAU,CACjBgD,OACAE,KAAMhB,OAAO2B,2BAElBhM,KAAK,SAAA2K,GAAQ,OAAIA,EAAS2L,KAAIhL,MAAM,SAAAC,GACnC1N,EAAQ6P,KAAK,CACTC,QAAS,yDACTC,OAAQC,IAAOC,OACfC,SAAU,M,uKAKV,IAAD,OACP,OACI,kBAAC,IAAD,CACII,SAAS,WACTK,OAAQ7P,GAASuL,YAAYqM,gBAC7B9H,QAAS,WACT9P,GAASuL,YAAYqM,iBAAkB,GAEvC7H,MAAK,eAEL,yBAAKN,UAAWC,IAAWC,IAAQiE,eAE9BvN,KAAK2M,MAAMkE,UACR,sKAIJ7Q,KAAK2M,MAAMmE,YACP,2BAAG,mEAIP9Q,KAAK2M,MAAMkE,UACP,6DAEI,2BAAOrT,GAAG,oBAAoB0M,KAAK,WAAWK,MAAOvK,KAAK2M,MAAMoE,UAAWzG,UAAQ,IACnF,4BACIG,QAAS,WACLwF,SAASC,eAAe,qBAAqBC,SAC7CF,SAASG,YAAY,UAH7B,uBAaZ,yBAAKhH,UAAWE,IAAQmE,eACpB,yBAAKrE,UAAWE,IAAQoE,wBAEf1N,KAAK2M,MAAMkE,UACR,kBAAC,IAAD,CACAzH,UAAWC,IAAW,eACjBC,IAAQa,SAAWnK,KAAK2M,MAAMmE,aAEnClI,OAAQC,IAAO2B,QACfC,QAAO,qBAAE,8BAAA7O,EAAA,4DACL,EAAK4Q,SAAS,CAAEsE,YAAY,IAEtB3K,EAAOwK,KAEPI,EALD,sDAK4D5K,GAL5D,SAQwB,EAAK6K,cAAc7K,GAR3C,cAWD,EAAKqG,SAAS,CAAEsE,YAAY,EAAOD,UAAU,EAAME,eAGnD,EAAKvE,SAAS,CAAEsE,YAAY,EAAOD,UAAU,IAC7ChY,EAAQ6P,KAAK,CACTC,QAAS,+DACTC,OAAQC,IAAOC,OACfC,SAAU,KAlBb,yCAuBTnD,KAAK,UAKT5F,KAAK2M,MAAMkE,UACP,kBAAC,IAAD,CACAzH,UAAWC,IAAW,eACjBC,IAAQa,SAAWnK,KAAK2M,MAAMmE,aAEnClI,OAAQC,IAAO2B,QACfC,QAAO,qBAAE,8BAAA7O,EAAA,4DACL,EAAK4Q,SAAS,CAAEsE,YAAY,EAAMD,UAAU,IAEtC1K,EAAOwK,KAEPI,EALD,sDAK4D5K,GAL5D,SAQwB,EAAK6K,cAAc7K,GAR3C,cAWD,EAAKqG,SAAS,CAAEsE,YAAY,EAAOD,UAAU,EAAME,eAGnD,EAAKvE,SAAS,CAAEsE,YAAY,EAAOD,UAAU,IAC7ChY,EAAQ6P,KAAK,CACTC,QAAS,+DACTC,OAAQC,IAAOC,OACfC,SAAU,KAlBb,yCAuBTnD,KAAK,oC,GA9IP8E,IAAMC,a,GCmEjB6G,GAzEdtI,Y,oLAOG,OACI,kBAAC,IAAD,CACEC,SAAS,WACTK,OAAQ7P,GAASuL,YAAYuM,qBAC7BhI,QAAS,WACP9P,GAASuL,YAAYuM,sBAAuB,GAE9C/H,MAAK,cAEL,yBAAKN,UAAWC,IAAWC,IAAQiE,cACjC,2BAAOnE,UAAWE,IAAQoI,MAAOC,MAAO,CAACC,MAAO,SAC5C,+BACI,4BACI,0CACA,uCAGR,+BACI,4BACI,uCACA,4BAAKjY,GAASsB,MAAMG,SAAS8D,YAEjC,4BACI,uCACA,4BAAKvF,GAASsB,MAAMG,SAASgE,YAEjC,4BACI,8CACA,mDAEJ,4BACI,6CACA,mDAEJ,4BACI,8CACA,mDAEJ,4BACI,sDACA,4BAAMzF,GAASsB,MAAMoM,SAAW1N,GAASuL,YAAYuM,qBAAwB9X,GAASsB,MAAM8F,kBAAoB,kBAEpH,4BACI,mDACA,4BAAMpH,GAASsB,MAAMoM,SAAW1N,GAASuL,YAAYuM,qBAAwB9X,GAASsB,MAAM4W,WAAa,qBAMvH,yBAAKzI,UAAWE,IAAQmE,eACtB,yBAAKrE,UAAWE,IAAQoE,uBACtB,kBAAC,IAAD,CACE9E,OAAQC,IAAO2B,QACfC,QAAS,WACP9Q,GAASuL,YAAYuM,sBAAuB,GAE9C7L,KAAK,gB,GA/DU8E,IAAMC,a,GCHhBmH,G,iLAEjB,OACE,yBAAKH,MAAO,CAAEI,QAAS,SACrB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GAb6BtH,IAAMC,W,2DCsO5BsH,GA5Nd/I,Y,oLAEW,IAAD,OACP,OACE,yBAAKE,UAAWC,IAAW,CAACC,IAAQ4I,UAClC,yBAAK9I,UAAWC,IAAW,CAACC,IAAQ6I,aAAc7I,IAAQ8I,cACxD,yBAAKhJ,UAAWC,IAAW,CAACC,IAAQ+I,kBAApC,QAA2D,wCAc3D,kBAAC,KAAD,CACEhW,QACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAUuJ,KAAK,cAAcuD,SAAS,SACpC,kBAAC,KAAD,CACEA,SAAS,QACTvD,KAAK,iBACL6E,QAAS,WACPpF,OAAOC,8BAA8B,mEAI3C,kBAAC,KAAD,MACA,kBAAC,KAAD,CACE6D,SAAS,SACTvD,KAAK,qBACL6E,QAAS,kBAAO9Q,GAASC,OAAO4B,YAAa,KAE/C,kBAAC,KAAD,CACE2N,SAAS,wBACTvD,KAAK,gBACL6E,QAAS,WAAO9Q,GAASuL,YAAYsL,wBAAyB,KAEhE,kBAAC,KAAD,MACA,kBAAC,KAAD,CACErH,SAAS,WACTvD,KAAK,gBACL6E,QAAS,WACP9Q,GAASyL,QAAQ4K,qBAAuBrW,GAASsB,MAAMgM,sBACvDtN,GAASyL,QAAQ2K,0BAA2B,KAGhD,kBAAC,KAAD,CACE5G,SAAS,yBACTvD,KAAK,6BACL6E,QAAS,WAAO9Q,GAASuL,YAAYqM,iBAAkB,MAI7DvY,SAAUC,IAASqZ,QAEnB,kBAAC,IAAD,CACElJ,UAAWC,IAAW,CAACC,IAAQoG,OAAQpG,IAAQyB,UAC/C5B,SAAS,YAFX,UAOF,kBAAC,KAAD,CACE9M,QACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEuJ,KAAK,aACLuD,SAAS,6BACTsB,QAAS,WAAO9Q,GAASuL,YAAYuM,sBAAuB,MAIlEzY,SAAUC,IAASqZ,QAEnB,kBAAC,IAAD,CACElJ,UAAWC,IAAW,CAACC,IAAQoG,OAAQpG,IAAQyB,UAC/C5B,SAAS,kBAFX,WAQJ,yBAAKC,UAAWC,IAAW,CAACC,IAAQ6I,aAAc7I,IAAQ8I,cAC1D,0BAAMhJ,UAAWE,IAAQiJ,iBACxB5Y,GAASsB,MAAMoM,UAAY1N,GAASsB,MAAMuH,OACvC,yBAAKmP,MAAO,CAAEI,QAAS,WACrB,kBAAC,KAAD,CACE1V,QAAS1C,GAASsB,MAAMuH,MAAMmF,OAAS,0BAA4B,yBACnE3O,SAAUC,IAASqZ,QAEnB,kBAAC,IAAD,CACElJ,UAAWC,IAAW,CAACC,IAAQoG,OAAQpG,IAAQyB,UAC/C5B,SAAUxP,GAASsB,MAAMuH,MAAMmF,OAAS,OAAS,QACjD/B,KAAMjM,GAASsB,MAAMuH,MAAMmF,OAAS,gBAAkB,eACtD8C,QAAS,WACH9Q,GAASsB,MAAMuH,MAAMmF,QACvBhO,GAASsB,MAAMuH,MAAMgQ,eACrB,EAAKC,gBAEL9Y,GAASsB,MAAMuH,MAAMkQ,cACrB,EAAKD,mBAOb9Y,GAASsB,MAAM0X,cAAcxT,OAAS,GACpC,yBAAKwS,MAAO,CAAEI,QAAS,WAErB,kBAAC,KAAD,CACE1V,QAAQ,qBACRrD,SAAUC,IAASqZ,QAEnB,kBAAC,IAAD,CACElJ,UAAWC,IAAW,CACpBC,IAAQoG,OACRpG,IAAQyB,UAEV5B,SAAS,MACTvD,KAAK,MACLgD,OAAQC,IAAO2B,QACfC,QAAS,WACP9Q,GAASsB,MAAMuH,MAAMoQ,mBACrB,EAAKH,kBAIX,kBAAC,KAAD,CACEpW,QAAQ,uBACRrD,SAAUC,IAASqZ,QAEnB,kBAAC,IAAD,CACElJ,UAAWC,IAAW,CACpBC,IAAQoG,OACRpG,IAAQyB,UAEV5B,SAAS,QACTvD,KAAK,QACLgD,OAAQC,IAAOgK,QACfpI,QAAS,WACP9Q,GAASsB,MAAMuH,MAAMsQ,qBACrB,EAAKL,kBAIX,kBAAC,KAAD,CACEpW,QAAQ,wBACRrD,SAAUC,IAASqZ,QAEnB,kBAAC,IAAD,CACElJ,UAAWC,IAAW,CACpBC,IAAQoG,OACRpG,IAAQyB,UAEV5B,SAAS,SACTvD,KAAK,SACLgD,OAAQC,IAAOC,OACf2B,QAAS,WACP9Q,GAASsB,MAAM8X,YACbpZ,GAASsB,MAAMuH,MAAMwQ,kBAEvB,EAAKP,qBASrB,yBACErJ,UAAWC,IAAW,CAACC,IAAQ6I,aAAc7I,IAAQ2J,eAErD,kBAAC,IAAD,CACE7J,UAAWC,IAAW,CAACC,IAAQoG,OAAQpG,IAAQyB,UAC/C5B,SAAS,QACTsB,QAAS,WACP9Q,GAASyL,QAAQiL,4BAA6B,IAG/C1W,GAASsB,MAAMG,SAAS6D,cAAgB,iBAEtCtF,GAASsB,MAAMG,SAAS8D,WAAavF,GAASsB,MAAMG,SAASgE,UAA9D,mBACczF,GAASsB,MAAMG,SAAS8D,UADtC,mBAC0DvF,GAASsB,MAAMG,SAASgE,UADlF,MAEI,MAGR,0BAAMgK,UAAWE,IAAQiJ,iBACzB,kBAAC,IAAD,CACEnJ,UAAWC,IAAW,CAACC,IAAQoG,OAAQpG,IAAQyB,UAC/C5B,SAAS,MACTsB,QAAS,WACP9Q,GAASuL,YAAY1J,YAAa,KAGtC,0BAAM4N,UAAWE,IAAQiJ,iBACzB,uBACEW,KAAK,8CACLnG,OAAO,SACP4E,MAAO,CACLjQ,MAAO/H,GAASuL,YAAYnF,SAAW,QAAU,QACjDoT,SAAU,OACVC,eAAgB,SAGlB,kBAAC,KAAD,CAAiBC,KAAMC,c,GAnNd5I,IAAMC,a,GCwDZ4I,GA9DdrK,Y,oLAGG,OACE,yBAAKE,UAAU,aAkDb,yBAAKuI,MAAO,CAAE6B,UAAW,SAAUC,OAAQ,UACzC,kBAAC,KAAD,Y,GAtDkB/I,IAAMC,a,uBCZb+I,G,4LAEjBpa,QAAQC,IAAI,SACZ,IAAMoa,EAAa,IAAIC,SAAMja,GAASsB,MAAMsM,eAC5CoM,EAAWE,OACXF,EAAW5B,UACXpY,GAASsB,MAAMuH,MAAQmR,EACvBA,EAAWG,GAAGC,GAAG,eAAgB,SAAA1Z,GAC/BV,GAASsB,MAAM0X,cAAgBtY,IAEjCsZ,EAAWG,GAAGC,GAAG,kBAAmB,SAAA1Z,GAClCV,GAASsB,MAAMkH,mBAAqB9H,IAEtCsZ,EAAWG,GAAGC,GAAG,cAAe,SAAAC,GAC9B,IAAMC,EAAOC,aAAY,CACvBpJ,SAAU,CACRqJ,aAAgB,CACd1J,QAAS,WACP9Q,GAASsB,MAAMuH,MAAM4R,wBAEvBxO,KAAK,kBAEPuO,aAAgB,CACd1J,QAAS,WACP9Q,GAASsB,MAAMuH,MAAMsQ,sBAEvBlN,KAAK,sBAwBXyO,KAAY3L,KAAKuL,EAAM,CAAEK,KAAMN,EAAKO,MAAOC,IAAKR,EAAKS,OAAS,WAE5Dnb,QAAQC,IAAI,4B,+BAMhB,OACE,yBACEiE,GAAG,kBACHmU,MAAO,CACLC,MAAO,QACP6B,OAAQ,OACRiB,KAAM,IACN1b,SAAU,kB,GAjEoB0R,IAAMC,W,6DCsM/BgK,GA9LdzL,Y,eAEC,WAAY2C,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACXiI,WAAY,KACZC,gBAAgB,EAChBC,iBAAiB,EACjBC,iBAAiB,GANF,E,sEAUT,IAAD,OACP,OACE,6BACE,kBAAClI,GAAD,CACEjC,KAAK,QACLpB,OAAQxJ,KAAK2M,MAAMmI,gBACnBjK,SAAU,kBACR,EAAK2B,SAAS,CACZsI,iBAAkB,EAAKnI,MAAMmI,oBAIjC,yBAAK1L,UAAWC,IAAWC,IAAQ0L,KAAM,eAAzC,YAEE,kBAAC/H,GAAD,CACE5B,MAAO1R,GAASsB,MAAMga,qBACtB3J,SAAU,SAAAvN,GAAE,OAAKpE,GAASsB,MAAMZ,MAAMoH,QAAU1D,GAChDwM,MAAO5Q,GAASsB,MAAMZ,MAAMoH,UAE9B,6BAPF,cASE,kBAACwL,GAAD,CACE5B,MAAO7L,OAAOC,KAAK9H,GACnB2T,SAAU,SAAAvN,GAAE,OAAKpE,GAASsB,MAAMZ,MAAMqH,MAAM9J,MAAQmG,GACpDwM,MAAO5Q,GAASsB,MAAMZ,MAAMqH,MAAM9J,QAEpC,6BAdF,sBAgBE,kBAAC,KAAD,KACE,kBAAC,IAAD,CACEgO,KAAK,KACL+L,MAAO,CACLuD,gBAAiB,UACjBC,gBAAiBxb,GAASsB,MAAMZ,MAAMqH,MAAM1D,QAGhD,kBAAC,gBAAD,CACE0D,MAAO/H,GAASsB,MAAMZ,MAAMqH,MAAM1D,KAClC4L,SAAU,SAAA7L,GAAE,OAAKpE,GAASsB,MAAMZ,MAAMqH,MAAM1D,KAAOD,EAAGqX,QA1B5D,KA8BE,kBAAC,KAAD,KACE,kBAAC,IAAD,CACExP,KAAK,KACL+L,MAAO,CACLuD,gBAAiB,UACjBC,gBAAiBxb,GAASsB,MAAMZ,MAAMqH,MAAMzD,MAGhD,kBAAC,gBAAD,CACEyD,MAAO/H,GAASsB,MAAMZ,MAAMqH,MAAMzD,GAClC2L,SAAU,SAAA7L,GAAE,OAAKpE,GAASsB,MAAMZ,MAAMqH,MAAMzD,GAAKF,EAAGqX,QAxC1D,IA4CE,6BACA,yBAAKxD,MAAM,MAAM6B,OAAO,KAAKrK,UAAU,oBACrC,8BACE,oCACEiM,GAAG,KACHC,GAAG,MACHC,GAAG,OACHC,GAAG,MACHhY,GAAG,eAEH,0BACEiY,UAAW9b,GAASsB,MAAMZ,MAAMqH,MAAM1D,KACtC0X,YAAY,IACZC,OAAO,OAET,0BACEF,UAAW9b,GAASsB,MAAMZ,MAAMqH,MAAMzD,GACtCyX,YAAY,IACZC,OAAO,WAIb,0BACEC,EAAE,IACFC,EAAE,IACFjE,MAAM,MACN6B,OAAO,KACPlI,KAAK,yBAMb,kBAACsB,GAAD,CACEjC,KAAK,OACLpB,OAAQxJ,KAAK2M,MAAMkI,eACnBhK,SAAU,kBACR,EAAK2B,SAAS,CACZqI,gBAAiB,EAAKlI,MAAMkI,mBAIhC,yBAAKzL,UAAWC,IAAWC,IAAQ0L,KAAM,eAAzC,YAEE,kBAAC,KAAD,CACE3J,MAAO1R,GAASsB,MAAMga,qBACtBzJ,aAAcC,GACdC,YAAY,EACZC,aAAc,SAAA5N,GAAE,OAAKpE,GAASsB,MAAMZ,MAAMsH,OAAS5D,IAEnD,kBAAC,IAAD,CAAQ6H,KAAMjM,GAASsB,MAAMZ,MAAMsH,UAErC,6BAVF,cAYE,kBAAC,KAAD,CACE0J,MAAO7L,OAAOC,KAAK9H,GACnB6T,aAAcC,GACdC,YAAY,EACZC,aAAc,SAAA5N,GAAE,OAAKpE,GAASsB,MAAMZ,MAAMuH,KAAKhK,MAAQmG,IAEvD,kBAAC,IAAD,CAAQ6H,KAAMjM,GAASsB,MAAMZ,MAAMuH,KAAKhK,SAE1C,6BApBF,cAsBE,6BACA,kBAAC,KAAD,CACEiK,IAAK,EACLC,IAAK,GACLgU,SAAU,GACVC,cAAe,EACfnM,SAAU,YAAa,IAAD,oBAAVhO,EAAU,KAAPoa,EAAO,KACpB9a,sBAAY,eAAgB,WAC1BvB,GAASsB,MAAMZ,MAAMuH,KAAKC,IAAMjG,EAChCjC,GAASsB,MAAMZ,MAAMuH,KAAKE,IAAMkU,KAGpCzL,MAAO,CACL5Q,GAASsB,MAAMZ,MAAMuH,KAAKC,IAC1BlI,GAASsB,MAAMZ,MAAMuH,KAAKE,SAMlC,kBAAC+K,GAAD,CACEjC,KAAK,QACLpB,OAAQxJ,KAAK2M,MAAMoI,gBACnBlK,SAAU,kBACR,EAAK2B,SAAS,CACZuI,iBAAkB,EAAKpI,MAAMoI,oBAIjC,yBAAK3L,UAAWC,IAAWC,IAAQ0L,KAAM,eAAzC,cAEE,kBAAC,KAAD,CACE3J,MAAO,CACL,SACA,SACA,WACA,WACA,UACA,WAEFG,aAAcC,GACdC,YAAY,EACZC,aAAc,SAAA5N,GAAE,OAAKpE,GAASsB,MAAMZ,MAAM2H,MAAQjE,IAElD,kBAAC,IAAD,CAAQ6H,KAAMjM,GAASsB,MAAMZ,MAAM2H,WAIzC,+BACGiU,KAAU,OAAQtc,GAASsB,MAAMK,UAAUsG,MAAM,GAAM,mCAD1D,wBAGE,uBAAG6I,QAAS,kBAAO9Q,GAASsB,MAAMK,UAAY,IAAIC,MAAlD,gB,GAtLgBmP,IAAMC,a,aCZjB,mBAAGC,EAAH,EAAGA,KAAMpB,EAAT,EAASA,OAAQqB,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,SAA3B,OACb,6BACE,kBAAC,IAAD,CACEtG,MAAOoG,EACPjB,QAASH,EACTI,SAAUiB,EACVzB,UAAWE,IAAQ2J,cAErB,kBAAC,KAAD,CAAUzJ,OAAQA,GAASsB,KCwPhBoL,GAxPdhN,Y,eAEC,WAAY2C,GAAQ,IAAD,8BACjB,4CAAMA,KASRsK,eAAiB,SAACC,EAAQ3N,EAAK8B,GACxB5Q,GAASsB,MAAMK,UAAUmD,IAAI2X,IAChCzc,GAASsB,MAAMK,UAAU+a,IAAID,EAAQ,IAAI7a,KAE3C,IAAM+a,EAAY3c,GAASsB,MAAMK,UAAUiJ,IAAI6R,GACjC,OAAV7L,EACF+L,EAAUD,IAAI5N,EAAK8B,IAEnB+L,EAAUC,OAAO9N,GACM,IAAnB6N,EAAU1U,MACZjI,GAASsB,MAAMK,UAAUib,OAAOH,KApBnB,EAyBnBI,oBAAsB,SAACnc,EAAOoO,EAAK8B,GACjCrP,sBAAY,0BAA2B,WACrCb,EAAMgD,QAAQ,SAAAO,GAAC,OAAI,EAAKuY,eAAevY,EAAEoW,KAAKxS,IAAIhE,GAAIiL,EAAK8B,QAzB7D,EAAKoC,MAAQ,CACXoI,iBAAiB,EACjBF,gBAAgB,EAChBC,iBAAiB,EACjB2B,iBAAiB,GANF,E,sEA+BT,IAAD,OACP,OACE,6BACE,kBAACC,GAAD,CACE9L,KAAK,gBACLpB,OAAQxJ,KAAK2M,MAAMkI,eACnBhK,SAAU,WACJ,EAAK8B,MAAMkI,eACb,EAAKrI,SACH,CACEqI,gBAAgB,GAElB,kBACE,EAAK2B,oBACH7c,GAASsB,MAAM0X,cACf,OACA,QAIN,EAAKnG,SACH,CACEqI,gBAAgB,GAElB,kBACE,EAAK2B,oBACH7c,GAASsB,MAAM0X,cACf,OACAhZ,GAASsB,MAAM0b,eAAe/U,UAMxC,yBAAKwH,UAAWC,IAAWC,IAAQ0L,KAAM,eACvC,kBAAC,KAAD,CACEnT,IAAK,EACLC,IAAK,GACLgU,SAAU,GACVC,cAAe,EACfnM,SAAU,SAAA7L,GACRpE,GAASsB,MAAM0b,eAAe/U,KAAO7D,EACrC,EAAKyY,oBACH7c,GAASsB,MAAM0X,cACf,OACA5U,IAGJwM,MAAO5Q,GAASsB,MAAM0b,eAAe/U,SAI3C,kBAAC8U,GAAD,CACE9L,KAAK,iBACLpB,OAAQxJ,KAAK2M,MAAMmI,gBACnBjK,SAAU,WACJ,EAAK8B,MAAMmI,gBACb,EAAKtI,SACH,CACEsI,iBAAiB,GAEnB,kBACE,EAAK0B,oBACH7c,GAASsB,MAAM0X,cACf,QACA,QAIN,EAAKnG,SACH,CACEsI,iBAAiB,GAEnB,kBACE,EAAK0B,oBACH7c,GAASsB,MAAM0X,cACf,QACAhZ,GAASsB,MAAM0b,eAAejV,WAMxC,yBAAK0H,UAAWC,IAAWC,IAAQ0L,KAAM,eAAzC,gBAEE,kBAAC,KAAD,KACE,kBAAC,IAAD,CACEpP,KAAK,KACL+L,MAAO,CACLuD,gBAAiB,UACjBC,gBAAiBxb,GAASsB,MAAM0b,eAAejV,SAGnD,kBAAC,gBAAD,CACEA,MAAO/H,GAASsB,MAAM0b,eAAejV,MACrCkI,SAAU,SAAA7L,GACRpE,GAASsB,MAAM0b,eAAejV,MAAQ3D,EAAGqX,IACzC,EAAKoB,oBACH7c,GAASsB,MAAM0X,cACf,QACA5U,EAAGqX,WAOf,kBAACsB,GAAD,CACE9L,KAAK,iBACLpB,OAAQxJ,KAAK2M,MAAM8J,gBACnB5L,SAAU,WACJ,EAAK8B,MAAM8J,gBACb,EAAKjK,SACH,CACEiK,iBAAiB,GAEnB,kBACE,EAAKD,oBACH7c,GAASsB,MAAM0X,cACf,QACA,QAIN,EAAKnG,SACH,CACEiK,iBAAiB,GAEnB,kBACE,EAAKD,oBACH7c,GAASsB,MAAM0X,cACf,QACAhZ,GAASsB,MAAM0b,eAAenS,WAMxC,yBAAK4E,UAAWC,IAAWC,IAAQ0L,KAAM,eAAzC,gBAEE,2BACEzK,MAAO5Q,GAASsB,MAAM0b,eAAenS,MACrCoF,SAAU,SAAA7L,GACRpE,GAASsB,MAAM0b,eAAenS,MAAQzG,EAAGgP,OAAOxC,MAChD,EAAKiM,oBACH7c,GAASsB,MAAM0X,cACf,QACA5U,EAAGgP,OAAOxC,YAMpB,kBAACmM,GAAD,CACE9L,KAAK,iBACLpB,OAAQxJ,KAAK2M,MAAMoI,gBACnBlK,SAAU,WACJ,EAAK8B,MAAMoI,gBACb,EAAKvI,SACH,CACEuI,iBAAiB,GAEnB,kBACE,EAAKyB,oBACH7c,GAASsB,MAAM0X,cACf,QACA,QAIN,EAAKnG,SACH,CACEuI,iBAAiB,GAEnB,kBACE,EAAKyB,oBACH7c,GAASsB,MAAM0X,cACf,QACAhZ,GAASsB,MAAM0b,eAAe3U,WAMxC,yBAAKoH,UAAWC,IAAWC,IAAQ0L,KAAM,eAAzC,cAEE,kBAAC,KAAD,CACE3J,MAAO,CACL,SACA,SACA,WACA,WACA,UACA,WAEFG,aAAcC,GACdC,YAAY,EACZC,aAAc,SAAA5N,GACZpE,GAASsB,MAAM0b,eAAe3U,MAAQjE,EACtC,EAAKyY,oBACH7c,GAASsB,MAAM0X,cACf,QACA5U,KAIJ,kBAAC,IAAD,CAAQ6H,KAAMjM,GAASsB,MAAM0b,eAAe3U,gB,GA9O7B0I,IAAMC,a,GC4BpBiM,GAjCd1N,Y,8MAEC2N,iBAAmB,WACjB,OAA4C,IAAxCld,GAASsB,MAAM0X,cAAcxT,OAE7B,6BACE,mDAKJ,+CAAiB8W,KACf,OACAtc,GAASsB,MAAM0X,cAAcxT,QAC7B,M,wEAMJ,OACE,6BACGa,KAAK6W,mBACmC,IAAxCld,GAASsB,MAAM0X,cAAcxT,OAC5B,kBAAC,GAAD,MAEA,kBAAC,GAAD,W,GAzBeuL,IAAMC,a,GCqEhBmM,GAtEd5N,Y,oLAGG,OACE,6BACE,kBAAC,IAAD,CACEC,SAAS,UACTC,UAAWE,IAAQW,KACnBQ,QAAS,kBAAM9Q,GAASsB,MAAMuH,MAAMuU,kBAHtC,mBAOA,kBAAC,IAAD,CACE5N,SAAS,UACTC,UAAWE,IAAQW,KACnBQ,QAAS,kBAAM9Q,GAASsB,MAAMuH,MAAMwU,kBAHtC,mBAOA,kBAAC,IAAD,CACE7N,SAAS,UACTC,UAAWE,IAAQW,KACnBQ,QAAS,kBAAM9Q,GAASsB,MAAMuH,MAAMyU,uBAHtC,iCAOA,kBAAC,IAAD,CACE9N,SAAS,SACTC,UAAWE,IAAQW,KACnBQ,QAAS,kBAAM9Q,GAASsB,MAAMuH,MAAM0U,uBAHtC,iCAOA,yBAAKvF,MAAO,CAAC8B,OAAQ,UACrB,0CACA,kBAAC,KAAD,CACE5R,IAAK,GACLC,IAAK,EACLgU,SAAU,GACVlM,SAAU,SAAAW,GACR5Q,GAASsB,MAAMZ,MAAM4H,UAAYsI,GAEnCA,MAAO5Q,GAASsB,MAAMZ,MAAM4H,YAE9B,yBAAK0P,MAAO,CAAC8B,OAAQ,UACrB,4CACA,kBAAC,KAAD,CACE5R,IAAK,EACLC,IAAK,GACLgU,SAAU,GACVC,cAAe,EACfnM,SAAU,SAAAW,GACR5Q,GAASsB,MAAMZ,MAAM6H,YAAcqI,GAErCA,MAAO5Q,GAASsB,MAAMZ,MAAM6H,cAE9B,wCACA,kBAAC,KAAD,CACEmJ,MAAO1R,GAASsB,MAAMga,qBACtBzJ,aAAcC,GACdC,YAAY,EACZC,aAAc,SAAA5N,GAAE,OAAKpE,GAASsB,MAAMZ,MAAM0H,QAAUhE,IAEpD,kBAAC,IAAD,CAAQ6H,KAAMjM,GAASsB,MAAMZ,MAAM0H,gB,GA9DnB2I,IAAMC,a,aCoCjBwM,GArCdjO,oB,oLAEW,IAAD,OACP,OACE,yBACEE,UAAWC,IAET,qBACA,sBAGF,yBAAKD,UAAWC,IAAWC,IAAQ0L,KAAM,uBACvC,2BACE5L,UAAWC,IAAWC,IAAQoI,MAAOpI,IAAQ8N,eAC7CzF,MAAO,CAAEC,MAAO,SAEhB,+BACE,4BACE,wCACA,uCAGJ,+BACGjY,GAASsB,MAAMga,qBAAqBtX,IAAI,SAACI,EAAIkD,GAAL,OACvC,wBAAIwH,IAAG,UAAK1K,EAAL,YAAWkD,IAChB,4BAAKlD,GACL,4BAAK,EAAK8N,MAAMvO,KAAKS,e,GAzBd2M,IAAMC,a,sBC8BhBzB,I,YAAAA,eA/Bf,WACE,OACE,yBAAKE,UAAU,WACb,kBAAC,cAAD,CACEA,UAAU,eACViO,UAAU,MACVC,cAAc,SACdC,WAAW,IACXC,YAAY,QACZC,YAAaC,aAAO,OACpB9f,MAAO+B,GAASsB,MAAMwJ,cACtBzC,MAAO,SAAA6J,GAAU,IACPjK,EAASiK,EAATjK,KACR,OACE,yBAAKgQ,MAAOhQ,EAAM6R,OAAQ7R,GACxB,4CAAYiK,EAAZ,CAAmB8L,EAAG/V,EAAO,EAAGgW,GAAIhW,EAAO,EAAGiW,GAAIjW,EAAO,SAKjE,kBAAC,gBAAD,CACEyV,UAAU,MACVC,cAAc,SACdtV,MAAM,SACNpK,MAAO+B,GAASsB,MAAMyJ,eACtB+S,YAAaC,aAAO,YCVbI,GAjBd5O,Y,oLAGO,OACI,yBACIE,UAAWC,IAAW,qBACtBsI,MAAO,CACHwD,gBAAiBxb,GAASuL,YAAYnF,SAAW,UAAY,YAGjE,yBAAKqJ,UAAWC,IAAW,4BAA6B1P,GAASsB,MAAM0X,cAAcxT,OAArF,mBACA,yBAAKiK,UAAWC,IAAW,6BAA3B,aAAmE1P,GAASsB,MAAMZ,MAAMoH,QAAxF,KAAmG9H,GAASsB,MAAMZ,MAAMqH,MAAM9J,MAA9H,eAAiJ+B,GAASsB,MAAMZ,MAAMsH,OAAtK,KAAgLhI,GAASsB,MAAMZ,MAAMuH,KAAKhK,MAA1M,U,GAVQ8S,IAAMC,a,GCUxBoN,GADL7O,Y,oLAGG,OACE,6BACE,6CACA,kBAAC,KAAD,CAAO8O,SAAO,EAACxa,GAAG,iBAChB,kBAAC,KAAD,CAAMA,GAAG,QAAQkM,MAAM,QAAQuO,MAAO,kBAAC,GAAD,QACtC,kBAAC,KAAD,CAAMza,GAAG,SAASkM,MAAM,SAASuO,MAAO,kBAAC,GAAD,QAExC,kBAAC,KAAMC,SAAP,Y,GATsBxN,IAAMC,a,GAsQvBwN,GApPdjP,Y,8MAECkP,eAAiB,CACf9D,KAAM,O,EAER+D,iBAAmB,CAClB/D,KAAM,S,EAEPgE,cAAgB,CACdC,WAAY,Q,EAEdC,cAAgB,CACdD,WAAY,S,EAEdE,cAAgB,WACZ9e,GAASuL,YAAYwT,2BAA6B/e,GAASuL,YAAYwT,2B,wEAGzE,OACE,yBAAKtP,UAAU,oBACb,yBAAKA,UAAU,cACZzP,GAASwL,OAAO8C,WACf,yBACEmB,UAAWC,IACTC,IAAQ0L,KACR1L,IAAQqP,YACR,eACA,sBAGF,yBACEhH,MAAO,CACLI,QAAS,OACT6G,eAAgB,OAChBC,WAAY,SAGd,wBAAIlH,MAAO,CAAEC,MAAO,MACjBjY,GAASwL,OAAO2T,cADnB,YAGA,yBAAKnH,MAAO,CAAEC,MAAO,MACrB,qCACA,yBAAKD,MAAO,CAAEC,MAAO,KACrB,kBAAC3E,GAAD,CACE0E,MAAO,CAAE,gBAAiB,IAC1BtG,MAAK,uBAAM1R,GAASsB,MAAMG,SAASsE,cAA9B,CAA4C,YACjD4L,SAAU,SAAAvN,GAAE,OAAKpE,GAASsB,MAAM8M,YAAchK,GAC9CwM,MAAO5Q,GAASsB,MAAM8M,eAG1B,2BACEqB,UAAWC,IACTC,IAAQoI,MACRpI,IAAQ8N,cACR9N,IAAQyP,aAEVpH,MAAO,CACLC,MAAO,OACPoH,WAAY,SAGd,+BACGrf,GAASwL,OAAO+C,WAAWvK,IAAI,SAACL,EAAM2D,GAAP,OAC9B,wBACEwH,IAAKxH,EACLgY,YAAa,kBACXtf,GAASsB,MAAMuH,MAAM4F,iBACnB,CAAC9K,EAAK0B,UACN,IAGJka,YAAa,kBjCwKXla,EiCxKyB1B,EAAK0B,ajCyKpD7F,GAAYC,KAAKR,EAAUoG,GADtB,IAAiBA,GiCvKFma,aAAc,kBACZxf,GAASsB,MAAMuH,MAAM4F,iBACnB,CAAC9K,EAAK0B,UACN,KAIJ,4BAAK1B,EAAK3D,GAASsB,MAAMZ,MAAM0H,eAKvC,gCACE,uBACEmX,YAAa,WACPvf,GAASwL,OAAOiU,QAAU,IAC5Bzf,GAASwL,OAAOiU,SAAW,EAC3Bzf,GAASwL,OAAO+C,WAAavO,GAASwL,OAAOkU,SAASC,MACpD3f,GAASwL,OAAOiU,QAAUzf,GAASwL,OAAOoU,UACzC5f,GAASwL,OAAOiU,QAAU,GAAKzf,GAASwL,OAAOoU,aANxD,YADF,OAe+B,IAA5B5f,GAASwL,OAAOiU,QACf,uBACEF,YAAa,WACXvf,GAASwL,OAAOiU,QAAU,EAC1Bzf,GAASwL,OAAO+C,WAAavO,GAASwL,OAAOkU,SAASC,MACpD3f,GAASwL,OAAOiU,QAAUzf,GAASwL,OAAOoU,UACzC5f,GAASwL,OAAOiU,QAAU,GAAKzf,GAASwL,OAAOoU,YALtD,SAYA,uBACE5H,MAAO,CACLjQ,MAAO,UACP8X,cAAe,OACfC,OAAQ,YAGT9f,GAASwL,OAAOiU,QAAU,EAP7B,QA5BJ,MAsCK,mCACFzf,GAASwL,OAAOuU,MAAM/b,IAAI,SAAAsD,GACzB,OACO,GAALA,GACAA,GAAKtH,GAASwL,OAAOwU,SACrB1Y,GAAKtH,GAASwL,OAAOiU,QAGnB,uBACE3Q,IAAKxH,EACL0Q,MAAO,CACLjQ,MAAO,UACP8X,cAAe,OACfC,OAAQ,YAGT9f,GAASwL,OAAOiU,QAAU,EAR7B,QAYG,GAALnY,GACAA,GAAKtH,GAASwL,OAAOwU,UACnB1Y,EAAItH,GAASwL,OAAOiU,QAAU,GAC9BnY,EAAItH,GAASwL,OAAOiU,QAAU,GAC7Bzf,GAASwL,OAAOiU,QAAU,GAAKnY,EAAI,GACnCtH,GAASwL,OAAOiU,QAAUzf,GAASwL,OAAOwU,QAAU,GACnD1Y,EAAItH,GAASwL,OAAOwU,QAAU,GAGhC,uBACElR,IAAKxH,EACLiY,YAAa,WACXvf,GAASwL,OAAOiU,QAAUnY,EAC1BtH,GAASwL,OAAO+C,WAAavO,GAASwL,OAAOkU,SAASC,MACpD3f,GAASwL,OAAOiU,QAAUzf,GAASwL,OAAOoU,UACzC5f,GAASwL,OAAOiU,QAAU,GACzBzf,GAASwL,OAAOoU,YAIrBtY,EAAI,EAXP,aAVG,IAzDX,UAoFGtH,GAASwL,OAAOiU,UAAYzf,GAASwL,OAAOwU,QAC3C,uBACET,YAAa,WACXvf,GAASwL,OAAOiU,QAAUzf,GAASwL,OAAOwU,QAC1ChgB,GAASwL,OAAO+C,WAAavO,GAASwL,OAAOkU,SAASC,MACpD3f,GAASwL,OAAOiU,QAAUzf,GAASwL,OAAOoU,UACzC5f,GAASwL,OAAOiU,QAAU,GAAKzf,GAASwL,OAAOoU,YAInD5f,GAASwL,OAAOwU,QAAU,EAT7B,QAYA,uBACEhI,MAAO,CACLjQ,MAAO,UACP8X,cAAe,OACfC,OAAQ,YAGT9f,GAASwL,OAAOiU,QAAU,GAxGjC,OA4GE,uBACEF,YAAa,WACPvf,GAASwL,OAAOiU,QAAUzf,GAASwL,OAAOwU,UAC5ChgB,GAASwL,OAAOiU,SAAW,EAC3Bzf,GAASwL,OAAO+C,WAAavO,GAASwL,OAAOkU,SAASC,MACpD3f,GAASwL,OAAOiU,QAAUzf,GAASwL,OAAOoU,UACzC5f,GAASwL,OAAOiU,QAAU,GAAKzf,GAASwL,OAAOoU,aANxD,QAaA,6BACA,6BACA,oCAAU5f,GAASwL,OAAOiU,QAAU,KAI1C,yBACEhQ,UAAWC,IACTC,IAAQ0L,KACR1L,IAAQqP,YACR,eACA,oBACA,oBACA,cACChH,MAAShY,GAASuL,YAAYwT,0BAA4B1Y,KAAKqY,iBAAmBrY,KAAKoY,gBAE1F,4BAAQhP,UAAY,WAAWqB,QAAWzK,KAAKyY,eAA/C,WAEA,6BACA,kBAAC,GAAD,OAEF,yBAAKrP,UAAaC,IAAWC,IAAQ0L,KAAM1L,IAAQqP,YAAa,eAChE,qBAAsBhH,MAAS,CAACC,MAAO,MAAOgI,WAAY,MAAOC,aAAc,QAASC,cAAe,QAASvB,WAAY,WAC1H,4BAAQnP,UAAY,UAAUqB,QAAWzK,KAAKyY,cAAe9G,MAAShY,GAASuL,YAAYwT,0BAA4B1Y,KAAKsY,cAAgBtY,KAAKwY,eAAjJ,YAKqC,IAAxC7e,GAASsB,MAAM0X,cAAcxT,QAC5B,kBAAC,GAAD,CAAY7B,KAAM3D,GAASsB,MAAM0X,cAAc,GAAGqB,KAAKxS,MAEzD,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GA5OoBkJ,IAAMC,a,aCdlCoP,IAAkBC,sBlC+dhB7gB,GAAYC,KAAKrB,GkC3dnB4B,GAASuL,YAAY+U,iB,IAEbC,GAA4BC,KAA5BD,OAAQE,GAAoBD,KAApBC,UAAWC,GAASF,KAATE,EAAGC,GAAMH,KAANG,EA8CfC,GA5CdC,a,GACAtR,Y,wMAEyC,IAAZsR,EAAW,EAAXA,QACtBA,EAAQrT,QACNqT,EAAQrT,MAAMsT,QAAUP,IAAUM,EAAQrT,MAAMsT,QAAUL,GACxDzgB,IAAYA,GAASsB,OAAStB,GAASsB,MAAMuH,QAC/C7I,GAASsB,MAAM8X,YAAYpZ,GAASsB,MAAMuH,MAAMwQ,kBAChDhT,KAAKyS,eAEE+H,EAAQrT,MAAMsT,QAAUJ,GAC7B1gB,IAAYA,GAASsB,OAAStB,GAASsB,MAAMuH,OAC/C7I,GAASsB,MAAMuH,MAAMoQ,mBAEd4H,EAAQrT,MAAMsT,QAAUH,IAC7B3gB,IAAYA,GAASsB,OAAStB,GAASsB,MAAMuH,OAC/C7I,GAASsB,MAAMuH,MAAMsQ,wB,+BAM3B,OACE,yBACE1J,UAAWC,IAAW,aACpB,eAAe,GACdC,IAAQC,KAAO5P,GAASuL,YAAYnF,YAGvC,kBAAC,GAAD,MACA,0BAAMqJ,UAAU,QACbzP,GAASsB,MAAMoM,SACd,kBAAC,GAAD,MAEA,kBAAC,GAAD,OAGH1N,GAASsB,MAAMoM,UAAY,kBAAC,GAAD,MAC5B,kBAAC,GAAD,W,GApCUqD,IAAMC,a,wCCrBpB+P,IAASC,OAAO,kBAAC,GAAD,MAAQ1K,SAASC,eAAe,U,oBCVpD,IAAI0K,EAAIva,EAAQ,KAOhB,SAASwa,EAAKrd,GAAiB,IAAboE,EAAY,uDAAL,GACvB5B,KAAKxC,GAAKA,EACVwC,KAAK8a,MAAQtd,EACbwC,KAAK+a,GAAK,GACV/a,KAAKgb,IAAM,GACXhb,KAAK4B,KAAOA,EACZ5B,KAAKib,WAAa,GAClBjb,KAAKkb,WAAa,GAClBlb,KAAK4V,EAAI,EACT5V,KAAK6V,EAAI,EACT7V,KAAKmb,GAAK,EACVnb,KAAKob,GAAK,EAKVpb,KAAKqb,YAAc,SAAS7d,GAI1B,OAHA8d,WAAatb,KAAKgb,IAAIrd,IAAI,SAAS4d,GACjC,OAAOA,EAAQ/d,KAEVod,EAAEY,QAAQhe,EAAI8d,aAAe,GAIxCT,EAAKY,UAAUC,YAAc,SAASpe,GACpC,OAAK0C,KAAKqb,YAAY/d,EAAKE,MACzBwC,KAAKgb,IAAI7c,KAAKb,IACP,IAKXqe,EAAQC,KAtCR,SAAcC,EAAQ9O,GACpB/M,KAAK6b,OAASA,EACd7b,KAAK+M,OAASA,EACd/M,KAAKib,WAAa,IAoCpBU,EAAQd,KAAOA,G,oBCxCf,IAAIiB,EAAQzb,EAAQ,KAwKpB,SAAS0b,EAAOC,EAAKC,EAAWC,EAAKC,EAAWhd,GAC9C,IAAI8B,EAWJ,GATA+a,EAAMA,EAAII,UAAYJ,EAAI1C,MAAQ0C,EAAMA,EAAIK,OAC5CH,EAAMA,EAAIE,UAAYF,EAAI5C,MAAQ4C,EAAMA,EAAIG,OAE5CL,EAAMC,EACFD,EAAII,SACFJ,EAAII,SAASH,EAAW9c,GAAU8c,EAAY9c,GAC9C6c,EAAI1C,MAAM2C,EAAW9c,GAAU8c,EAAY9c,GAC7C6c,EAEAE,EAAI7F,IACN6F,EAAI7F,IAAI2F,EAAKG,QAEb,IAAKlb,EAAI,EAAGA,EAAI+a,EAAI7c,OAAQ8B,IAC1Bib,EAAIjb,EAAIkb,GAAaH,EAAI/a,GAI7B,OAAOib,EA1LTJ,EAAMQ,SAAW,WACftc,KAAK0C,UAAY,GAEjB1C,KAAKuc,SAAW,GAChBvc,KAAKwc,KAAO,GACZxc,KAAKyc,KAAO,GACZzc,KAAK4R,MAAQ,GACb5R,KAAK0c,cAAgB,GACrB1c,KAAK2c,IAAM,GACX3c,KAAK4c,SAAW,GAChB5c,KAAK6c,SAAW,IAAIf,EAAMgB,eAE1B9c,KAAK+c,cAAgB,MAGvBjB,EAAMQ,SAASb,UAAUuB,YAAc,SAAS7b,EAAG8b,GAMjD,GALAjd,KAAK+c,cAAgBE,EAErBjd,KAAK0C,UAAY,GACjB1C,KAAK4c,SAAW,GAEZzb,aAAa2a,EAAMoB,SACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIhc,EAAEic,SAASje,OAAQge,IAAK,CAC1C,IAAI1Z,EAAItC,EAAEic,SAASD,GACfF,EAAIE,EAAIhc,EAAEic,SAASje,OACvBa,KAAK0C,UAAUvE,KAAKsF,EAAEmS,EAAGnS,EAAEoS,EAAGpS,EAAE4Z,GAChCrd,KAAK0C,UAAUvE,KAAKsF,EAAEmS,EAAGnS,EAAEoS,EAAGpS,EAAE4Z,GAChCrd,KAAK4c,SAASze,KAAK8e,GACnBjd,KAAK4c,SAASze,KAAK8e,GAQvB,GAJiBnB,EAAMgB,eAInB3b,aAAamc,cAAgBnc,aAAaoc,MAC5C,IAASJ,EAAI,EAAGA,EAAIhc,EAAEhC,OAAQge,GAAK,EAAG,CAChCF,EAAIE,EAAIhc,EAAEhC,OACda,KAAK0C,UAAUvE,KAAKgD,EAAEgc,GAAIhc,EAAEgc,EAAI,GAAIhc,EAAEgc,EAAI,IAC1Cnd,KAAK0C,UAAUvE,KAAKgD,EAAEgc,GAAIhc,EAAEgc,EAAI,GAAIhc,EAAEgc,EAAI,IAC1Cnd,KAAK4c,SAASze,KAAK8e,GACnBjd,KAAK4c,SAASze,KAAK8e,GAIvBjd,KAAKwd,WAGP1B,EAAMQ,SAASb,UAAUgC,UAAY,SAAS7hB,EAAGoa,GAC/C,IAAI0H,EAAS,EAAJ9hB,EACL+hB,EAAS,EAAJ3H,EACT,OACEhW,KAAK0C,UAAUgb,KAAQ1d,KAAK0C,UAAUib,IACtC3d,KAAK0C,UAAUgb,EAAK,KAAO1d,KAAK0C,UAAUib,EAAK,IAC/C3d,KAAK0C,UAAUgb,EAAK,KAAO1d,KAAK0C,UAAUib,EAAK,IAInD7B,EAAMQ,SAASb,UAAUmC,OAAS,SAAShiB,GACzC,IAAI8hB,EAAS,EAAJ9hB,EACT,MAAO,CAACoE,KAAK0C,UAAUgb,GAAK1d,KAAK0C,UAAUgb,EAAK,GAAI1d,KAAK0C,UAAUgb,EAAK,KAG1E5B,EAAMQ,SAASb,UAAU+B,QAAU,WACjC,IAcIK,EAaApa,EA3BA8E,EAAIvI,KAAK0C,UAAUvD,OAAS,EAEhCa,KAAKuc,SAAW,GAChBvc,KAAKwc,KAAO,GACZxc,KAAKyc,KAAO,GACZzc,KAAK4R,MAAQ,GACb5R,KAAK0c,cAAgB,GACrB1c,KAAK2c,IAAM,GAEX,IAAK,IAAIQ,EAAI,EAAGA,EAAI5U,EAAG4U,IACrBnd,KAAKyc,KAAKte,KAAK,GACf6B,KAAKyc,KAAKte,MAAM,GAIlB,IAASgf,EAAI,EAAGA,EAAI5U,EAAG4U,IACGU,EAApB7d,KAAK+c,cAAmB/c,KAAK+c,cAAcI,GAAK5U,EAAI,IAC/C,EACTvI,KAAK4R,MAAMzT,KAAK0f,GAChB7d,KAAK4R,MAAMzT,KAAK0f,GAGlB,IAASV,EAAI,EAAGA,EAAI5U,EAAG4U,IACrBnd,KAAK2c,IAAIxe,KAAKgf,GAAK5U,EAAI,GAAI,GAC3BvI,KAAK2c,IAAIxe,KAAKgf,GAAK5U,EAAI,GAAI,GAM3B9E,EADEzD,KAAKyd,UAAU,EAAGlV,EAAI,GACpBvI,KAAK4d,OAAOrV,EAAI,GAEhBvI,KAAK4d,OAAO,GAElB5d,KAAKuc,SAASpe,KAAKsF,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACjCzD,KAAKuc,SAASpe,KAAKsF,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACjC,IAAS0Z,EAAI,EAAGA,EAAI5U,EAAI,EAAG4U,IACzB1Z,EAAIzD,KAAK4d,OAAOT,GAChBnd,KAAKuc,SAASpe,KAAKsF,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACjCzD,KAAKuc,SAASpe,KAAKsF,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAGnC,IAAS0Z,EAAI,EAAGA,EAAI5U,EAAG4U,IACrB1Z,EAAIzD,KAAK4d,OAAOT,GAChBnd,KAAKwc,KAAKre,KAAKsF,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC7BzD,KAAKwc,KAAKre,KAAKsF,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAI7BA,EADEzD,KAAKyd,UAAUlV,EAAI,EAAG,GACpBvI,KAAK4d,OAAO,GAEZ5d,KAAK4d,OAAOrV,EAAI,GAEtBvI,KAAKwc,KAAKre,KAAKsF,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC7BzD,KAAKwc,KAAKre,KAAKsF,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAE7B,IAAS0Z,EAAI,EAAGA,EAAI5U,EAAI,EAAG4U,IAAK,CAC9B,IAAIvf,EAAQ,EAAJuf,EACRnd,KAAK0c,cAAcve,KAAKP,EAAGA,EAAI,EAAGA,EAAI,GACtCoC,KAAK0c,cAAcve,KAAKP,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAGvCoC,KAAK8d,YAYR9d,KAAK8d,WAAW9kB,SAAS+kB,UAAU,IAAIT,aAAatd,KAAK0C,YACzD1C,KAAK8d,WAAW9kB,SAASglB,aAAc,EACvChe,KAAK8d,WAAWvB,SAASwB,UAAU,IAAIT,aAAatd,KAAKuc,WACzDvc,KAAK8d,WAAWvB,SAASyB,aAAc,EACvChe,KAAK8d,WAAWtB,KAAKuB,UAAU,IAAIT,aAAatd,KAAKwc,OACrDxc,KAAK8d,WAAWtB,KAAKwB,aAAc,EACnChe,KAAK8d,WAAWrB,KAAKsB,UAAU,IAAIT,aAAatd,KAAKyc,OACrDzc,KAAK8d,WAAWrB,KAAKuB,aAAc,EACnChe,KAAK8d,WAAWlM,MAAMmM,UAAU,IAAIT,aAAatd,KAAK4R,QACtD5R,KAAK8d,WAAWlM,MAAMoM,aAAc,EACpChe,KAAK8d,WAAWG,GAAGF,UAAU,IAAIT,aAAatd,KAAK2c,MACnD3c,KAAK8d,WAAWG,GAAGD,aAAc,EACjChe,KAAK8d,WAAWhD,MAAMiD,UAAU,IAAIG,YAAYle,KAAK0c,gBACrD1c,KAAK8d,WAAWhD,MAAMkD,aAAc,GAxBpChe,KAAK8d,WAAa,CAChB9kB,SAAU,IAAI8iB,EAAMqC,gBAAgB,IAAIb,aAAatd,KAAK0C,WAAY,GACtE6Z,SAAU,IAAIT,EAAMqC,gBAAgB,IAAIb,aAAatd,KAAKuc,UAAW,GACrEC,KAAM,IAAIV,EAAMqC,gBAAgB,IAAIb,aAAatd,KAAKwc,MAAO,GAC7DC,KAAM,IAAIX,EAAMqC,gBAAgB,IAAIb,aAAatd,KAAKyc,MAAO,GAC7D7K,MAAO,IAAIkK,EAAMqC,gBAAgB,IAAIb,aAAatd,KAAK4R,OAAQ,GAC/DqM,GAAI,IAAInC,EAAMqC,gBAAgB,IAAIb,aAAatd,KAAK2c,KAAM,GAC1D7B,MAAO,IAAIgB,EAAMqC,gBAAgB,IAAID,YAAYle,KAAK0c,eAAgB,GACtEE,SAAU,IAAId,EAAMqC,gBAAgB,IAAIb,aAAatd,KAAK4c,UAAW,IAmBzE5c,KAAK6c,SAASuB,aAAa,WAAYpe,KAAK8d,WAAW9kB,UACvDgH,KAAK6c,SAASuB,aAAa,WAAYpe,KAAK8d,WAAWvB,UACvDvc,KAAK6c,SAASuB,aAAa,OAAQpe,KAAK8d,WAAWtB,MACnDxc,KAAK6c,SAASuB,aAAa,OAAQpe,KAAK8d,WAAWrB,MACnDzc,KAAK6c,SAASuB,aAAa,QAASpe,KAAK8d,WAAWlM,OACpD5R,KAAK6c,SAASuB,aAAa,KAAMpe,KAAK8d,WAAWG,IACjDje,KAAK6c,SAASuB,aAAa,WAAYpe,KAAK8d,WAAWlB,UAEvD5c,KAAK6c,SAASwB,SAASre,KAAK8d,WAAWhD,QA8BzCgB,EAAMQ,SAASb,UAAU6C,QAAU,SAAStlB,GAC1C,IAAI0J,EAAY1C,KAAK8d,WAAW9kB,SAASulB,MACrChC,EAAWvc,KAAK8d,WAAWvB,SAASgC,MACpC/B,EAAOxc,KAAK8d,WAAWtB,KAAK+B,MAC5BhW,EAAI7F,EAAUvD,OAGlB4c,EAAOrZ,EAAW,EAAG6Z,EAAU,EAAGhU,GAGlCwT,EAAOrZ,EAAW,EAAGA,EAAW,EAAG6F,EAAI,GAEvC7F,EAAU6F,EAAI,GAAKvP,EAAS4c,EAC5BlT,EAAU6F,EAAI,GAAKvP,EAAS6c,EAC5BnT,EAAU6F,EAAI,GAAKvP,EAASqkB,EAC5B3a,EAAU6F,EAAI,GAAKvP,EAAS4c,EAC5BlT,EAAU6F,EAAI,GAAKvP,EAAS6c,EAC5BnT,EAAU6F,EAAI,GAAKvP,EAASqkB,EAG5BtB,EAAOrZ,EAAW,EAAG8Z,EAAM,EAAGjU,EAAI,GAElCiU,EAAKjU,EAAI,GAAKvP,EAAS4c,EACvB4G,EAAKjU,EAAI,GAAKvP,EAAS6c,EACvB2G,EAAKjU,EAAI,GAAKvP,EAASqkB,EACvBb,EAAKjU,EAAI,GAAKvP,EAAS4c,EACvB4G,EAAKjU,EAAI,GAAKvP,EAAS6c,EACvB2G,EAAKjU,EAAI,GAAKvP,EAASqkB,EAEvBrd,KAAK8d,WAAW9kB,SAASglB,aAAc,EACvChe,KAAK8d,WAAWvB,SAASyB,aAAc,EACvChe,KAAK8d,WAAWtB,KAAKwB,aAAc,GAGrClC,EAAM0C,iBAAmB,SAASC,GAqHhC,SAASC,EAAMjb,EAAGkb,GAChB,YAAU/hB,IAAN6G,EAAwBkb,EACrBlb,EAGTqY,EAAM8C,SAASC,KAAK7e,MAEpBye,EAAaA,GAAc,GAE3Bze,KAAK8e,UAAYJ,EAAMD,EAAWK,UAAW,GAC7C9e,KAAKrC,IAAM+gB,EAAMD,EAAW9gB,IAAK,MACjCqC,KAAK+e,OAASL,EAAMD,EAAWM,OAAQ,GACvC/e,KAAK0B,MAAQgd,EAAMD,EAAW/c,MAAO,IAAIoa,EAAMkD,MAAM,WACrDhf,KAAKif,QAAUP,EAAMD,EAAWQ,QAAS,GACzCjf,KAAKkf,WAAaR,EAAMD,EAAWS,WAAY,IAAIpD,EAAMqD,QAAQ,EAAG,IACpEnf,KAAKof,gBAAkBV,EAAMD,EAAWW,gBAAiB,GACzDpf,KAAKqf,KAAOX,EAAMD,EAAWY,KAAM,GACnCrf,KAAKsf,IAAMZ,EAAMD,EAAWa,IAAK,GACjCtf,KAAKuf,UAAYb,EAAMD,EAAWc,UAAW,IAC7Cvf,KAAKwf,QAAUxf,KAAKuf,YAAc,GAAK,EAAI,EAC3Cvf,KAAKyf,WAAaf,EAAMD,EAAWgB,WAAY,GAC/Czf,KAAK0f,UAAYhB,EAAMD,EAAWiB,UAAW,GAE7C,IAAIC,EAAW,IAAI7D,EAAM8D,kBAAkB,CACzCC,SAAU,CACRf,UAAW,CAAE5U,KAAM,IAAKK,MAAOvK,KAAK8e,WACpCnhB,IAAK,CAAEuM,KAAM,IAAKK,MAAOvK,KAAKrC,KAC9BohB,OAAQ,CAAE7U,KAAM,IAAKK,MAAOvK,KAAK+e,QACjCrd,MAAO,CAAEwI,KAAM,IAAKK,MAAOvK,KAAK0B,OAChCud,QAAS,CAAE/U,KAAM,IAAKK,MAAOvK,KAAKif,SAClCC,WAAY,CAAEhV,KAAM,KAAMK,MAAOvK,KAAKkf,YACtCE,gBAAiB,CAAElV,KAAM,IAAKK,MAAOvK,KAAKof,iBAC1CC,KAAM,CAAEnV,KAAM,IAAKK,MAAOvK,KAAKqf,MAC/BC,IAAK,CAAEpV,KAAM,IAAKK,MAAOvK,KAAKsf,KAC9BC,UAAW,CACTrV,KAAM,KACNK,MAAO,IAAIuR,EAAMqD,QAAQnf,KAAKuf,UAAU,GAAIvf,KAAKuf,UAAU,KAE7DC,QAAS,CAAEtV,KAAM,IAAKK,MAAOvK,KAAKwf,SAClCC,WAAY,CAAEvV,KAAM,IAAKK,MAAOvK,KAAKyf,YACrCC,UAAW,CAAExV,KAAM,IAAKK,MAAOvK,KAAK0f,YAEtCI,aA9JuB,CACvB,yBACA,GACA,2BACA,2BACA,uBACA,wBACA,yBACA,qBACA,4BACA,GACA,iCACA,gCACA,2BACA,2BACA,sBACA,yBACA,sBACA,qBACA,iCACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,qCACA,GACA,6BACA,uBACA,2BACA,kBACA,GACA,IACA,GACA,gBACA,GACA,kDACA,2EACA,GACA,uCACA,gBACA,GACA,mDACA,sDACA,gDACA,4CACA,GACA,oDACA,2CACA,2CACA,GACA,2DACA,sDACA,GACA,oCACA,uCACA,QACA,GACA,gBACA,mEACA,wEACA,aACA,qDACA,qDACA,0CACA,GACA,+CACA,8CACA,6EACA,GACA,QACA,GACA,2EACA,2CACA,0BACA,wBACA,GACA,qDACA,qCACA,GACA,iEACA,mCACA,GACA,KA0EiCtX,KAAK,QACtCuX,eAxEyB,CACzB,kDACA,2BACA,GACA,yBACA,wBACA,yBACA,0BACA,4BACA,2BACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,gBACA,GACA,uBACA,oCACA,qDACA,0BACA,SACA,OACA,wBACA,mDACA,KA8CqCvX,KAAK,UAoB5C,cAjBOiW,EAAWK,iBACXL,EAAW9gB,WACX8gB,EAAWM,cACXN,EAAW/c,aACX+c,EAAWQ,eACXR,EAAWS,kBACXT,EAAWW,uBACXX,EAAWY,YACXZ,EAAWa,WACXb,EAAWc,iBACXd,EAAWgB,kBACXhB,EAAWiB,UAElBC,EAASzV,KAAO,mBAEhByV,EAASK,UAAUvB,GAEZkB,GAGT7D,EAAM0C,iBAAiB/C,UAAYjc,OAAOzG,OAAO+iB,EAAM8C,SAASnD,WAChEK,EAAM0C,iBAAiB/C,UAAUwE,YAAcnE,EAAM0C,iBAErD1C,EAAM0C,iBAAiB/C,UAAUyE,KAAO,SAASrE,GAa/C,OAZAC,EAAM8C,SAASnD,UAAUyE,KAAKrB,KAAK7e,KAAM6b,GAEzC7b,KAAK8e,UAAYjD,EAAOiD,UACxB9e,KAAKrC,IAAMke,EAAOle,IAClBqC,KAAK+e,OAASlD,EAAOkD,OACrB/e,KAAK0B,MAAMwe,KAAKrE,EAAOna,OACvB1B,KAAKif,QAAUpD,EAAOoD,QACtBjf,KAAKkf,WAAWgB,KAAKrE,EAAOqD,YAC5Blf,KAAKof,gBAAkBvD,EAAOuD,gBAC9Bpf,KAAKqf,KAAOxD,EAAOwD,KACnBrf,KAAKsf,IAAMzD,EAAOyD,IAEXtf,MAGT2b,EAAQW,SAAWR,EAAMQ,SACzBX,EAAQ6C,iBAAmB1C,EAAM0C,kB,oBChbjC,IAAI5K,EAAQvT,EAAQ,KAAiBuT,MAErC+H,EAAQ/H,MAAQA,EAEhB,IAAI3Y,EAAQoF,EAAQ,KAAqB8f,gBAAgB,GAEzDxE,EAAQ1gB,MAAQA,EAEZoK,SACFA,OAAO+a,KAAOzE,I,kGCThB,IAAIG,EAAQzb,EAAQ,KAChBggB,EAAQhgB,EAAQ,KACpBgF,OAAOyW,MAAQA,EACfzb,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACR,IAAIub,EAAOvb,EAAQ,KAAoBub,KACnCf,EAAOxa,EAAQ,KAAoBwa,KACnCyF,EAAgBjgB,EAAQ,IAARA,CAAoCyb,GACxDA,EAAMQ,SAAWjc,EAAQ,KAA6Bic,SACtDR,EAAM0C,iBAAmBne,EAAQ,KAA6Bme,iBAC9D,IAAI+B,EAAKlgB,EAAQ,MACbyT,EAAKzT,EAAQ,KAEjBsb,EAAQ6E,QAAU,CAChB1E,MAAOA,EACPuE,MAAOA,EACPI,YAAY,EACZ7E,KAAMA,EACNf,KAAMA,EACNyF,cAAeA,EACfC,GAAIA,EACJzM,GAAIA,EACJ4M,WAAY,MACZC,eAAgB,QAChBC,mBAAoB,QACpBC,iBAAkB,SAClBC,cAAe,iCACfC,aAAc,iCACdC,cAAc,EACdC,aAAa,EACbC,gBAAgB,EAChBC,eAAe,EACfC,mBAAmB,EACnBC,yBAAyB,EACzBC,WAAY,SACZC,YAAa,SACbC,UAAW,EACXC,eAAgB,EAChBC,OAAQ,KACRC,MAAO,WACPC,KAAK,EACLC,+BAAgC,GAChCC,YAAY,EACZC,UAAW,IACXC,cAAe,IACfC,cAAe,IACfC,gBAAiB,yBACjBC,aAAc,IACdC,gBAAgB,EAChBC,UAAW,W,oBClDb,IAAIC,EAAMjiB,EAAQ,IAAamgB,QAE3B1E,GADUzb,EAAQ,KAAWkiB,MACrBD,EAAIxG,OACZuE,EAAQiC,EAAIjC,MACZI,EAAa6B,EAAI7B,WAIjBF,GAHO+B,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,cACfgC,EAAI/B,IACTzM,EAAKwO,EAAIxO,GA6Nb6H,EAAQ/H,MA3NI,SAAS3Y,EAAOunB,GAE1B,IAAIC,EAAOziB,KAGXA,KAAK0iB,QAAUznB,EACf+E,KAAKwiB,QAAUA,GAAW,CACxBG,OAAQL,EAAIZ,QAEd1hB,KAAK4iB,eAAiB5iB,KAAKwiB,QAAQK,aAAe,GAElD7iB,KAAK8iB,YAAc,GACnB9iB,KAAK+iB,YAAc,GACnB/iB,KAAKgjB,UAAY,IACjBhjB,KAAKijB,cAAgB,IAAInH,EAAMoH,cAC/BljB,KAAKijB,cAAcE,aAAc,EACjCnjB,KAAKojB,cAAgB,EACrBpjB,KAAKqjB,UAAY,GACjBrjB,KAAKsjB,IAAM,GACXtjB,KAAKqf,KAAO,EACZrf,KAAKsf,IAAM,IACXtf,KAAKujB,WAAa,IAAIzH,EAAM0H,QAAQ,EAAG,EAAG,GAC1CxjB,KAAKyjB,SAAW,IAAI3H,EAAM0H,QAAQ,EAAG,EAAG,GACxCxjB,KAAK0jB,SAAW,KAChB1jB,KAAK2jB,SAAU,EACf3jB,KAAK4jB,YAAc,IACnB5jB,KAAK6jB,aAAe,IACpB7jB,KAAK8jB,QAAU,IACf9jB,KAAK2H,QAAS,EACd3H,KAAK+jB,WAAY,EACjB/jB,KAAK8T,GAAKA,EAAG,IACb9T,KAAKgkB,YAAa,EAClBhkB,KAAKiC,UAAY,EACjBjC,KAAKikB,iBAAmB,EACxBjkB,KAAKkkB,WAAa5B,EAAIV,IACtB5hB,KAAKmkB,0BAA4B7B,EAAIT,+BACrC7hB,KAAKD,UAAW,EAChBC,KAAKokB,SAAW,KAChBpkB,KAAKqkB,UAAY,GACjBrkB,KAAKskB,iBAAmB,KACxBtkB,KAAKukB,qBAAuBjC,EAAIjB,wBAChCrhB,KAAKwkB,eAAiB,GACtBxkB,KAAKykB,aAAe,KACpBzkB,KAAK0kB,KAAO,KAEZrkB,EAAQ,IAARA,CAAyBL,MACzBK,EAAQ,IAARA,CAAmBL,MACnBK,EAAQ,IAARA,CAAuBL,MACvBK,EAAQ,IAARA,CAA0BL,MAC1BK,EAAQ,IAARA,CAAoBL,MACpBK,EAAQ,IAARA,CAAmBL,MACnBK,EAAQ,IAARA,CAAoBL,MACpBK,EAAQ,IAARA,CAAkBL,MAClBK,EAAQ,IAARA,CAAiBL,MACjBK,EAAQ,IAARA,CAAoBL,MAKpB,IAAI2kB,EAAQ,IAAItE,EAChBrgB,KAAK+R,QAAU,WACT0O,IACFkE,EAAMC,UAAU,GAChB3U,SAAS5J,KAAKwe,YAAYF,EAAMG,MAElC9kB,KAAKgY,WAYPhY,KAAKgY,QAAU,WACTyI,GACFkE,EAAMI,QAGRtC,EAAKuC,SAASC,SACdxC,EAAK9H,SAED8F,GACFkE,EAAMO,MAURC,sBAAsB1C,EAAKzK,UAM7BhY,KAAK6T,KAAO,WAAqB,IAAZ6J,IAAW,yDAC9B+E,EAAK2C,SAAW,IAAItJ,EAAMuJ,cAAc,CACtCC,OAAO,EACPC,UAAW7H,EACX8H,uBAAuB,IAIzB/C,EAAKgD,mBACLhD,EAAKiD,oBAELjD,EAAKkD,cACLlD,EAAKmD,eACLnD,EAAKoD,gBACLpD,EAAKqD,cAELrD,EAAKsD,QAAQlB,YAAYpC,EAAK2C,SAASY,YACvCvD,EAAKsD,QAAQlB,YAAYpC,EAAKwD,YAAYD,YAE1CvD,EAAKyD,OAASjW,SAASkW,cAAc,mBAErC1D,EAAK2D,cAEL3D,EAAK4D,aAELhhB,OAAO6B,iBACL,SACA,SAASrG,GACPA,EAAEylB,iBACF7D,EAAK8D,mBAEP,IAOJ9D,EAAK8D,eAAiB,WACpB9D,EAAK+D,WAAa/D,EAAKsD,QAAQU,wBAC/BhE,EAAK7Q,MAAQ6Q,EAAK+D,WAAW5U,MAC7B6Q,EAAKhP,OAASgP,EAAK+D,WAAW/S,OAC9BgP,EAAKiE,QAAQ9U,MAAQ,GAAM6Q,EAAKhP,OAChCgP,EAAKiE,QAAQjT,OAAS,GAAMgP,EAAKhP,OACjCgP,EAAKkE,OAASlE,EAAK7Q,MAAQ6Q,EAAKhP,OAChCgP,EAAKmE,QAAQD,OAASlE,EAAKkE,OAC3BlE,EAAKmE,QAAQC,yBAEbpE,EAAK2C,SAAS0B,QAAQrE,EAAK7Q,MAAO6Q,EAAKhP,QACvCgP,EAAKwD,YAAYa,QAAQrE,EAAK7Q,MAAO6Q,EAAKhP,SAM5C,IAAIsT,EAAQ,EACRC,EAAoC,EACxChnB,KAAK2a,OAAS,WAUZ,GATA8H,EAAKwE,eACLxE,EAAKyE,cACQ,GAATH,IACFtE,EAAK0E,eACL1E,EAAK2E,cACLL,EAAQ,GAEVA,GAAS,EACTC,GAAqC,EACV,MAAvBvE,EAAKD,QAAQG,QACQ,GAAnBF,EAAKuB,WAAoB,CAC3B,IAAI3pB,EAAQ,GAQZ,GAPAooB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BjD,EAAM8D,KAAKb,KAEbmlB,EAAK6E,MAAMjtB,MAAMA,GACjBooB,EAAK6E,MAAMA,MAAM,OAAQ/G,EAAGgH,UAAU9E,EAAKM,cAC3CN,EAAK6E,MAAME,UACX/E,EAAK6E,MAAMG,OACPhF,EAAKiF,eAAiBjF,EAAK9a,OAE7B,IACE,IAAI1G,EAAI,EACNrD,EAAIyB,KAAKsoB,KACPtoB,KAAK9F,IAAIkpB,EAAK6E,MAAMM,YAClBvoB,KAAK9F,IAAI,EAAIkpB,EAAK6E,MAAMO,eAE9B5mB,EAAIrD,IACFqD,EAEFwhB,EAAK6E,MAAMQ,OAIfrF,EAAKuB,YAAa,EAGtBvB,EAAK2C,SAAS2C,YAAY,EAAG,EAAG,EAAItF,EAAK7Q,MAAO,EAAI6Q,EAAKhP,QACzDgP,EAAK2C,SAAS4C,WAAWvF,EAAKiE,QAAQ9U,MAAO,EAAG,EAAI6Q,EAAK7Q,MAAO,EAAI6Q,EAAKhP,QACzEgP,EAAK2C,SAAS6C,gBAAe,GAC7BxF,EAAK2C,SAASzK,OAAO8H,EAAKyF,MAAOzF,EAAKmE,SACtCnE,EAAKwD,YAAYtL,OAAO8H,EAAKyF,MAAOzF,EAAKmE,SAGrCI,GAAqChnB,KAAKmkB,4BAC5C6C,EAAoC,EAEhCvE,EAAKyB,aACPzB,EAAKiE,QAAQ9U,MAAQ,GAAM6Q,EAAKhP,OAChCgP,EAAKiE,QAAQjT,OAAS,GAAMgP,EAAKhP,OACjCgP,EAAK2C,SAAS2C,YAAY,EAAG,EAAGtF,EAAKiE,QAAQ9U,MAAO6Q,EAAKiE,QAAQjT,QACjEgP,EAAK2C,SAAS4C,WAAW,EAAG,EAAGvF,EAAKiE,QAAQ9U,MAAO6Q,EAAKiE,QAAQjT,QAChEgP,EAAK2C,SAAS6C,gBAAe,GAC7BxF,EAAK2C,SAASzK,OAAO8H,EAAKyF,MAAOzF,EAAKiE,QAAQyB,a,mBCzNtD,WACE,IAAIC,EAAU,EAGd,SAASC,IACProB,KAAKsoB,WAAa,EAElBtoB,KAAKuoB,MAAQ,GACbvoB,KAAKwoB,SAAW,GAYhBxoB,KAAKyoB,SAAW,IAAIC,EACpB1oB,KAAK2oB,WAAa,IAAID,EAEtB1oB,KAAKod,SAAW,GAooBlB,SAASwL,IACP5oB,KAAK6oB,OAAS,IAAI/M,MAAM0H,QACxBxjB,KAAK8oB,SAAW,IAAIhN,MAAM0H,QAC1BxjB,KAAK+oB,KAAO,EAEZ/oB,KAAKgpB,SAAW,EAChBhpB,KAAKipB,QAAU,KACfjpB,KAAKkpB,KAAOd,EACZpoB,KAAKmpB,KAAO,KAuEd,SAASC,EAASC,EAAQC,GACxBtpB,KAAKqpB,OAASA,EACdrpB,KAAKupB,KAAO,KACZvpB,KAAKwc,KAAO,KACZxc,KAAKwpB,KAAO,KACZxpB,KAAKspB,KAAOA,EA4Cd,SAASG,EAAWC,GAClB1pB,KAAK0pB,MAAQA,EACb1pB,KAAKupB,KAAO,KACZvpB,KAAKwc,KAAO,KACZxc,KAAKspB,KAAO,KAKd,SAASZ,IACP1oB,KAAK2pB,KAAO,KACZ3pB,KAAK4pB,KAAO,KA5wBdpqB,OAAOqqB,OAAOxB,EAAU5M,UAAW,CACjCqO,cAAe,SAASC,IACQ,IAA1BxM,MAAMyM,QAAQD,IAChBzwB,QAAQiN,MAAM,sDAGZwjB,EAAO5qB,OAAS,GAClB7F,QAAQiN,MACN,8DAIJvG,KAAKiqB,YAEL,IAAK,IAAIhpB,EAAI,EAAGsH,EAAIwhB,EAAO5qB,OAAQ8B,EAAIsH,EAAGtH,IACxCjB,KAAKod,SAASjf,KAAK,IAAIsrB,EAAWM,EAAO9oB,KAK3C,OAFAjB,KAAKkqB,UAEElqB,MAGTmqB,cAAe,SAASC,GACtB,IAAIL,EAAS,GAqCb,OAnCAK,EAAOC,mBAAkB,GAEzBD,EAAOE,SAAS,SAAShtB,GACvB,IAAI2D,EAAGsH,EAAGmhB,EAEN7M,EAAWvf,EAAKuf,SAEpB,QAAiBjgB,IAAbigB,EACF,GAAIA,EAAS0N,WAAY,CACvB,IAAInN,EAAWP,EAASO,SAExB,IAAKnc,EAAI,EAAGsH,EAAI6U,EAASje,OAAQ8B,EAAIsH,EAAGtH,KACtCyoB,EAAQtM,EAASnc,GAAGupB,SACdC,aAAantB,EAAKotB,aAExBX,EAAO5rB,KAAKurB,QAET,GAAI7M,EAAS8N,iBAAkB,CACpC,IAAIC,EAAY/N,EAASiB,WAAW9kB,SAEpC,QAAkB4D,IAAdguB,EACF,IAAK3pB,EAAI,EAAGsH,EAAIqiB,EAAUC,MAAO5pB,EAAIsH,EAAGtH,KACtCyoB,EAAQ,IAAI5N,MAAM0H,SAGfsH,oBAAoBF,EAAW3pB,GAC/BwpB,aAAantB,EAAKotB,aAErBX,EAAO5rB,KAAKurB,MAOf1pB,KAAK8pB,cAAcC,IAG5BE,UAAW,WAIT,OAHAjqB,KAAKuoB,MAAQ,GACbvoB,KAAKod,SAAW,GAETpd,MAKT+qB,gBAAiB,SAAS1B,EAAQC,GAWhC,OAVAD,EAAOC,KAAOA,EAEO,OAAjBA,EAAKL,QACPjpB,KAAKyoB,SAASuC,OAAO3B,GAErBrpB,KAAKyoB,SAASwC,aAAa3B,EAAKL,QAASI,GAG3CC,EAAKL,QAAUI,EAERrpB,MAKTkrB,qBAAsB,SAAS7B,EAAQC,GAiBrC,OAhBID,IAAWC,EAAKL,UAGE,OAAhBI,EAAO7M,MAAiB6M,EAAO7M,KAAK8M,OAASA,EAG/CA,EAAKL,QAAUI,EAAO7M,KAItB8M,EAAKL,QAAU,MAInBjpB,KAAKyoB,SAAS0C,OAAO9B,GAEdrpB,MAKTorB,0BAA2B,SAAS9B,GAClC,GAAqB,OAAjBA,EAAKL,QAAkB,CAMzB,IAHA,IAAIoC,EAAQ/B,EAAKL,QACb/D,EAAMoE,EAAKL,QAEK,OAAb/D,EAAI1I,MAAiB0I,EAAI1I,KAAK8M,OAASA,GAC5CpE,EAAMA,EAAI1I,KAUZ,OAPAxc,KAAKyoB,SAAS6C,cAAcD,EAAOnG,GAInCmG,EAAM9B,KAAOrE,EAAI1I,KAAO,KACxB8M,EAAKL,QAAU,KAERoC,IAMXE,mBAAoB,SAASjC,EAAMkC,GACjC,IAAIC,EAAezrB,KAAKorB,0BAA0B9B,GAElD,QAAqB1sB,IAAjB6uB,EACF,QAAsB7uB,IAAlB4uB,EAGFxrB,KAAK2oB,WAAW+C,YAAYD,OACvB,CAGL,IAAIpC,EAASoC,EAEb,EAAG,CAID,IAAIE,EAAatC,EAAO7M,KAETgP,EAAcI,gBAAgBvC,EAAOK,OAIrC1pB,KAAKsoB,UAClBtoB,KAAK+qB,gBAAgB1B,EAAQmC,GAE7BxrB,KAAK2oB,WAAWqC,OAAO3B,GAKzBA,EAASsC,QACS,OAAXtC,GAIb,OAAOrpB,MAKT6rB,wBAAyB,SAASrD,GAChC,IAAkC,IAA9BxoB,KAAK2oB,WAAWmD,UAAqB,CACvC,IAAIzC,EAASrpB,KAAK2oB,WAAWoD,QAE7B,EAAG,CASD,IANA,IAAIJ,EAAatC,EAAO7M,KAEpBwP,EAAchsB,KAAKsoB,UAEnB2D,EAAU,KAELhrB,EAAI,EAAGA,EAAIunB,EAASrpB,OAAQ8B,IAAK,CACxC,IAAIqoB,EAAOd,EAASvnB,GAEpB,GAAIqoB,EAAKJ,OAASd,EAAS,CACzB,IAAI8D,EAAW5C,EAAKsC,gBAAgBvC,EAAOK,OAO3C,GALIwC,EAAWF,IACbA,EAAcE,EACdD,EAAU3C,GAGR0C,EAAc,IAAOhsB,KAAKsoB,UAAW,OAM7B,OAAZ2D,GACFjsB,KAAK+qB,gBAAgB1B,EAAQ4C,GAG/B5C,EAASsC,QACS,OAAXtC,GAGX,OAAOrpB,MAKTmsB,gBAAiB,WACf,IAMIlrB,EAAGsH,EAAG4U,EANNtb,EAAM,IAAIia,MAAM0H,QAChB1hB,EAAM,IAAIga,MAAM0H,QAEhB4I,EAAc,GACdC,EAAc,GAMlB,IAAKprB,EAAI,EAAGA,EAAI,EAAGA,IACjBmrB,EAAYnrB,GAAKorB,EAAYprB,GAAKjB,KAAKod,SAAS,GAQlD,IALAvb,EAAIqe,KAAKlgB,KAAKod,SAAS,GAAGsM,OAC1B5nB,EAAIoe,KAAKlgB,KAAKod,SAAS,GAAGsM,OAIrBzoB,EAAI,EAAGsH,EAAIvI,KAAKod,SAASje,OAAQ8B,EAAIsH,EAAGtH,IAAK,CAChD,IAAIooB,EAASrpB,KAAKod,SAASnc,GACvByoB,EAAQL,EAAOK,MAInB,IAAKvM,EAAI,EAAGA,EAAI,EAAGA,IACbuM,EAAM4C,aAAanP,GAAKtb,EAAIyqB,aAAanP,KAC3Ctb,EAAI0qB,aAAapP,EAAGuM,EAAM4C,aAAanP,IACvCiP,EAAYjP,GAAKkM,GAMrB,IAAKlM,EAAI,EAAGA,EAAI,EAAGA,IACbuM,EAAM4C,aAAanP,GAAKrb,EAAIwqB,aAAanP,KAC3Crb,EAAIyqB,aAAapP,EAAGuM,EAAM4C,aAAanP,IACvCkP,EAAYlP,GAAKkM,GAcvB,OAPArpB,KAAKsoB,UACH,EACAtkB,OAAOwoB,SACNntB,KAAKyC,IAAIzC,KAAKotB,IAAI5qB,EAAI+T,GAAIvW,KAAKotB,IAAI3qB,EAAI8T,IACtCvW,KAAKyC,IAAIzC,KAAKotB,IAAI5qB,EAAIgU,GAAIxW,KAAKotB,IAAI3qB,EAAI+T,IACvCxW,KAAKyC,IAAIzC,KAAKotB,IAAI5qB,EAAIwb,GAAIhe,KAAKotB,IAAI3qB,EAAIub,KAEpC,CAAExb,IAAKuqB,EAAatqB,IAAKuqB,IAMlCK,mBAAqB,WACnB,IAAIC,EAAOC,EAAOC,EAElB,OAAO,gBACSjwB,IAAV+vB,IACFA,EAAQ,IAAI7Q,MAAMgR,MAClBF,EAAQ,IAAI9Q,MAAMiR,MAClBF,EAAe,IAAI/Q,MAAM0H,SAG3B,IAAI6F,EAMA2D,EAAIC,EAAIC,EAAIC,EACZlsB,EAAGsH,EAAG4U,EAON+O,EAbF9O,EAAWpd,KAAKod,SACdgQ,EAAWptB,KAAKmsB,kBAChBtqB,EAAMurB,EAASvrB,IACfC,EAAMsrB,EAAStrB,IAWjBkqB,EAAc,EACZlR,EAAQ,EAEZ,IAAK7Z,EAAI,EAAGA,EAAI,EAAGA,KACjBirB,EACEpqB,EAAIb,GAAGyoB,MAAM4C,aAAarrB,GAAKY,EAAIZ,GAAGyoB,MAAM4C,aAAarrB,IAE5C+qB,IACbA,EAAcE,EACdpR,EAAQ7Z,GAYZ,IARA+rB,EAAKnrB,EAAIiZ,GACTmS,EAAKnrB,EAAIgZ,GAITkR,EAAc,EACdW,EAAMtW,IAAI2W,EAAGtD,MAAOuD,EAAGvD,OAElBzoB,EAAI,EAAGsH,EAAIvI,KAAKod,SAASje,OAAQ8B,EAAIsH,EAAGtH,KAC3CooB,EAASjM,EAASnc,MAEH+rB,GAAM3D,IAAW4D,IAC9BN,EAAMU,oBAAoBhE,EAAOK,OAAO,EAAMmD,IAE9CX,EAAWW,EAAaS,kBAAkBjE,EAAOK,QAElCsC,IACbA,EAAcE,EACdgB,EAAK7D,IAUX,IAHA2C,EAAc,EACdY,EAAMW,sBAAsBP,EAAGtD,MAAOuD,EAAGvD,MAAOwD,EAAGxD,OAE9CzoB,EAAI,EAAGsH,EAAIvI,KAAKod,SAASje,OAAQ8B,EAAIsH,EAAGtH,KAC3CooB,EAASjM,EAASnc,MAEH+rB,GAAM3D,IAAW4D,GAAM5D,IAAW6D,IAC/ChB,EAAW7sB,KAAKotB,IAAIG,EAAMhB,gBAAgBvC,EAAOK,SAElCsC,IACbA,EAAcE,EACdiB,EAAK9D,GAKX,IAAId,EAAQ,GAEZ,GAAIqE,EAAMhB,gBAAgBuB,EAAGzD,OAAS,EAYpC,IATAnB,EAAMpqB,KACJyqB,EAAK7vB,OAAOi0B,EAAIC,EAAIC,GACpBtE,EAAK7vB,OAAOo0B,EAAIF,EAAID,GACpBpE,EAAK7vB,OAAOo0B,EAAID,EAAID,GACpBrE,EAAK7vB,OAAOo0B,EAAIH,EAAIE,IAKjBjsB,EAAI,EAAGA,EAAI,EAAGA,IACjBkc,GAAKlc,EAAI,GAAK,EAIdsnB,EAAMtnB,EAAI,GAAGusB,QAAQ,GAAGC,QAAQlF,EAAM,GAAGiF,QAAQrQ,IAIjDoL,EAAMtnB,EAAI,GAAGusB,QAAQ,GAAGC,QAAQlF,EAAMpL,EAAI,GAAGqQ,QAAQ,SAcvD,IATAjF,EAAMpqB,KACJyqB,EAAK7vB,OAAOi0B,EAAIE,EAAID,GACpBrE,EAAK7vB,OAAOo0B,EAAIH,EAAIC,GACpBrE,EAAK7vB,OAAOo0B,EAAIF,EAAIC,GACpBtE,EAAK7vB,OAAOo0B,EAAID,EAAIF,IAKjB/rB,EAAI,EAAGA,EAAI,EAAGA,IACjBkc,GAAKlc,EAAI,GAAK,EAIdsnB,EAAMtnB,EAAI,GAAGusB,QAAQ,GAAGC,QAAQlF,EAAM,GAAGiF,SAAS,EAAIvsB,GAAK,IAI3DsnB,EAAMtnB,EAAI,GAAGusB,QAAQ,GAAGC,QAAQlF,EAAMpL,EAAI,GAAGqQ,QAAQ,IAMzD,IAAKvsB,EAAI,EAAGA,EAAI,EAAGA,IACjBjB,KAAKuoB,MAAMpqB,KAAKoqB,EAAMtnB,IAKxB,IAAKA,EAAI,EAAGsH,EAAI6U,EAASje,OAAQ8B,EAAIsH,EAAGtH,IAGtC,IAFAooB,EAASjM,EAASnc,MAGL+rB,GACX3D,IAAW4D,GACX5D,IAAW6D,GACX7D,IAAW8D,EACX,CACAnB,EAAchsB,KAAKsoB,UACnB,IAAI2D,EAAU,KAEd,IAAK9O,EAAI,EAAGA,EAAI,EAAGA,KACjB+O,EAAWlsB,KAAKuoB,MAAMpL,GAAGyO,gBAAgBvC,EAAOK,QAEjCsC,IACbA,EAAcE,EACdD,EAAUjsB,KAAKuoB,MAAMpL,IAIT,OAAZ8O,GACFjsB,KAAK+qB,gBAAgB1B,EAAQ4C,GAKnC,OAAOjsB,MApKU,GA0KrB0tB,aAAc,WAGZ,IAFA,IAAIC,EAAc,GAET1sB,EAAI,EAAGA,EAAIjB,KAAKuoB,MAAMppB,OAAQ8B,IAAK,CAC1C,IAAIqoB,EAAOtpB,KAAKuoB,MAAMtnB,GAElBqoB,EAAKJ,OAASd,GAChBuF,EAAYxvB,KAAKmrB,GAMrB,OAFAtpB,KAAKuoB,MAAQoF,EAEN3tB,MAKT4tB,gBAAiB,WAGf,IAAgC,IAA5B5tB,KAAKyoB,SAASqD,UAAqB,CACrC,IAAI+B,EACF7B,EAAc,EAIZ8B,EAAU9tB,KAAKyoB,SAASsD,QAAQzC,KAChCD,EAASyE,EAAQ7E,QAIrB,EAAG,CACD,IAAIiD,EAAW4B,EAAQlC,gBAAgBvC,EAAOK,OAE1CwC,EAAWF,IACbA,EAAcE,EACd2B,EAAYxE,GAGdA,EAASA,EAAO7M,WACE,OAAX6M,GAAmBA,EAAOC,OAASwE,GAE5C,OAAOD,IAQXE,eAAgB,SAASC,EAAUC,EAAW3E,EAAM4E,GAOlD,IAAI/E,EAJJnpB,KAAKurB,mBAAmBjC,GAExBA,EAAKJ,KA/gBK,EAohBRC,EADgB,OAAd8E,EACKA,EAAY3E,EAAKkE,QAAQ,GAKzBS,EAAUzR,KAGnB,EAAG,CACD,IAAI2R,EAAWhF,EAAKK,KAChB4E,EAAeD,EAAS7E,KAExB8E,EAAalF,OAASd,IACpBgG,EAAaxC,gBAAgBoC,GAAYhuB,KAAKsoB,UAGhDtoB,KAAK+tB,eAAeC,EAAUG,EAAUC,EAAcF,GAItDA,EAAQ/vB,KAAKgrB,IAIjBA,EAAOA,EAAK3M,WACL2M,IAAS8E,GAElB,OAAOjuB,MAKTquB,iBAAkB,SAASR,EAAWS,GAGpC,IAAIhF,EAAOV,EAAK7vB,OAAO80B,EAAWS,EAAY1E,OAAQ0E,EAAY3E,QAQlE,OANA3pB,KAAKuoB,MAAMpqB,KAAKmrB,GAIhBA,EAAKkE,SAAS,GAAGC,QAAQa,EAAY9E,MAE9BF,EAAKkE,QAAQ,IAMtBe,YAAa,SAASV,EAAWK,GAC/BluB,KAAKwoB,SAAW,GAKhB,IAHA,IAAIgG,EAAgB,KAChBC,EAAmB,KAEdxtB,EAAI,EAAGA,EAAIitB,EAAQ/uB,OAAQ8B,IAAK,CACvC,IAAIqtB,EAAcJ,EAAQjtB,GAItBytB,EAAW1uB,KAAKquB,iBAAiBR,EAAWS,GAE1B,OAAlBE,EACFA,EAAgBE,EAIhBA,EAASlS,KAAKiR,QAAQgB,GAGxBzuB,KAAKwoB,SAASrqB,KAAKuwB,EAASpF,MAC5BmF,EAAmBC,EAOrB,OAFAF,EAAchS,KAAKiR,QAAQgB,GAEpBzuB,MAKT2uB,gBAAiB,SAASd,GACxB,IAAIK,EAAU,GAiBd,OAdAluB,KAAK2oB,WAAWjlB,QAIhB1D,KAAKkrB,qBAAqB2C,EAAWA,EAAUvE,MAE/CtpB,KAAK+tB,eAAeF,EAAUnE,MAAO,KAAMmE,EAAUvE,KAAM4E,GAE3DluB,KAAKuuB,YAAYV,EAAWK,GAI5BluB,KAAK6rB,wBAAwB7rB,KAAKwoB,UAE3BxoB,MAGT4uB,QAAS,WAKP,OAJA5uB,KAAKyoB,SAAS/kB,QACd1D,KAAK2oB,WAAWjlB,QAChB1D,KAAKwoB,SAAW,GAETxoB,MAGTkqB,QAAS,WACP,IAAIb,EAMJ,IAJArpB,KAAK0sB,0BAIwC9vB,KAArCysB,EAASrpB,KAAK4tB,oBACpB5tB,KAAK2uB,gBAAgBtF,GAOvB,OAJArpB,KAAK0tB,eAEL1tB,KAAK4uB,UAEE5uB,QAiBXR,OAAOqqB,OAAOjB,EAAM,CAClB7vB,OAAQ,SAAS6C,EAAGoa,EAAGiH,GACrB,IAAIqM,EAAO,IAAIV,EAEXiG,EAAK,IAAIzF,EAASxtB,EAAG0tB,GACrBwF,EAAK,IAAI1F,EAASpT,EAAGsT,GACrByF,EAAK,IAAI3F,EAASnM,EAAGqM,GAYzB,OARAuF,EAAGrS,KAAOuS,EAAGxF,KAAOuF,EACpBA,EAAGtS,KAAOqS,EAAGtF,KAAOwF,EACpBA,EAAGvS,KAAOsS,EAAGvF,KAAOsF,EAIpBvF,EAAKH,KAAO0F,EAELvF,EAAKY,aAIhB1qB,OAAOqqB,OAAOjB,EAAKnN,UAAW,CAC5B+R,QAAS,SAASvsB,GAGhB,IAFA,IAAIkoB,EAAOnpB,KAAKmpB,KAETloB,EAAI,GACTkoB,EAAOA,EAAK3M,KACZvb,IAGF,KAAOA,EAAI,GACTkoB,EAAOA,EAAKI,KACZtoB,IAGF,OAAOkoB,GAGTe,QAAU,WACR,IAAI8E,EAEJ,OAAO,gBACYpyB,IAAboyB,IAAwBA,EAAW,IAAIlT,MAAMmT,UAEjD,IAAIrzB,EAAIoE,KAAKmpB,KAAKS,OACd5T,EAAIhW,KAAKmpB,KAAKQ,OACd1M,EAAIjd,KAAKmpB,KAAK3M,KAAKmN,OAUvB,OARAqF,EAAS3Y,IAAIza,EAAE8tB,MAAO1T,EAAE0T,MAAOzM,EAAEyM,OAEjCsF,EAASnG,OAAO7oB,KAAK6oB,QACrBmG,EAASlG,SAAS9oB,KAAK8oB,UACvB9oB,KAAK+oB,KAAOiG,EAASjG,OAErB/oB,KAAKgpB,SAAWhpB,KAAK6oB,OAAOqG,IAAIlvB,KAAK8oB,UAE9B9oB,MAlBD,GAsBV4rB,gBAAiB,SAASlC,GACxB,OAAO1pB,KAAK6oB,OAAOqG,IAAIxF,GAAS1pB,KAAKgpB,YAczCxpB,OAAOqqB,OAAOT,EAAS3N,UAAW,CAChCkO,KAAM,WACJ,OAAO3pB,KAAKqpB,QAGdO,KAAM,WACJ,OAAO5pB,KAAKupB,KAAOvpB,KAAKupB,KAAKF,OAAS,MAGxClqB,OAAQ,WACN,IAAIwqB,EAAO3pB,KAAK2pB,OACZC,EAAO5pB,KAAK4pB,OAEhB,OAAa,OAATA,EACKA,EAAKF,MAAMyF,WAAWxF,EAAKD,QAG5B,GAGV0F,cAAe,WACb,IAAIzF,EAAO3pB,KAAK2pB,OACZC,EAAO5pB,KAAK4pB,OAEhB,OAAa,OAATA,EACKA,EAAKF,MAAM4D,kBAAkB3D,EAAKD,QAGnC,GAGV+D,QAAS,SAAStE,GAIhB,OAHAnpB,KAAKwpB,KAAOL,EACZA,EAAKK,KAAOxpB,KAELA,QAoBXR,OAAOqqB,OAAOnB,EAAWjN,UAAW,CAClCsQ,MAAO,WACL,OAAO/rB,KAAK2pB,MAGd0F,KAAM,WACJ,OAAOrvB,KAAK4pB,MAGdlmB,MAAO,WAGL,OAFA1D,KAAK2pB,KAAO3pB,KAAK4pB,KAAO,KAEjB5pB,MAKTirB,aAAc,SAASle,EAAQsc,GAY7B,OAXAA,EAAOE,KAAOxc,EAAOwc,KACrBF,EAAO7M,KAAOzP,EAEM,OAAhBsc,EAAOE,KACTvpB,KAAK2pB,KAAON,EAEZA,EAAOE,KAAK/M,KAAO6M,EAGrBtc,EAAOwc,KAAOF,EAEPrpB,MAKTsvB,YAAa,SAASviB,EAAQsc,GAY5B,OAXAA,EAAOE,KAAOxc,EACdsc,EAAO7M,KAAOzP,EAAOyP,KAED,OAAhB6M,EAAO7M,KACTxc,KAAK4pB,KAAOP,EAEZA,EAAO7M,KAAK+M,KAAOF,EAGrBtc,EAAOyP,KAAO6M,EAEPrpB,MAKTgrB,OAAQ,SAAS3B,GAYf,OAXkB,OAAdrpB,KAAK2pB,KACP3pB,KAAK2pB,KAAON,EAEZrpB,KAAK4pB,KAAKpN,KAAO6M,EAGnBA,EAAOE,KAAOvpB,KAAK4pB,KACnBP,EAAO7M,KAAO,KAEdxc,KAAK4pB,KAAOP,EAELrpB,MAKT0rB,YAAa,SAASrC,GAWpB,IAVkB,OAAdrpB,KAAK2pB,KACP3pB,KAAK2pB,KAAON,EAEZrpB,KAAK4pB,KAAKpN,KAAO6M,EAGnBA,EAAOE,KAAOvpB,KAAK4pB,KAII,OAAhBP,EAAO7M,MACZ6M,EAASA,EAAO7M,KAKlB,OAFAxc,KAAK4pB,KAAOP,EAELrpB,MAKTmrB,OAAQ,SAAS9B,GAaf,OAZoB,OAAhBA,EAAOE,KACTvpB,KAAK2pB,KAAON,EAAO7M,KAEnB6M,EAAOE,KAAK/M,KAAO6M,EAAO7M,KAGR,OAAhB6M,EAAO7M,KACTxc,KAAK4pB,KAAOP,EAAOE,KAEnBF,EAAO7M,KAAK+M,KAAOF,EAAOE,KAGrBvpB,MAKTsrB,cAAe,SAAS1vB,EAAGoa,GAazB,OAZe,OAAXpa,EAAE2tB,KACJvpB,KAAK2pB,KAAO3T,EAAEwG,KAEd5gB,EAAE2tB,KAAK/M,KAAOxG,EAAEwG,KAGH,OAAXxG,EAAEwG,KACJxc,KAAK4pB,KAAOhuB,EAAE2tB,KAEdvT,EAAEwG,KAAK+M,KAAO3tB,EAAE2tB,KAGXvpB,MAGT8rB,QAAS,WACP,OAAqB,OAAd9rB,KAAK2pB,QAMhB7N,MAAMuM,UAAYA,EA56BpB,I,mBCHA,WAGE,SAASkH,EAAexF,GACtBjO,MAAMoB,SAAS2B,KAAK7e,MAEpBA,KAAKkK,KAAO,iBAEZlK,KAAKwvB,mBAAmB,IAAIC,EAAqB1F,IACjD/pB,KAAK0vB,gBAQP,SAASD,EAAqB1F,GAC5BjO,MAAMgB,eAAe+B,KAAK7e,MAE1BA,KAAKkK,KAAO,uBAIZ,IAAIkT,EAAW,GACXuS,EAAU,QAIU/yB,IAApBkf,MAAMuM,WACR/uB,QAAQiN,MACN,8EAUJ,IANA,IAIIgiB,GAJY,IAAIzM,MAAMuM,WAAYyB,cAAcC,GAI9BxB,MAEbtnB,EAAI,EAAGA,EAAIsnB,EAAMppB,OAAQ8B,IAAK,CACrC,IAAIqoB,EAAOf,EAAMtnB,GACbkoB,EAAOG,EAAKH,KAIhB,EAAG,CACD,IAAIO,EAAQP,EAAKQ,OAAOD,MAExBtM,EAASjf,KAAKurB,EAAM9T,EAAG8T,EAAM7T,EAAG6T,EAAMrM,GACtCsS,EAAQxxB,KAAKmrB,EAAKT,OAAOjT,EAAG0T,EAAKT,OAAOhT,EAAGyT,EAAKT,OAAOxL,GAEvD8L,EAAOA,EAAK3M,WACL2M,IAASG,EAAKH,MAKzBnpB,KAAKoe,aACH,WACA,IAAItC,MAAM8T,uBAAuBxS,EAAU,IAE7Cpd,KAAKoe,aAAa,SAAU,IAAItC,MAAM8T,uBAAuBD,EAAS,IAnDxEJ,EAAe9T,UAAYjc,OAAOzG,OAAO+iB,MAAMoB,SAASzB,WACxD8T,EAAe9T,UAAUwE,YAAcsP,EAqDvCE,EAAqBhU,UAAYjc,OAAOzG,OACtC+iB,MAAMgB,eAAerB,WAEvBgU,EAAqBhU,UAAUwE,YAAcwP,EAI7C3T,MAAMyT,eAAiBA,EACvBzT,MAAM2T,qBAAuBA,EA1E/B,I,oBCCA,IAAI3T,EAAQzb,EAAQ,KAEpByb,EAAM+T,YAAc,SAAS9J,GAC3BjK,EAAMgU,SAASjR,KAAK7e,MAEpBA,KAAK+lB,QAAUA,EACf/lB,KAAK+lB,QAAQpU,MAAM3Y,SAAW,WAE9BgH,KAAKkH,iBAAiB,UAAW,WACC,OAA5BlH,KAAK+lB,QAAQgK,YACf/vB,KAAK+lB,QAAQgK,WAAWC,YAAYhwB,KAAK+lB,YAK/CjK,EAAM+T,YAAYpU,UAAYjc,OAAOzG,OAAO+iB,EAAMgU,SAASrU,WAC3DK,EAAM+T,YAAYpU,UAAUwE,YAAcnE,EAAM+T,YAEhD/T,EAAMmU,YAAc,SAASlK,GAC3BjK,EAAM+T,YAAYhR,KAAK7e,KAAM+lB,IAG/BjK,EAAMmU,YAAYxU,UAAYjc,OAAOzG,OAAO+iB,EAAM+T,YAAYpU,WAC9DK,EAAMmU,YAAYxU,UAAUwE,YAAcnE,EAAMmU,YAIhDnU,EAAMoU,cAAgB,WAGpB,IAAIC,EAAQC,EAFZ92B,QAAQC,IAAI,sBAAuBuiB,EAAMuU,UAIzC,IAAIC,EAAS,IAAIxU,EAAMyU,QAEnBpf,EAAQ,CACVgX,OAAQ,CAAE7E,IAAK,EAAG3R,MAAO,IACzB6e,QAAS,IAGPxK,EAAa/V,SAASwgB,cAAc,OACxCzK,EAAWrU,MAAM+e,SAAW,SAE5B1K,EAAWrU,MAAMgf,qBAAuB,cACxC3K,EAAWrU,MAAMif,kBAAoB,cACrC5K,EAAWrU,MAAMkf,gBAAkB,cACnC7K,EAAWrU,MAAMmf,eAAiB,cAElC9wB,KAAKgmB,WAAaA,EAElB,IAAI+K,EAAgB9gB,SAASwgB,cAAc,OAiC3C,SAASO,EAAQzmB,GACf,OAAOlL,KAAKotB,IAAIliB,GAASvG,OAAOwoB,QAAU,EAAIjiB,EA2ChD,SAAS0mB,EAAmBX,GAC1B,IAAIY,EAAWZ,EAAOY,SAEtB,MACE,qCACAF,EAAQE,EAAS,IACjB,IACAF,EAAQE,EAAS,IACjB,IACAF,EAAQE,EAAS,IACjB,IACAF,EAAQE,EAAS,IACjB,IACAF,GAASE,EAAS,IAClB,IACAF,GAASE,EAAS,IAClB,IACAF,GAASE,EAAS,IAClB,IACAF,GAASE,EAAS,IAClB,IACAF,EAAQE,EAAS,IACjB,IACAF,EAAQE,EAAS,IACjB,IACAF,EAAQE,EAAS,KACjB,IACAF,EAAQE,EAAS,KACjB,IACAF,EAAQE,EAAS,KACjB,IACAF,EAAQE,EAAS,KACjB,IACAF,EAAQE,EAAS,KACjB,IACAF,EAAQE,EAAS,KACjB,IA/GJH,EAAcpf,MAAM3Y,SAAW,WAC/B+3B,EAAcpf,MAAM2C,KAAO,MAC3Byc,EAAcpf,MAAM6C,IAAM,MAE1Buc,EAAcpf,MAAMgf,qBAAuB,cAC3CI,EAAcpf,MAAMif,kBAAoB,cACxCG,EAAcpf,MAAMkf,gBAAkB,cACtCE,EAAcpf,MAAMmf,eAAiB,cAErC9K,EAAWnB,YAAYkM,GAEvB/wB,KAAKmxB,cAAgB,aAGrBnxB,KAAKoxB,UAAW,EAEhBpxB,KAAKqxB,QAAU,WACb,MAAO,CACLzf,MAAOue,EACP1c,OAAQ2c,IAIZpwB,KAAK8mB,QAAU,SAASlV,EAAO6B,GAC7B0c,EAASve,EACTwe,EAAU3c,EAEVuS,EAAWrU,MAAMC,MAAQA,EAAQ,KACjCoU,EAAWrU,MAAM8B,OAASA,EAAS,MAmIrCzT,KAAK2a,OAAS,SAASuN,EAAOC,GAC5B,IAAInoB,KAAKoxB,SAAT,CAGA,IAAI9N,EACD,GAAMjkB,KAAKiyB,IAAIxV,EAAMzc,KAAKkyB,SAAoC,GAA3BpJ,EAAOqJ,oBAC3CpB,EAEEjf,EAAMgX,OAAO7E,MAAQA,IACvB0C,EAAWrU,MAAM8f,kBAAoBnO,EAAM,KAC3C0C,EAAWrU,MAAM+f,eAAiBpO,EAAM,KACxC0C,EAAWrU,MAAMggB,aAAerO,EAAM,KACtC0C,EAAWrU,MAAMigB,YAActO,EAAM,KAErCnS,EAAMgX,OAAO7E,IAAMA,GAGrB4E,EAAMmC,oBAEgB,OAAlBlC,EAAO0J,QAAiB1J,EAAOkC,oBAEnClC,EAAO2J,mBAAmBC,WAAW5J,EAAOuC,aAE5C,IAAI/Y,EACF,cACA2R,EACA,MAtJJ,SAA4BgN,GAC1B,IAAIY,EAAWZ,EAAOY,SAEtB,MACE,YACAF,EAAQE,EAAS,IACjB,IACAF,GAASE,EAAS,IAClB,IACAF,EAAQE,EAAS,IACjB,IACAF,EAAQE,EAAS,IACjB,IACAF,EAAQE,EAAS,IACjB,IACAF,GAASE,EAAS,IAClB,IACAF,EAAQE,EAAS,IACjB,IACAF,EAAQE,EAAS,IACjB,IACAF,EAAQE,EAAS,IACjB,IACAF,GAASE,EAAS,IAClB,IACAF,EAAQE,EAAS,KACjB,IACAF,EAAQE,EAAS,KACjB,IACAF,EAAQE,EAAS,KACjB,IACAF,GAASE,EAAS,KAClB,IACAF,EAAQE,EAAS,KACjB,IACAF,EAAQE,EAAS,KACjB,IAmHAc,CAAmB7J,EAAO2J,oBAExB3gB,EAAMgX,OAAOxW,QAAUA,IACzBof,EAAcpf,MAAMsgB,gBAAkBtgB,EACtCof,EAAcpf,MAAMugB,aAAevgB,EACnCof,EAAcpf,MAAMwgB,WAAaxgB,EACjCof,EAAcpf,MAAMygB,UAAYzgB,EAEhCR,EAAMgX,OAAOxW,MAAQA,GA/EzB,SAAS0gB,EAAajI,EAAQjC,GAC5B,GAAIiC,aAAkBtO,EAAM+T,YAAa,CACvC,IAAIle,EAEAyY,aAAkBtO,EAAMmU,aAG1BK,EAAOpQ,KAAKiI,EAAO2J,oBACnBxB,EAAOgC,YACPhC,EAAOiC,aAAanI,EAAOM,aAC3B4F,EAAO14B,MAAMwyB,EAAOxyB,OAEpB04B,EAAOY,SAAS,GAAK,EACrBZ,EAAOY,SAAS,GAAK,EACrBZ,EAAOY,SAAS,IAAM,EACtBZ,EAAOY,SAAS,IAAM,EAEtBvf,EAAQsf,EAAmBX,IAE3B3e,EAAQsf,EAAmB7G,EAAOM,aAGpC,IAAI3E,EAAUqE,EAAOrE,QACjByM,EAAcrhB,EAAMqf,QAAQpG,EAAO5sB,SAEnBZ,IAAhB41B,GAA6BA,IAAgB7gB,IAC/CoU,EAAQpU,MAAMsgB,gBAAkBtgB,EAChCoU,EAAQpU,MAAMugB,aAAevgB,EAC7BoU,EAAQpU,MAAMwgB,WAAaxgB,EAC3BoU,EAAQpU,MAAMygB,UAAYzgB,EAE1BR,EAAMqf,QAAQpG,EAAO5sB,IAAMmU,GAGzBoU,EAAQgK,aAAegB,GACzBA,EAAclM,YAAYkB,GAI9B,IAAK,IAAI9kB,EAAI,EAAGsH,EAAI6hB,EAAOtf,SAAS3L,OAAQ8B,EAAIsH,EAAGtH,IACjDoxB,EAAajI,EAAOtf,SAAS7J,GAAIknB,GA0CnCkK,CAAanK,EAAOC,O,kBC7PxBsK,EAAO9W,QAAU,SAASG,GAgBxB,SAASwE,EAAc8J,EAAQpE,GAC7BhmB,KAAKoqB,OAASA,EAEdpqB,KAAKgmB,gBAA4BppB,IAAfopB,EAA2BA,EAAa/V,SAG1DjQ,KAAK0yB,SAAU,EAGf1yB,KAAK+M,OAAS,IAAI+O,EAAM0H,QAGxBxjB,KAAK2yB,YAAc,EACnB3yB,KAAKgsB,YAAc4G,IAGnB5yB,KAAK6yB,QAAU,EACf7yB,KAAK8jB,QAAU8O,IAIf5yB,KAAK8yB,cAAgB,EACrB9yB,KAAK+yB,cAAgB1zB,KAAK2zB,GAI1BhzB,KAAKizB,iBAAmBL,IACxB5yB,KAAKkzB,gBAAkBN,IAIvB5yB,KAAKmzB,eAAgB,EACrBnzB,KAAKozB,cAAgB,IAIrBpzB,KAAKqzB,YAAa,EAClBrzB,KAAKszB,UAAY,EAGjBtzB,KAAKuzB,cAAe,EACpBvzB,KAAKwzB,YAAc,EAGnBxzB,KAAKyzB,WAAY,EACjBzzB,KAAK0zB,YAAc,EAInB1zB,KAAK2zB,YAAa,EAClB3zB,KAAK4zB,gBAAkB,EAGvB5zB,KAAK6zB,YAAa,EAGlB7zB,KAAKP,KAAO,CAAEq0B,KAAM,GAAIC,GAAI,GAAIC,MAAO,GAAI1hB,OAAQ,GAAI2hB,MAAO,IAG9Dj0B,KAAKk0B,aAAe,CAClBC,MAAOrY,EAAMsY,MAAMN,KACnBO,KAAMvY,EAAMsY,MAAME,OAClBC,IAAKzY,EAAMsY,MAAMJ,OAInBh0B,KAAKw0B,QAAUx0B,KAAK+M,OAAOyd,QAC3BxqB,KAAKy0B,UAAYz0B,KAAKoqB,OAAOpxB,SAASwxB,QACtCxqB,KAAK00B,MAAQ10B,KAAKoqB,OAAOuK,KAGzB30B,KAAK40B,UAAW,EAChB50B,KAAK60B,SAAU,EAMf70B,KAAK80B,cAAgB,WACnB,OAAOC,EAAUC,KAGnBh1B,KAAKi1B,kBAAoB,WACvB,OAAOF,EAAUG,OAGnBl1B,KAAKm1B,MAAQ,WACXC,EAAMroB,OAAOmT,KAAKkV,EAAMZ,SACxBY,EAAMhL,OAAOpxB,SAASknB,KAAKkV,EAAMX,WACjCW,EAAMhL,OAAOuK,KAAOS,EAAMV,MAE1BU,EAAMhL,OAAOvD,yBACbuO,EAAMC,cAAcC,GAEpBF,EAAMnQ,SAENtY,EAAQ4oB,EAAM9kB,MAIhBzQ,KAAKilB,OAAU,WACb,IAAItP,EAAS,IAAImG,EAAM0H,QAGnBgS,GAAO,IAAI1Z,EAAM2Z,YAAaC,mBAChCtL,EAAOuL,GACP,IAAI7Z,EAAM0H,QAAQ,EAAG,EAAG,IAEtBoS,EAAcJ,EAAKhL,QAAQqL,UAE3BC,EAAe,IAAIha,EAAM0H,QACzBuS,EAAiB,IAAIja,EAAM2Z,WAE/B,OAAO,WACL,IAAIz8B,EAAWo8B,EAAMhL,OAAOpxB,SAiE5B,OA/DA2c,EAAOuK,KAAKlnB,GAAUg9B,IAAIZ,EAAMroB,QAGhC4I,EAAOsgB,gBAAgBT,GAGvBT,EAAUmB,eAAevgB,GAErByf,EAAMzB,YAAchnB,IAAU4oB,EAAM9kB,MACtC0lB,EAsIK,EAAI92B,KAAK2zB,GAAM,GAAK,GAAMoC,EAAMxB,iBAnIvCmB,EAAUG,OAASkB,EAAelB,MAClCH,EAAUC,KAAOoB,EAAepB,IAGhCD,EAAUG,MAAQ71B,KAAKyC,IACrBszB,EAAMnC,gBACN5zB,KAAKwC,IAAIuzB,EAAMlC,gBAAiB6B,EAAUG,QAI5CH,EAAUC,IAAM31B,KAAKyC,IACnBszB,EAAMtC,cACNzzB,KAAKwC,IAAIuzB,EAAMrC,cAAegC,EAAUC,MAG1CD,EAAUsB,WAEVtB,EAAUuB,QAAU1+B,EAGpBm9B,EAAUuB,OAASj3B,KAAKyC,IACtBszB,EAAMzC,YACNtzB,KAAKwC,IAAIuzB,EAAMpJ,YAAa+I,EAAUuB,SAIxClB,EAAMroB,OAAOrO,IAAI63B,GAEjB5gB,EAAO6gB,iBAAiBzB,GAGxBpf,EAAOsgB,gBAAgBL,GAEvB58B,EAASknB,KAAKkV,EAAMroB,QAAQrO,IAAIiX,GAEhCyf,EAAMhL,OAAOqM,OAAOrB,EAAMroB,SAEE,IAAxBqoB,EAAMjC,eACRiD,EAAelB,OAAS,EAAIE,EAAMhC,cAClCgD,EAAepB,KAAO,EAAII,EAAMhC,eAEhCgD,EAAe/f,IAAI,EAAG,EAAG,GAG3Bze,EAAQ,EACR2+B,EAAUlgB,IAAI,EAAG,EAAG,MAOlBqgB,GACAZ,EAAaxI,kBAAkB8H,EAAMhL,OAAOpxB,UAAY29B,GACxD,GAAK,EAAIZ,EAAe7G,IAAIkG,EAAMhL,OAAOwM,aAAeD,KAExDvB,EAAMC,cAAcC,GAEpBQ,EAAa5V,KAAKkV,EAAMhL,OAAOpxB,UAC/B+8B,EAAe7V,KAAKkV,EAAMhL,OAAOwM,YACjCF,GAAc,GAEP,IA1FE,GAiGf12B,KAAK62B,QAAU,WACbzB,EAAMpP,WAAW8Q,oBAAoB,cAAeC,GAAe,GACnE3B,EAAMpP,WAAW8Q,oBAAoB,YAAa5d,GAAa,GAC/Dkc,EAAMpP,WAAW8Q,oBAAoB,QAASE,GAAc,GAE5D5B,EAAMpP,WAAW8Q,oBAAoB,aAAcG,GAAc,GACjE7B,EAAMpP,WAAW8Q,oBAAoB,WAAYI,GAAY,GAC7D9B,EAAMpP,WAAW8Q,oBAAoB,YAAaK,GAAa,GAE/DlnB,SAAS6mB,oBAAoB,YAAaM,GAAa,GACvDnnB,SAAS6mB,oBAAoB,UAAWO,GAAW,GAEnDhyB,OAAOyxB,oBAAoB,UAAWQ,GAAW,IASnD,IAAIlC,EAAQp1B,KAERs1B,EAAc,CAAEprB,KAAM,UACtBqtB,EAAa,CAAErtB,KAAM,SACrBstB,EAAW,CAAEttB,KAAM,OAEnBqrB,EAAQ,CACV9kB,MAAO,EACPgnB,OAAQ,EACRC,MAAO,EACPnD,IAAK,EACLoD,aAAc,EACdC,YAAa,EACbC,UAAW,GAGTlrB,EAAQ4oB,EAAM9kB,KAEdkmB,EAAM,KAGN5B,EAAY,IAAIjZ,EAAMgc,UACtB1B,EAAiB,IAAIta,EAAMgc,UAE3BlgC,EAAQ,EACR2+B,EAAY,IAAIza,EAAM0H,QACtBkT,GAAc,EAEdqB,EAAc,IAAIjc,EAAMqD,QACxB6Y,EAAY,IAAIlc,EAAMqD,QACtB8Y,EAAc,IAAInc,EAAMqD,QAExB+Y,EAAW,IAAIpc,EAAMqD,QACrBgZ,EAAS,IAAIrc,EAAMqD,QACnBiZ,EAAW,IAAItc,EAAMqD,QAErBkZ,EAAa,IAAIvc,EAAMqD,QACvBmZ,EAAW,IAAIxc,EAAMqD,QACrBoZ,EAAa,IAAIzc,EAAMqD,QAM3B,SAASqZ,IACP,OAAOn5B,KAAKo5B,IAAI,IAAMrD,EAAM9B,WAG9B,SAAS6C,EAAWuC,GAClBtC,EAAelB,OAASwD,EAG1B,SAASC,EAASD,GAChBtC,EAAepB,KAAO0D,EAGxB,IAAIE,EAAW,WACb,IAAIn1B,EAAI,IAAIqY,EAAM0H,QAElB,OAAO,SAAiB0I,EAAU2M,GAChCp1B,EAAEq1B,oBAAoBD,EAAc,GACpCp1B,EAAEs1B,gBAAgB7M,GAElBqK,EAAU73B,IAAI+E,IAPH,GAWXu1B,EAAS,WACX,IAAIv1B,EAAI,IAAIqY,EAAM0H,QAElB,OAAO,SAAe0I,EAAU2M,GAC9Bp1B,EAAEq1B,oBAAoBD,EAAc,GACpCp1B,EAAEs1B,eAAe7M,GAEjBqK,EAAU73B,IAAI+E,IAPL,GAYTw1B,EAAO,WACT,IAAItjB,EAAS,IAAImG,EAAM0H,QAEvB,OAAO,SAAa0V,EAAQC,GAC1B,IAAIpT,EACFqP,EAAMpP,aAAe/V,SACjBmlB,EAAMpP,WAAW3f,KACjB+uB,EAAMpP,WAEZ,GAAIoP,EAAMhL,kBAAkBtO,EAAMsd,kBAAmB,CAEnD,IAAIpgC,EAAWo8B,EAAMhL,OAAOpxB,SAC5B2c,EAAOuK,KAAKlnB,GAAUg9B,IAAIZ,EAAMroB,QAChC,IAAIssB,EAAiB1jB,EAAOxW,SAG5Bk6B,GAAkBh6B,KAAKiyB,IACnB8D,EAAMhL,OAAO9G,IAAM,EAAKjkB,KAAK2zB,GAAM,KAIvC4F,EACG,EAAIM,EAASG,EAAkBtT,EAAQuT,aACxClE,EAAMhL,OAAOkG,QAEf0I,EACG,EAAIG,EAASE,EAAkBtT,EAAQuT,aACxClE,EAAMhL,OAAOkG,aAEN8E,EAAMhL,kBAAkBtO,EAAMyd,oBAEvCX,EACGM,GAAU9D,EAAMhL,OAAOoP,MAAQpE,EAAMhL,OAAO9V,MAC3C8gB,EAAMhL,OAAOuK,KACb5O,EAAQ0T,YACVrE,EAAMhL,OAAOkG,QAEf0I,EACGG,GAAU/D,EAAMhL,OAAO5V,IAAM4gB,EAAMhL,OAAOsP,QACzCtE,EAAMhL,OAAOuK,KACb5O,EAAQuT,aACVlE,EAAMhL,OAAOkG,UAIfh3B,QAAQqgC,KACN,gFAEFvE,EAAM3B,WAAY,IAhDb,GAwDX,SAASmG,EAAQC,GACXzE,EAAMhL,kBAAkBtO,EAAMsd,kBAChCxhC,GAASiiC,EACAzE,EAAMhL,kBAAkBtO,EAAMyd,oBACvCnE,EAAMhL,OAAOuK,KAAOt1B,KAAKyC,IACvBszB,EAAMvC,QACNxzB,KAAKwC,IAAIuzB,EAAMtR,QAASsR,EAAMhL,OAAOuK,KAAOkF,IAE9CzE,EAAMhL,OAAOvD,yBACb6P,GAAc,IAEdp9B,QAAQqgC,KACN,uFAEFvE,EAAM/B,YAAa,GAIvB,SAASyG,EAASD,GACZzE,EAAMhL,kBAAkBtO,EAAMsd,kBAChCxhC,GAASiiC,EACAzE,EAAMhL,kBAAkBtO,EAAMyd,oBACvCnE,EAAMhL,OAAOuK,KAAOt1B,KAAKyC,IACvBszB,EAAMvC,QACNxzB,KAAKwC,IAAIuzB,EAAMtR,QAASsR,EAAMhL,OAAOuK,KAAOkF,IAE9CzE,EAAMhL,OAAOvD,yBACb6P,GAAc,IAEdp9B,QAAQqgC,KACN,uFAEFvE,EAAM/B,YAAa,GAoBvB,SAAS0G,EAAmB5yB,GAG1B+wB,EAAS7hB,IAAIlP,EAAM6yB,QAAS7yB,EAAM8yB,SA2NpC,SAAS/gB,EAAY/R,GACnB,IAAsB,IAAlBiuB,EAAM1C,QAAV,CAIA,GAFAvrB,EAAMmf,iBAEFnf,EAAM+yB,SAAW9E,EAAMlB,aAAaC,MAAO,CAC7C,IAA2B,IAAvBiB,EAAM7B,aAAwB,QAhPtC,SAA+BpsB,GAG7B4wB,EAAY1hB,IAAIlP,EAAM6yB,QAAS7yB,EAAM8yB,SA+OnCE,CAAsBhzB,GAEtBwF,EAAQ4oB,EAAMkC,YACT,GAAItwB,EAAM+yB,SAAW9E,EAAMlB,aAAaG,KAAM,CACnD,IAAyB,IAArBe,EAAM/B,WAAsB,QAhPpC,SAA8BlsB,GAG5BkxB,EAAWhiB,IAAIlP,EAAM6yB,QAAS7yB,EAAM8yB,SA+OlCG,CAAqBjzB,GAErBwF,EAAQ4oB,EAAMmC,WACT,GAAIvwB,EAAM+yB,SAAW9E,EAAMlB,aAAaK,IAAK,CAClD,IAAwB,IAApBa,EAAM3B,UAAqB,OAE1B2B,EAAMR,WAAYQ,EAAMP,UAC3BkF,EAAmB5yB,GAEnBwF,EAAQ4oB,EAAMhB,KAId5nB,IAAU4oB,EAAM9kB,OAClBR,SAAS/I,iBAAiB,YAAakwB,GAAa,GACpDnnB,SAAS/I,iBAAiB,UAAWmwB,GAAW,GAEhDjC,EAAMC,cAAckC,KAIxB,SAASH,EAAYjwB,GACnB,IAAsB,IAAlBiuB,EAAM1C,QAIV,GAFAvrB,EAAMmf,iBAEF3Z,IAAU4oB,EAAMkC,OAAQ,CAC1B,IAA2B,IAAvBrC,EAAM7B,aAAwB,QAjQtC,SAA+BpsB,GAG7B6wB,EAAU3hB,IAAIlP,EAAM6yB,QAAS7yB,EAAM8yB,SACnChC,EAAYoC,WAAWrC,EAAWD,GAElC,IAAIhS,EACFqP,EAAMpP,aAAe/V,SACjBmlB,EAAMpP,WAAW3f,KACjB+uB,EAAMpP,WAGZmQ,EACI,EAAI92B,KAAK2zB,GAAKiF,EAAYriB,EAAKmQ,EAAQ0T,YACvCrE,EAAM5B,aAIVmF,EACI,EAAIt5B,KAAK2zB,GAAKiF,EAAYpiB,EAAKkQ,EAAQuT,aACvClE,EAAM5B,aAGVuE,EAAY7X,KAAK8X,GAEjB5C,EAAMnQ,SA0OJqV,CAAsBnzB,QACjB,GAAIwF,IAAU4oB,EAAMmC,MAAO,CAChC,IAAyB,IAArBtC,EAAM/B,WAAsB,QAzOpC,SAA8BlsB,GAG5BmxB,EAASjiB,IAAIlP,EAAM6yB,QAAS7yB,EAAM8yB,SAElC1B,EAAW8B,WAAW/B,EAAUD,GAE5BE,EAAW1iB,EAAI,EACjB+jB,EAAQpB,KACCD,EAAW1iB,EAAI,GACxBikB,EAAStB,KAGXH,EAAWnY,KAAKoY,GAEhBlD,EAAMnQ,SA4NJsV,CAAqBpzB,QAChB,GAAIwF,IAAU4oB,EAAMhB,IAAK,CAC9B,IAAwB,IAApBa,EAAM3B,UAAqB,OAET,GAAlB2B,EAAMR,UACmB,GAAvBQ,EAAMoF,gBACRT,EAAmB5yB,GACnBiuB,EAAMoF,eAAgB,GAhO9B,SAA4BrzB,GAG1BgxB,EAAO9hB,IAAIlP,EAAM6yB,QAAS7yB,EAAM8yB,SAEhC7B,EAASiC,WAAWlC,EAAQD,GAE5Be,EAAIb,EAASxiB,EAAGwiB,EAASviB,GAEzBqiB,EAAShY,KAAKiY,GAEd/C,EAAMnQ,SAyNJwV,CAAmBtzB,IAIvB,SAASkwB,EAAUlwB,IACK,IAAlBiuB,EAAM1C,UAKVziB,SAAS6mB,oBAAoB,UAAWO,GAAW,GAEnDjC,EAAMC,cAAcmC,GAEpB7qB,EAAQ4oB,EAAM9kB,MAGhB,SAASumB,EAAa7vB,IAEA,IAAlBiuB,EAAM1C,UACe,IAArB0C,EAAM/B,YACL1mB,IAAU4oB,EAAM9kB,MAAQ9D,IAAU4oB,EAAMkC,SAI3CtwB,EAAMmf,iBACNnf,EAAMuzB,kBA5OR,SAA0BvzB,GAGpBA,EAAMgyB,OAAS,EACjBW,EAAStB,KACArxB,EAAMgyB,OAAS,GACxBS,EAAQpB,KAGVpD,EAAMnQ,SAqON0V,CAAiBxzB,GAEjBiuB,EAAMC,cAAckC,GACpBnC,EAAMC,cAAcmC,IAGtB,SAASF,EAAUnwB,IAEG,IAAlBiuB,EAAM1C,UACe,IAArB0C,EAAMvB,aACc,IAApBuB,EAAM3B,YAIRxjB,SAAS/I,iBAAiB,YAAakwB,GAAa,GArOtD,SAAuBjwB,GAGrB,OAAQA,EAAMyzB,SACZ,KAAKxF,EAAM31B,KAAKs0B,GACdkF,EAAI,EAAG7D,EAAM1B,aACb0B,EAAMnQ,SACN,MAEF,KAAKmQ,EAAM31B,KAAK6S,OACd2mB,EAAI,GAAI7D,EAAM1B,aACd0B,EAAMnQ,SACN,MAEF,KAAKmQ,EAAM31B,KAAKq0B,KACdmF,EAAI7D,EAAM1B,YAAa,GACvB0B,EAAMnQ,SACN,MAEF,KAAKmQ,EAAM31B,KAAKu0B,MACdiF,GAAK7D,EAAM1B,YAAa,GACxB0B,EAAMnQ,SACN,MAEF,KAAKmQ,EAAM31B,KAAKw0B,MACQ,GAAlBmB,EAAMR,WACRQ,EAAMoF,eAAgB,EACtB7tB,EAAQ4oB,EAAMhB,MA4MpBsG,CAAc1zB,IAchB,SAAS8vB,EAAa9vB,GACpB,IAAsB,IAAlBiuB,EAAM1C,QAAV,CAEA,OAAQvrB,EAAM2zB,QAAQ37B,QACpB,KAAK,EACH,IAA2B,IAAvBi2B,EAAM7B,aAAwB,QAzNxC,SAAgCpsB,GAG9B4wB,EAAY1hB,IAAIlP,EAAM2zB,QAAQ,GAAGvmB,MAAOpN,EAAM2zB,QAAQ,GAAGrmB,OAwNrDsmB,CAAuB5zB,GAEvBwF,EAAQ4oB,EAAMoC,aAEd,MAEF,KAAK,EACH,IAAyB,IAArBvC,EAAM/B,WAAsB,QA5NtC,SAA+BlsB,GAG7B,IAAI6zB,EAAK7zB,EAAM2zB,QAAQ,GAAGvmB,MAAQpN,EAAM2zB,QAAQ,GAAGvmB,MAC/C0mB,EAAK9zB,EAAM2zB,QAAQ,GAAGrmB,MAAQtN,EAAM2zB,QAAQ,GAAGrmB,MAE/CyX,EAAW7sB,KAAK67B,KAAKF,EAAKA,EAAKC,EAAKA,GAExC5C,EAAWhiB,IAAI,EAAG6V,GAsNdiP,CAAsBh0B,GAEtBwF,EAAQ4oB,EAAMqC,YAEd,MAEF,KAAK,EACH,IAAwB,IAApBxC,EAAM3B,UAAqB,QA1NrC,SAA6BtsB,GAG3B+wB,EAAS7hB,IAAIlP,EAAM2zB,QAAQ,GAAGvmB,MAAOpN,EAAM2zB,QAAQ,GAAGrmB,OAyNlD2mB,CAAoBj0B,GAEpBwF,EAAQ4oB,EAAMsC,UAEd,MAEF,QACElrB,EAAQ4oB,EAAM9kB,KAGd9D,IAAU4oB,EAAM9kB,MAClB2kB,EAAMC,cAAckC,IAIxB,SAASJ,EAAYhwB,GACnB,IAAsB,IAAlBiuB,EAAM1C,QAKV,OAHAvrB,EAAMmf,iBACNnf,EAAMuzB,kBAEEvzB,EAAM2zB,QAAQ37B,QACpB,KAAK,EACH,IAA2B,IAAvBi2B,EAAM7B,aAAwB,OAClC,GAAI5mB,IAAU4oB,EAAMoC,aAAc,QA9OxC,SAA+BxwB,GAG7B6wB,EAAU3hB,IAAIlP,EAAM2zB,QAAQ,GAAGvmB,MAAOpN,EAAM2zB,QAAQ,GAAGrmB,OACvDwjB,EAAYoC,WAAWrC,EAAWD,GAElC,IAAIhS,EACFqP,EAAMpP,aAAe/V,SACjBmlB,EAAMpP,WAAW3f,KACjB+uB,EAAMpP,WAGZmQ,EACI,EAAI92B,KAAK2zB,GAAKiF,EAAYriB,EAAKmQ,EAAQ0T,YACvCrE,EAAM5B,aAIVmF,EACI,EAAIt5B,KAAK2zB,GAAKiF,EAAYpiB,EAAKkQ,EAAQuT,aACvClE,EAAM5B,aAGVuE,EAAY7X,KAAK8X,GAEjB5C,EAAMnQ,SAuNFoW,CAAsBl0B,GAEtB,MAEF,KAAK,EACH,IAAyB,IAArBiuB,EAAM/B,WAAsB,OAChC,GAAI1mB,IAAU4oB,EAAMqC,YAAa,QA1NvC,SAA8BzwB,GAG5B,IAAI6zB,EAAK7zB,EAAM2zB,QAAQ,GAAGvmB,MAAQpN,EAAM2zB,QAAQ,GAAGvmB,MAC/C0mB,EAAK9zB,EAAM2zB,QAAQ,GAAGrmB,MAAQtN,EAAM2zB,QAAQ,GAAGrmB,MAE/CyX,EAAW7sB,KAAK67B,KAAKF,EAAKA,EAAKC,EAAKA,GAExC3C,EAASjiB,IAAI,EAAG6V,GAEhBqM,EAAW8B,WAAW/B,EAAUD,GAE5BE,EAAW1iB,EAAI,EACjBikB,EAAStB,KACAD,EAAW1iB,EAAI,GACxB+jB,EAAQpB,KAGVH,EAAWnY,KAAKoY,GAEhBlD,EAAMnQ,SAwMFqW,CAAqBn0B,GAErB,MAEF,KAAK,EACH,IAAwB,IAApBiuB,EAAM3B,UAAqB,OAC/B,GAAI9mB,IAAU4oB,EAAMsC,UAAW,QA3MrC,SAA4B1wB,GAG1BgxB,EAAO9hB,IAAIlP,EAAM2zB,QAAQ,GAAGvmB,MAAOpN,EAAM2zB,QAAQ,GAAGrmB,OAEpD2jB,EAASiC,WAAWlC,EAAQD,GAE5Be,EAAIb,EAASxiB,EAAGwiB,EAASviB,GAEzBqiB,EAAShY,KAAKiY,GAEd/C,EAAMnQ,SAkMFsW,CAAmBp0B,GAEnB,MAEF,QACEwF,EAAQ4oB,EAAM9kB,MAIpB,SAASymB,EAAW/vB,IACI,IAAlBiuB,EAAM1C,UAIV0C,EAAMC,cAAcmC,GAEpB7qB,EAAQ4oB,EAAM9kB,MAGhB,SAASsmB,EAAc5vB,GACrBA,EAAMmf,iBA/dRtmB,KAAKi5B,IAAMA,EAoeX7D,EAAMpP,WAAW9e,iBAAiB,cAAe6vB,GAAe,GAEhE3B,EAAMpP,WAAW9e,iBAAiB,YAAagS,GAAa,GAC5Dkc,EAAMpP,WAAW9e,iBAAiB,QAAS8vB,GAAc,GAEzD5B,EAAMpP,WAAW9e,iBAAiB,aAAc+vB,GAAc,GAC9D7B,EAAMpP,WAAW9e,iBAAiB,WAAYgwB,GAAY,GAC1D9B,EAAMpP,WAAW9e,iBAAiB,YAAaiwB,GAAa,GAE5D9xB,OAAO6B,iBAAiB,UAAWowB,GAAW,GAC9CjyB,OAAO6B,iBAAiB,QAjHxB,SAAiBC,IAEK,IAAlBiuB,EAAM1C,UACe,IAArB0C,EAAMvB,aACc,IAApBuB,EAAM3B,WAzPV,SAAqBtsB,GACnB,OAAQA,EAAMyzB,SACZ,KAAKxF,EAAM31B,KAAKw0B,MACQ,GAAlBmB,EAAMR,WACRQ,EAAMoF,eAAgB,EACtB7tB,EAAQ4oB,EAAM9kB,OAwPpB+qB,CAAYr0B,KAyG4B,GAI1CnH,KAAKilB,SAmHP,OAhHA3E,EAAc7E,UAAYjc,OAAOzG,OAAO+iB,EAAM2f,gBAAgBhgB,WAC9D6E,EAAc7E,UAAUwE,YAAcK,EAEtC9gB,OAAOk8B,iBAAiBpb,EAAc7E,UAAW,CAC/CkgB,OAAQ,CACNp3B,IAAK,WAIH,OAHAjL,QAAQqgC,KACN,4DAEK35B,KAAK+M,SAMhB6uB,OAAQ,CACNr3B,IAAK,WAIH,OAHAjL,QAAQqgC,KACN,+EAEM35B,KAAKqzB,YAGfhd,IAAK,SAAS9L,GACZjR,QAAQqgC,KACN,8EAEF35B,KAAKqzB,YAAc9oB,IAIvBsxB,SAAU,CACRt3B,IAAK,WAIH,OAHAjL,QAAQqgC,KACN,mFAEM35B,KAAKuzB,cAGfld,IAAK,SAAS9L,GACZjR,QAAQqgC,KACN,kFAEF35B,KAAKuzB,cAAgBhpB,IAIzBuxB,MAAO,CACLv3B,IAAK,WAIH,OAHAjL,QAAQqgC,KACN,6EAEM35B,KAAKyzB,WAGfpd,IAAK,SAAS9L,GACZjR,QAAQqgC,KACN,4EAEF35B,KAAKyzB,WAAalpB,IAItBwxB,OAAQ,CACNx3B,IAAK,WAIH,OAHAjL,QAAQqgC,KACN,+EAEM35B,KAAK6zB,YAGfxd,IAAK,SAAS9L,GACZjR,QAAQqgC,KACN,8EAEF35B,KAAK6zB,YAActpB,IAIvByxB,aAAc,CACZz3B,IAAK,WAIH,OAHAjL,QAAQqgC,KACN,wFAEM35B,KAAKmzB,eAGf9c,IAAK,SAAS9L,GACZjR,QAAQqgC,KACN,uFAEF35B,KAAKmzB,eAAiB5oB,IAI1B0xB,qBAAsB,CACpB13B,IAAK,WAIH,OAHAjL,QAAQqgC,KACN,4FAEK35B,KAAKozB,eAGd/c,IAAK,SAAS9L,GACZjR,QAAQqgC,KACN,4FAEF35B,KAAKozB,cAAgB7oB,MAKpB+V,I,gFCp9BT,IAAIgC,EAAMjiB,EAAQ,IAAcmgB,QAC5B1E,EAAQwG,EAAIxG,MACLwG,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,cACfgC,EAAI/B,GACJ+B,EAAIxO,GAEb2e,EAAO9W,QAAU,SAAS8G,GAMxBA,EAAKyZ,eAAiB,SAAS/0B,EAAOg1B,GACpC,IAAIC,EAAe,EACfC,EAAe,EAInB,GACED,GAAgBD,EAAeG,WAAaH,EAAeI,WAC3DF,GAAgBF,EAAeK,UAAYL,EAAeM,gBAClDN,EAAiBA,EAAeO,cAK1C,MAAO,CAAE9mB,EAHCzO,EAAMoN,MAAQ6nB,EAGHvmB,EAFX1O,EAAMsN,MAAQ4nB,IAS1B5Z,EAAKka,SAAW,SAASr/B,GACvB,IAAIs/B,EAAYt/B,EAkBhB,OAjBKA,EAAK0W,OACR1W,EAAK0W,KAAO,IAEd4oB,EAAU3hB,WAAa,CACrBzW,MAAOlH,EAAK0W,KAAKxP,OAAS,WAC1B9C,MAAOpE,EAAK0W,KAAKtS,OAAS4gB,EAAI5B,WAC9Bmc,OAAQv/B,EAAK0W,KAAK6oB,QAAUva,EAAI3B,eAChC3e,MAAO1E,EAAK0W,KAAKhS,OAASsgB,EAAIhB,WAC9Bwb,UAAW,IAAIhhB,EAAMkD,MAAM,GAAK,GAAK,IACrC+d,SAAU19B,KAAKsoB,KAAqB,EAAhBtoB,KAAK29B,UACzBp7B,KAAMtE,EAAK0W,KAAKpS,KAChBq7B,MAAO3/B,EAAK0W,KAAKipB,OAAS3a,EAAIP,UAC9BnM,EAAG,EACHC,EAAG,EACHsF,GAAI,EACJC,GAAI,GAECwhB,GAMTna,EAAKya,YAAc,WACjB,IAAIC,EAAY,IAAIrhB,EAAMshB,MAO1B,OANAD,EAAUE,OAAO,EAAG,GACpBF,EAAUG,OAAO,EAAG,GACpBH,EAAUG,OAAO,EAAG,GACpBH,EAAUG,OAAO,EAAG,GACpBH,EAAUG,OAAO,EAAG,GACpBH,EAAUG,OAAO,EAAG,GACb,IAAIxhB,EAAMyhB,cAAcJ,IAMjC1a,EAAK+a,YAAc,WACjB,IAAIL,EAAY,IAAIrhB,EAAMshB,MAM1B,OALAD,EAAUE,QAAQ,GAAI,GACtBF,EAAUG,QAAQ,EAAG,GACrBH,EAAUG,OAAO,EAAG,GACpBH,EAAUG,OAAO,GAAI,GACrBH,EAAUG,QAAQ,GAAI,GACf,IAAIxhB,EAAMyhB,cAAcJ,IAOjC1a,EAAKgb,YAAc,SAASC,GAC1B,OAAOr+B,KAAKo5B,IAAKiF,EAASr+B,KAAK2zB,GAAf,IAAkC,EAAM,M,oBCzF5D,IAAI1Q,EAAMjiB,EAAQ,IAAamgB,QAC3B1E,EAAQwG,EAAIxG,MAGZwE,GAFOgC,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,eACpBC,EAAK+B,EAAI/B,GACJ+B,EAAIxO,GAEb2e,EAAO9W,QAAU,SAAS8G,GAIxBA,EAAK4D,WAAa,WAChB,IAAIsX,EAAet9B,EAAQ,KAC3BoiB,EAAKxnB,MAAQ0iC,IACTlb,EAAKC,SACPD,EAAKnb,YAAYmb,EAAKC,UAO1BD,EAAK2D,YAAc,WACU,UAAvB3D,EAAKD,QAAQG,OACfF,EAAKmb,oBAC2B,MAAvBnb,EAAKD,QAAQG,QACtBF,EAAKob,iBAOTpb,EAAKmb,kBAAoB,WACvBnb,EAAK6E,MAAQjnB,EAAQ,IAARA,CAA8BoiB,EAAKxnB,QAMlDwnB,EAAKob,cAAgB,WACnBpb,EAAK6E,MAAQ/G,EACVud,kBACAxW,MAAM,SAAU/G,EAAGwd,gBAAgBC,UAAU,IAC7C1W,MAAM,OAAQ/G,EAAGgH,aACjBD,MAAM,IAAK/G,EAAG0d,OAAO,GAAGD,SAAS,OACjC1W,MAAM,IAAK/G,EAAG2d,OAAO,GAAGF,SAAS,OACjCvW,OAIHhF,EAAK6E,MAAMO,WAAW,MAItBpF,EAAK6E,MAAM6W,cAAc,KAG3B1b,EAAKgD,iBAAmB,WACtBhD,EAAKsD,QAAU9V,SAASC,eAAe,mBACvCuS,EAAK+D,WAAa/D,EAAKsD,QAAQU,wBAC/BhE,EAAK7Q,MAAQ6Q,EAAK+D,WAAW5U,MAC7B6Q,EAAKhP,OAASgP,EAAK+D,WAAW/S,OAC9BgP,EAAKkE,OAASlE,EAAK7Q,MAAQ6Q,EAAKhP,OAChCgP,EAAKvD,WAAa,IAAIpD,EAAMqD,QAAQsD,EAAK7Q,MAAO6Q,EAAKhP,SAGvDgP,EAAKiD,kBAAoB,WACvBjD,EAAK2C,SAAS0B,QAAQrE,EAAK7Q,MAAO6Q,EAAKhP,QACvCgP,EAAKwD,YAAc,IAAInK,EAAMoU,cAC7BzN,EAAKwD,YAAYa,QAAQrE,EAAK7Q,MAAO6Q,EAAKhP,QAC1CgP,EAAKwD,YAAYD,WAAWrU,MAAM3Y,SAAW,WAC7CypB,EAAKwD,YAAYD,WAAWrU,MAAM6C,IAAM,EACxCiO,EAAK2C,SAASgZ,cAAc/4B,OAAOg5B,mBAMrC5b,EAAKkD,YAAc,WACjBlD,EAAKmE,QAAU,IAAI9K,EAAMsd,kBACvB3W,EAAKa,IACLb,EAAK7Q,MAAQ6Q,EAAKhP,OAClBgP,EAAKpD,KACLoD,EAAKnD,KAEPmD,EAAKmE,QAAQ5tB,SAASqkB,EAAI,IAC1B,IAAI2H,EAAW,IAAI1E,EAAcmC,EAAKmE,QAASnE,EAAKsD,SACpDf,EAAS4P,UAAW,EACpB5P,EAAS6P,SAAU,EACnB7P,EAAS2N,YAAc,GACvB3N,EAASgH,YAAiC,EAAnBvJ,EAAKmB,YAC5BoB,EAASjY,OAAOsJ,IAAI,EAAG,EAAG,GAC1B2O,EAASuO,cAAe,EACxB9Q,EAAKuC,SAAWA,GAMlBvC,EAAKmD,aAAe,WAClBnD,EAAKiE,QAAU,GACfjE,EAAKiE,QAAQyB,OAAS,IAAIrM,EAAMsd,kBAC9B3W,EAAKa,IACL,EACAb,EAAKpD,KACLoD,EAAKnD,KAEPmD,EAAKiE,QAAQyB,OAAOnvB,SAASqkB,EAAuB,EAAnBoF,EAAKmB,YAErCnB,EAAK6b,UAAY,CAChB1oB,EAAG,KACHC,EAAG,KACHwH,EAAG,MAOFoF,EAAKiE,QAAQ6X,mBAAqB,SAASC,EAAQC,GAElD,GACEhc,EAAKmE,QAAQ5tB,SAAS4c,GAAK6M,EAAK6b,UAAU1oB,GAC1C6M,EAAKmE,QAAQ5tB,SAAS6c,GAAK4M,EAAK6b,UAAUzoB,GAC1C4M,EAAKmE,QAAQ5tB,SAASqkB,GAAKoF,EAAK6b,UAAUjhB,EAH5C,CAQAoF,EAAK6b,UAAU1oB,EAAI6M,EAAKmE,QAAQ5tB,SAAS4c,EACzC6M,EAAK6b,UAAUzoB,EAAI4M,EAAKmE,QAAQ5tB,SAAS6c,EACzC4M,EAAK6b,UAAUjhB,EAAIoF,EAAKmE,QAAQ5tB,SAASqkB,EAGzC,IAAMqhB,GAAejc,EAAKhP,OAAS,KAAOgP,EAAKmE,QAAQ5tB,SAASqkB,EAEhEoF,EAAKuC,SAASiU,KACVuF,EAAS/b,EAAKiE,QAAQ9U,MAAS,IAC/B,IACA6Q,EAAKmE,QAAQ5tB,SAAS4c,IACrB8oB,IACAjc,EAAKhP,OAASgrB,GAAUhc,EAAKiE,QAAQjT,OAAU,IAChD,IACAgP,EAAKmE,QAAQ5tB,SAAS6c,GACtB6oB,MAQVjc,EAAKoD,cAAgB,WACnBpD,EAAKyF,MAAQ,IAAIpM,EAAM6iB,MAEvBlc,EAAKsH,OAAS,IAAIjO,EAAMgB,eACxB2F,EAAKpoB,MAAQ,IAAIyhB,EAAM8iB,MACvBnc,EAAKyF,MAAMxpB,IAAI+jB,EAAKpoB,OAEH,SAAbioB,EAAIX,MACNc,EAAKoc,kBAELpc,EAAKqc,mBAGP,IAAIC,EAAOtc,EAAKya,cAEhBza,EAAKuc,kBAAkBD,GACvBtc,EAAKwc,gBAAgBF,GACrBtc,EAAKyc,cAAcH,IAMrBtc,EAAKoc,gBAAkB,WACrBpc,EAAK7nB,MAAQ,GACb6nB,EAAK0c,UAAY,GAMnB1c,EAAKqc,iBAAmB,WACtBrc,EAAK7nB,MAAQ,IAAIkhB,EAAMgB,eACvB,IAAI6C,EAAW,IAAI7D,EAAMsjB,kBAAkB,CACzCC,UAAW,EACX39B,MAAO,SACP49B,aAAcxjB,EAAMyjB,aACpBC,QAAS1jB,EAAM2jB,cAEjBhd,EAAKid,KAAO,IAAI5jB,EAAM6jB,aAAald,EAAK7nB,MAAO+kB,GAC/C8C,EAAKid,KAAKE,eAAgB,EAC1Bnd,EAAKyF,MAAMxpB,IAAI+jB,EAAKid,MAEpB,IAAIh9B,EAAY,IAAIoZ,EAAMqC,gBACxB,IAAIb,aAA8B,EAAjBmF,EAAKO,WACtB,GAEE6c,EAAS,IAAI/jB,EAAMqC,gBACrB,IAAIb,aAA8B,EAAjBmF,EAAKO,WACtB,GAGFP,EAAK7nB,MAAMwjB,aAAa,WAAY1b,GACpC+f,EAAK7nB,MAAMwjB,aAAa,QAASyhB,GACjCpd,EAAKqd,UAAY,GAMnBrd,EAAKuc,kBAAoB,SAASD,GAChCtc,EAAKsd,UAAY,IAAIjkB,EAAMkkB,KACzBjB,EACA,IAAIjjB,EAAMsjB,kBAAkB,CAAEC,UAAW,EAAG39B,MAAO,WAErD+gB,EAAKsd,UAAUE,SAAU,EACzBxd,EAAKyF,MAAMxpB,IAAI+jB,EAAKsd,YAMtBtd,EAAKwc,gBAAkB,SAASF,GAC9Btc,EAAKyd,WAAa,IAAIpkB,EAAMkkB,KAC1BjB,EACA,IAAIjjB,EAAMsjB,kBAAkB,CAAEC,UAAW,EAAG39B,MAAO,YAErD+gB,EAAKyF,MAAMxpB,IAAI+jB,EAAKyd,YACpBzd,EAAK0d,gBAAmC,EAAnB1d,EAAKmB,cAM5BnB,EAAKyc,cAAgB,SAASH,GAC5Btc,EAAK2d,SAAW,IAAItkB,EAAMkkB,KACxBjB,EACA,IAAIjjB,EAAMsjB,kBAAkB,CAAEC,UAAW,EAAG39B,MAAO+gB,EAAK1iB,SAAU,SAAW,KAE/E0iB,EAAKyF,MAAMxpB,IAAI+jB,EAAK2d,UACpB3d,EAAK4d,gBAAgB5d,EAAKmE,UAM5BnE,EAAKqD,YAAc,WACjBrD,EAAKsH,OAAO3L,aACV,WACA,IAAItC,EAAMqC,gBAAgB,IAAIb,aAAa,IAAS,IAEtDmF,EAAKsH,OAAOuW,wBACZ7d,EAAK8d,UAAY,EAmDjB9d,EAAK+d,mBAlDc,SAASC,GAC1B,OAAO,SAASt5B,GACd,IAAIu5B,EAASje,EAAKyZ,eAAe/0B,EAAOnH,MACpC2gC,EAAUD,EAAO9qB,EAAI6M,EAAK7Q,MAAS,EAAI,EACvCgvB,EAAS,EAAKF,EAAO7qB,EAAI4M,EAAKhP,OAAU,EACxCotB,EAAgB,IAAI/kB,EAAM0H,QAAQmd,EAAQC,EAAQ,GACtDC,EAAcC,UAAUre,EAAKmE,SAC7B,IAAI/X,EAAMgyB,EAAc7K,IAAIvT,EAAKmE,QAAQ5tB,UAAUwxB,QACnDqW,EAAcE,YAEdte,EAAKue,4BACHN,EAAO9qB,GAAK6M,EAAKiE,QAAQ9U,OACzB6Q,EAAKhP,OAASitB,EAAO7qB,GAAK4M,EAAKiE,QAAQjT,OACrCgP,EAAKue,8BACPve,EAAKiE,QAAQia,OAASD,EAAO9qB,EAC7B6M,EAAKiE,QAAQka,OAASF,EAAO7qB,GAI/B,IAAIorB,EAAY,IAAInlB,EAAMolB,UACxBze,EAAKmE,QAAQ5tB,SACb6nC,GAIE3U,GAAYzJ,EAAKmE,QAAQ5tB,SAASqkB,EAAIxO,EAAIwO,EAC1C8jB,EAAM1e,EAAKmE,QAAQ5tB,SACpBwxB,QACA9rB,IAAImQ,EAAIkqB,eAAe7M,IAEtBuU,GAAYhe,EAAK2e,cAA+B,GAAfj6B,EAAMsT,QAKzCgmB,GAAYhe,EAAK2e,cACjBj6B,EAAM4F,OAAOs0B,aAAa,mBAE1Bl6B,EAAM4F,OAAOu0B,SAEbn6B,EAAMmf,iBACFma,GAAYhe,EAAK2e,cACnB3e,EAAK8e,mBAAmBp6B,GAE1Bsb,EAAK+e,iBAAiBP,EAAWE,EAAKV,SAY9Che,EAAK+e,iBAAmB,SAASP,EAAWE,EAAKV,GAC/C,IAAIgB,EAAaR,EAAUS,iBAAiBjf,EAAKpoB,MAAMyQ,UACvD,GAAI22B,EAAWtiC,OAAQ,CAErB,IAAIwiC,EAAYF,EAAW,GAAGrX,OAAOtP,MACrC2H,EAAKW,aAAeue,EACpBlB,EACEhe,EAAKxnB,MAAM2mC,QAAQD,GACnBR,EAAIvrB,EACJurB,EAAItrB,EACJ1O,MAAM+yB,OACN/yB,MAAM06B,cAGRpB,EAAS,KAAMU,EAAIvrB,EAAGurB,EAAItrB,EAAG1O,MAAM+yB,OAAQ/yB,MAAM06B,UAOrDpf,EAAK+d,mBAAqB,SAASsB,GACjCrf,EAAKsD,QAAQ7e,iBACX,YACA46B,EAAarf,EAAK2U,cAClB,GAEF3U,EAAKsD,QAAQ7e,iBACX,YACA46B,EAAarf,EAAKvJ,cAClB,GAEFuJ,EAAKsD,QAAQ7e,iBACX,UACA46B,EAAarf,EAAK4U,YAClB,GAEF5U,EAAKsD,QAAQ7e,iBACX,UACA46B,EAAarf,EAAK2e,eAClB,M,oBCjWN,IAAI9e,EAAMjiB,EAAQ,IAAamgB,QAO3B5F,GANQ0H,EAAIxG,MACLwG,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,cACfgC,EAAI/B,GACJ+B,EAAIxO,GACLzT,EAAQ,MAEhBoyB,EAAO9W,QAAU,SAAS8G,GACxBA,EAAKllB,QAAU,SAASD,GACtBmlB,EAAKxnB,MAAMsC,QAAQD,EAAKE,GAAIF,EAAK0W,MACjC,IAAI+tB,EAAYtf,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAWxC,OAVAukC,EAAUnsB,EAAItY,EAAKsY,EACnBmsB,EAAUlsB,EAAIvY,EAAKuY,EACnBksB,EAAUC,GAAK1kC,EAAK0kC,GACpBD,EAAUE,GAAK3kC,EAAK2kC,GACpBF,EAAUG,aAAqBtlC,GAAXU,EAAK0kC,GACzBD,EAAUI,aAAqBvlC,GAAXU,EAAK2kC,GACzBxf,EAAKka,SAASoF,GACdtf,EAAK2f,SAASL,GACdA,EAAUM,MAAQ,GAClB5f,EAAKuB,YAAa,EACX+d,GAGTtf,EAAK6f,WAAa,SAAShlC,GACpBA,GAASA,EAAKE,KAGnBilB,EAAK8f,iBAAiBjlC,GACtBmlB,EAAK+f,YAAYllC,GACjBmlB,EAAKpoB,MAAM8wB,OAAO7tB,EAAK2d,WAAWwnB,aAClChgB,EAAKxnB,MAAMqnC,WAAWhlC,EAAKE,IAC3BilB,EAAKigB,WAAWplC,GAChBmlB,EAAK8d,WAAa,IAGpB9d,EAAK8f,iBAAmB,SAASjlC,GAC/B,IAAIqlC,EAAYlgB,EAAKxnB,MAAM2nC,SAAStlC,EAAKE,IACrCmlC,GACFA,EAAUtlC,QAAQ,SAAS8rB,GACzB1G,EAAKxnB,MAAM4nC,WAAW1Z,MAK5B1G,EAAKigB,WAAa,SAASplC,GACzB,IAAIjD,EAAQooB,EAAK6E,MAAMjtB,QACvB,GAAIA,EACF,IAAK,IAAI4G,EAAI,EAAGA,EAAI5G,EAAM8E,OAAQ8B,IAC5B5G,EAAM4G,GAAGzD,IAAMF,EAAKE,KACtBilB,EAAKyF,MAAMiD,OAAO9wB,EAAM4G,GAAGga,WAAWwnB,aACtCpoC,EAAM4G,GAAGga,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQgd,QAAS,EAC5D1oC,EAAM8N,OAAOlH,EAAG,KAMxBwhB,EAAK+f,YAAc,SAASllC,GAI1B,IAHA,IAAIoF,EAAY+f,EAAK7nB,MAAMkjB,WAAW9kB,SAASulB,MAC3CshB,EAASpd,EAAK7nB,MAAMkjB,WAAWpc,MAAM6c,MACrCykB,EAAS,EACJ/hC,EAAI,EAAGA,EAAI+hC,EAASvgB,EAAKM,YAAY5jB,OAAQ8B,IACpD,GACEwhB,EAAKM,YAAY9hB,EAAI+hC,GAAQnnB,OAAOre,IAAMF,EAAKE,IAC/CilB,EAAKM,YAAY9hB,EAAI+hC,GAAQj2B,OAAOvP,IAAMF,EAAKE,GAC/C,CACA,IAAK,IAAI2f,EAAIlc,EAAI+hC,EAAQ7lB,EAAIsF,EAAKM,YAAY5jB,OAAQge,IAAK,CACzD,IAAI3Z,EAAI2Z,EAAI,EACR3Z,GAAKif,EAAKM,YAAY5jB,QACxBuD,EAAc,EAAJya,GAAS,EACnBza,EAAc,EAAJya,EAAQ,GAAK,EACvBza,EAAc,EAAJya,EAAQ,GAAK,EACvBza,EAAc,EAAJya,EAAQ,GAAK,EACvB0iB,EAAW,EAAJ1iB,GAAS,IAChB0iB,EAAW,EAAJ1iB,EAAQ,GAAK,IACpB0iB,EAAW,EAAJ1iB,EAAQ,GAAK,GACpB0iB,EAAW,EAAJ1iB,EAAQ,GAAK,IACpB0iB,EAAW,EAAJ1iB,EAAQ,GAAK,IACpB0iB,EAAW,EAAJ1iB,EAAQ,GAAK,KAEpBsF,EAAKM,YAAY5F,GAAKsF,EAAKM,YAAYvf,GACvCif,EAAKK,YAAgB,EAAJ3F,GAASsF,EAAKK,YAAgB,EAAJtf,GAC3Cif,EAAKK,YAAgB,EAAJ3F,EAAQ,GAAKsF,EAAKK,YAAgB,EAAJtf,EAAQ,GACvDd,EAAc,EAAJya,GAASza,EAAc,EAAJc,GAC7Bd,EAAc,EAAJya,EAAQ,GAAKza,EAAc,EAAJc,EAAQ,GACzCd,EAAc,EAAJya,EAAQ,GAAKza,EAAc,EAAJc,EAAQ,GACzCd,EAAc,EAAJya,EAAQ,GAAKza,EAAc,EAAJc,EAAQ,GACzCq8B,EAAW,EAAJ1iB,GAAS0iB,EAAW,EAAJr8B,GACvBq8B,EAAW,EAAJ1iB,EAAQ,GAAK0iB,EAAW,EAAJr8B,EAAQ,GACnCq8B,EAAW,EAAJ1iB,EAAQ,GAAK0iB,EAAW,EAAJr8B,EAAQ,GACnCq8B,EAAW,EAAJ1iB,EAAQ,GAAK0iB,EAAW,EAAJr8B,EAAQ,GACnCq8B,EAAW,EAAJ1iB,EAAQ,GAAK0iB,EAAW,EAAJr8B,EAAQ,GACnCq8B,EAAW,EAAJ1iB,EAAQ,GAAK0iB,EAAW,EAAJr8B,EAAQ,IAGvCif,EAAKM,YAAY/c,MACjByc,EAAKK,YAAY9c,MACjByc,EAAKK,YAAY9c,MACjByc,EAAKqd,WAAa,EAClBkD,GAAU,EAGd1pC,QAAQC,IAAI,WAAaypC,EAAOvlC,WAAa,WAG/CglB,EAAKmf,QAAU,SAAS5iC,GACtB,OAAOyjB,EAAKxnB,MAAM2mC,QAAQ5iC,IAG5ByjB,EAAKlkB,QAAU,SAASsd,EAAQ9O,GAAyB,IAAjBkzB,IAAgB,yDACtDxd,EAAKxnB,MAAM0D,QAAQkd,EAAOre,GAAIuP,EAAOvP,IACrCilB,EAAKwgB,SAASxgB,EAAKmf,QAAQ/lB,EAAOre,IAAKilB,EAAKmf,QAAQ70B,EAAOvP,IAAKyiC,IAGlExd,EAAKygB,aAAe,SAAS5lC,EAAM6lC,GACjC,IAAK,IAAIliC,EAAI,EAAGA,EAAIkiC,EAAUhkC,OAAQ8B,IAAK,CACzC,IAAImiC,EAAUD,EAAUliC,GACxBwhB,EAAKllB,QAAQ6lC,GACb3gB,EAAKlkB,QAAQjB,EAAKE,GAAI4lC,EAAQ5lC,MAIlCilB,EAAK4gB,cAAgB,SAAS/lC,GAC5BmlB,EAAK6gB,cACL7gB,EAAKgC,aAAennB,EACpBA,EAAK4kC,SAAU,EACf5kC,EAAK6kC,SAAU,EAGf,IAFA,IAAI3kC,EAAKF,EAAKE,GAELyD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BzD,GAAM,IACN,IAAI4lC,EAAUxoB,EAAE2oB,QAAO,EAAM,GAAIjmC,GACjC8lC,EAAQ5lC,GAAKA,EACb4lC,EAAQpvB,KAAKxP,MAAQvD,EACrBmiC,EAAQpB,GAAK1kC,EAAKsY,EAClBwtB,EAAQnB,GAAK3kC,EAAKuY,EAClButB,EAAQpvB,KAAKhS,MAAQ1E,EAAK2d,WAAWjZ,MACrCygB,EAAK4B,UAAUlmB,KAAKskB,EAAKllB,QAAQ6lC,IACjC3gB,EAAKlkB,QAAQkkB,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAAKilB,EAAKxnB,MAAM2mC,QAAQwB,EAAQ5lC,KAEvEilB,EAAK2B,SAAW3B,EAAKxnB,MAAM2mC,QAAQpkC,IAGrCilB,EAAK6gB,YAAc,WAAuB,IAAdhmC,EAAa,uDAAN,KACjC,GAAImlB,EAAK4B,UAAUllB,QAAU,EAAG,CAC9B,IAAK,IAAI8B,EAAI,EAAGA,EAAI,EAAGA,IACjBA,GAAK3D,GACPmlB,EAAK6f,WAAW7f,EAAK4B,UAAUpjB,IAEjCwhB,EAAK4B,UAAUpjB,GAAGihC,SAAU,EAC5Bzf,EAAK4B,UAAUpjB,GAAGkhC,SAAU,EAE9B1f,EAAK4B,UAAY,GAEf5B,EAAKgC,eACPhC,EAAKgC,aAAayd,SAAU,EAC5Bzf,EAAKgC,aAAa0d,SAAU,EAC5B1f,EAAKgC,aAAe,S,oBChK1B,IAAInC,EAAMjiB,EAAQ,IAAamgB,QACnB8B,EAAIxG,MACLwG,EAAI1G,KACJ0G,EAAIzH,KACNyH,EAAI/B,GACJ+B,EAAIxO,GAEb2e,EAAO9W,QAAU,SAAS8G,GAIxBA,EAAK+gB,cAAgB,SAASlmC,EAAMmmC,GAAqC,IAA7B/hC,EAA4B,uDAApB4gB,EAAI3B,eAClD8iB,GACFnmC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG6U,SAASje,MAAMgiC,OAAOhiC,GAC9DpE,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAGm1B,SAAU,IAElD3iC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG6U,SAASje,MAAM2U,IACrD/Y,EAAK2d,WAAW4hB,QAElBv/B,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAGm1B,SAAU,IAOtDxd,EAAKkhB,eAAiB,SAASrmC,EAAMmmC,GAGnC,IAFA,IAAMG,EAAQ,GACRC,EAAM,GACH5iC,EAAI,EAAGA,EAAIwhB,EAAKY,UAAUlkB,OAAQ8B,IACzC,IAAK,IAAIkc,EAAI,EAAGA,EAAIsF,EAAKY,UAAUpiB,GAAGohC,MAAMljC,OAAQge,IAClDymB,EAAMzlC,KAAKskB,EAAKY,UAAUpiB,GAAGohC,MAAMllB,GAAGrgB,QACtC+mC,EAAI1lC,KAAKskB,EAAKY,UAAUpiB,GAAGohC,MAAMllB,GAAGngB,MAGxC,GAAIymC,EAAQ,CACV,IAASxiC,EAAI,EAAGA,EAAI3D,EAAK+kC,MAAMljC,OAAQ8B,IACrC2iC,EAAMzlC,KAAKb,EAAK+kC,MAAMphC,GAAGnE,QACzB+mC,EAAI1lC,KAAKb,EAAK+kC,MAAMphC,GAAGjE,MAEzBylB,EAAKqhB,mBAAmBxmC,EAAMsmC,EAAOC,QAErCphB,EAAKqhB,mBAAmBxmC,EAAMsmC,EAAOC,IASzCphB,EAAKqhB,mBAAqB,SAASxmC,EAAMsmC,EAAOC,GAC9CphB,EAAKxnB,MAAMosB,YAAY,SAAAzpB,GACrB,IAAkC,GAA9B6kB,EAAKY,UAAUpX,QAAQrO,IAAYA,GAAKN,EAAM,CAEhDmlB,EAAKshB,iBAAiBnmC,EAAG,GACzB6kB,EAAKuhB,cAAcpmC,EAAG,GAAK,IAC3B,IAAK,IAAIqD,EAAI,EAAGA,EAAIrD,EAAEqmC,SAAS9kC,OAAQ8B,IACrCrD,EAAEqmC,SAAShjC,GAAG67B,UAAYl/B,EAAEqd,WAAW6hB,eAGzCra,EAAK8B,uBACoB,GAAxBqf,EAAM33B,QAAQrO,EAAEJ,MAAmC,GAAtBqmC,EAAI53B,QAAQrO,EAAEJ,IAO3CilB,EAAK+B,iBACgC,GAAtC/B,EAAK+B,eAAevY,QAAQrO,EAAEJ,MAE9BilB,EAAKshB,iBAAiBnmC,EAAG,IACzB6kB,EAAKuhB,cAAcpmC,EAAG,GAAK,IAC3B6kB,EAAK+gB,cAAc5lC,GAAG,EAAO0kB,EAAI1B,sBARjC6B,EAAKshB,iBAAiBnmC,EAAG,GACzB6kB,EAAKuhB,cAAcpmC,EAAG,GAAK,QAejC6kB,EAAKuhB,cAAgB,SAAS1mC,EAAM4mC,EAAIjnB,GACtC3f,EAAK2d,WAAW6hB,UAAUnlB,EAAI8K,EAAK1iB,SAAWmkC,EAAKjnB,EACnD3f,EAAK2d,WAAW6hB,UAAU37B,EAAIshB,EAAK1iB,SAAWmkC,EAAKjnB,EACnD3f,EAAK2d,WAAW6hB,UAAU9mB,EAAIyM,EAAK1iB,SAAWmkC,EAAKjnB,GAMrDwF,EAAKshB,iBAAmB,SAASzmC,EAAM6mC,GACrC7mC,EAAK2d,WAAWwnB,YAAY9iB,SAASV,QAAUklB,K,oBC5FnD,IAAI7hB,EAAMjiB,EAAQ,IAAamgB,QAC3B1E,EAAQwG,EAAIxG,MACLwG,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,cACfgC,EAAI/B,GACJ+B,EAAIxO,GACLzT,EAAQ,KAEhBoyB,EAAO9W,QAAU,SAAS8G,GACxBA,EAAK2hB,WAAa,SAAS9mC,GACzBmlB,EAAKiB,SAAWpmB,EAChBmlB,EAAKY,UAAY,CAAC/lB,GAClBA,EAAK2d,WAAWopB,YAAa,EAC7B5hB,EAAK6hB,gBAAgB7hB,EAAKke,OAAQle,EAAKme,SAMzCne,EAAK8hB,eAAiB,WACpB,IAAK,IAAItjC,EAAI,EAAGA,EAAIwhB,EAAKY,UAAUlkB,OAAQ8B,IACzCwhB,EAAKY,UAAUpiB,GAAGga,WAAWopB,YAAa,EACrC/hB,EAAIlB,kBAGPqB,EAAKY,UAAUpiB,GAAGga,WAAWwnB,YAAY9iB,SAASje,MAAM2U,IACtD,IAAIyF,EAAMkD,MAAMyD,EAAKY,UAAUpiB,GAAGga,WAAWvZ,QAH/C+gB,EAAKY,UAAUpiB,GAAGga,WAAWwnB,YAAY33B,SAAS,GAAGm1B,SAAU,EAMjExd,EAAKY,UAAUpiB,GAAGga,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQye,QAAS,EAEvE/hB,EAAKY,UAAY,IAOnBZ,EAAK6hB,gBAAkB,SAAS3D,EAAQC,GACtC,GAAIne,EAAKiB,SACP,IAAI+gB,EAAQ9D,EAASle,EAAKiB,SAAS9N,EAC/B8uB,EAAQ9D,EAASne,EAAKiB,SAAS7N,EAErC,IAAK,IAAI5U,EAAI,EAAGA,EAAIwhB,EAAKY,UAAUlkB,OAAQ8B,IACrCwhB,EAAKiB,WACPjB,EAAKY,UAAUpiB,GAAG2U,GAAK6uB,EACvBhiB,EAAKY,UAAUpiB,GAAG4U,GAAK6uB,EACvBjiB,EAAKY,UAAUpiB,GAAG+gC,GAAKvf,EAAKY,UAAUpiB,GAAG2U,EACzC6M,EAAKY,UAAUpiB,GAAGghC,GAAKxf,EAAKY,UAAUpiB,GAAG4U,EACzC4M,EAAKY,UAAUpiB,GAAGihC,SAAU,EAC5Bzf,EAAKY,UAAUpiB,GAAGkhC,SAAU,GAEzB7f,EAAIlB,kBAGPqB,EAAKY,UAAUpiB,GAAGga,WAAWwnB,YAAY9iB,SAASje,MAAM2U,IACtD,IAAIyF,EAAMkD,MAAMyD,EAAKY,UAAUpiB,GAAGga,WAAW4hB,SAH/Cpa,EAAKY,UAAUpiB,GAAGga,WAAWwnB,YAAY33B,SAAS,GAAGm1B,SAAU,EAMjExd,EAAKY,UACHpiB,GACAga,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQye,QAAS,GAOzD/hB,EAAKkiB,eAAiB,SAAShE,EAAQC,GACrC,IAAKne,EAAKiB,SAAU,CAElB,GADAjB,EAAKgB,SAAW,IAAI3H,EAAM0H,QAAQmd,EAAQC,EAAQ,GAC9Cne,EAAKc,WAAW3N,EAAI6M,EAAKgB,SAAS7N,EACpC,IAAItB,EAAOmO,EAAKc,WACZiW,EAAQ/W,EAAKgB,cAEbnP,EAAOmO,EAAKgB,SACZ+V,EAAQ/W,EAAKc,WAGnBd,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9B,IAAIsnC,EACuB,UAAvBniB,EAAKD,QAAQG,OACfiiB,EAAOniB,EAAK6E,MAAMud,gBAAgBvnC,EAAKE,IACP,MAAvBilB,EAAKD,QAAQG,SACtBiiB,EAAOtnC,GAELmlB,EAAKqiB,UAAUxwB,EAAMklB,EAAOoL,EAAKhvB,EAAGgvB,EAAK/uB,IAC3C4M,EAAKY,UAAUllB,KAAKb,OAS5BmlB,EAAKqiB,UAAY,SAASv8B,EAAGoP,EAAGotB,EAAMC,GACpC,OACED,EAAOptB,EAAE/B,GACTmvB,EAAOx8B,EAAEqN,IACPovB,EAAOrtB,EAAE9B,GAAKmvB,EAAOz8B,EAAEsN,GAAOmvB,EAAOrtB,EAAE9B,GAAKmvB,EAAOz8B,EAAEsN,M,oBCrG7D,IAAIyM,EAAMjiB,EAAQ,IAAamgB,QAC3B1E,EAAQwG,EAAIxG,MACLwG,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,cACfgC,EAAI/B,GACJ+B,EAAIxO,GACLzT,EAAQ,KAEhBoyB,EAAO9W,QAAU,SAAS8G,GAIxBA,EAAK2U,YAAc,SAAS/T,EAAWsd,EAAQC,EAAQ1G,EAAQ+K,GA0B7D,GAxBAxiB,EAAKke,OAASA,EACdle,EAAKme,OAASA,EAEVne,EAAKyiB,eAAiBziB,EAAKsB,YAExBtB,EAAKiB,WAAkD,GAAtCjB,EAAKY,UAAUpX,QAAQoX,IAAqB4hB,GAChExiB,EAAK8hB,iBAGF9hB,EAAKiB,UAERjB,EAAKkiB,eAAehE,EAAQC,IAI5Bne,EAAKY,UAAUlkB,OAAS,IAEtBsjB,EAAKiB,UACPjB,EAAK6E,MAAMhC,MAAM,GAGnB7C,EAAK6hB,gBAAgB3D,EAAQC,IAG1Bne,EAAKsB,UAGH,CAEL,GAAItB,EAAKue,4BAKP,YAJAve,EAAKiE,QAAQ6X,mBACX9b,EAAKiE,QAAQia,OACble,EAAKiE,QAAQka,QAMjB,GAAIne,EAAKyiB,gBAAkBziB,EAAKiB,SAAU,CACpCjB,EAAKkB,UACPlB,EAAKsd,UAAUE,SAAU,EACzBxd,EAAKkB,SAAU,GAEjBlB,EAAKsd,UAAU/mC,SAAS4c,EAAI+qB,EAC5Ble,EAAKsd,UAAU/mC,SAAS6c,EAAI+qB,EAC5B,IAAI6D,EAAQhiB,EAAKc,WAAW3N,EAAI+qB,EAC5B+D,EAAQjiB,EAAKc,WAAW1N,EAAI+qB,EAChCne,EAAKsd,UAAUnoC,MAAMye,IAAIouB,EAAOC,EAAO,QAEvCjiB,EAAKsd,UAAUE,SAAU,OAxB3Bxd,EAAK0iB,QAAQ9hB,GACbZ,EAAKc,WAAa,IAAIzH,EAAM0H,QAAQmd,EAAQC,EAAQ,IA+BxDne,EAAK0iB,QAAU,SAAS7nC,GAkBtB,GAjBImlB,EAAK2iB,YAAwD,GAA3C3iB,EAAKY,UAAUpX,QAAQwW,EAAK2iB,aAChD3iB,EAAK+gB,cAAc/gB,EAAK2iB,WAAW,GACnC3iB,EAAK2iB,UAAUnqB,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQye,QAAS,EAClE/hB,EAAKkhB,eAAermC,GAAM,IAE5BmlB,EAAK2iB,UAAY9nC,EACbA,GACFmlB,EAAK+gB,cAAclmC,GAAM,GACzBA,EAAK2d,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQye,QAAS,EACxD/hB,EAAKkhB,eAAermC,GAAM,IACQ,GAAzBmlB,EAAKY,UAAUlkB,QACxBsjB,EAAKxnB,MAAMosB,YAAY,SAAAzpB,GACrB6kB,EAAKshB,iBAAiBnmC,EAAG,GACzB6kB,EAAKuhB,cAAcpmC,EAAG,GAAK,IAC3B6kB,EAAK+gB,cAAc5lC,GAAG,EAAO0kB,EAAI1B,2BAGVhkB,GAAvB6lB,EAAK+B,eACP,IAAK,IAAIvjB,EAAI,EAAGA,EAAIwhB,EAAK+B,eAAerlB,OAAQ8B,IAC9CwhB,EAAKshB,iBAAiBthB,EAAK+B,eAAevjB,GAAI,GAC9CwhB,EAAK+gB,cAAc/gB,EAAK+B,eAAevjB,IAAI,EAAMqhB,EAAIzB,mBAM3D,IAAIwkB,EAAY,EACZC,EAAU,EAId7iB,EAAKvJ,YAAc,SAASmK,EAAWsd,EAAQC,EAAQ1G,EAAQ+K,GAE7D,GAAIxiB,EAAKue,4BAGP,OAFAve,EAAKsB,WAAY,OACjBtB,EAAKiE,QAAQ6X,mBAAmB9b,EAAKiE,QAAQia,OAAQle,EAAKiE,QAAQka,QAMpE,GAHAyE,EAAYx3B,KAAK03B,MACjB9iB,EAAKyiB,cAA0B,GAAVhL,EAEP,GAAVA,GAAyB,GAAVA,EAAa,CAM9B,GALAzX,EAAKsB,WAAY,EACjBtB,EAAKc,WAAa,IAAIzH,EAAM0H,QAAQmd,EAAQC,EAAQ,GACtC,GAAV1G,GAAgBzX,EAAKiB,WACvBjB,EAAKkB,SAAU,IAEyB,GAAtClB,EAAKY,UAAUpX,QAAQoX,KAAqB4hB,EAAM,CACpD,IAAK,IAAIhkC,EAAI,EAAGA,EAAIwhB,EAAKY,UAAUlkB,OAAQ8B,IACzCwhB,EAAKY,UAAUpiB,GAAGga,WAAWopB,YAAa,EACrC/hB,EAAIlB,kBAKPqB,EAAKY,UAAUpiB,GAAGga,WAAWwnB,YAAY9iB,SAASje,MAAM2U,IACtD,IAAIyF,EAAMkD,MAAMyD,EAAKY,UAAUpiB,GAAGga,WAAWvZ,QAL/C+gB,EAAKY,UACHpiB,GACAga,WAAWwnB,YAAY33B,SAAS,GAAGm1B,SAAU,EAMjDxd,EAAKY,UACHpiB,GACAga,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQye,QAAS,EAEvD/hB,EAAKY,UAAY,GAEfA,GACFZ,EAAKiB,SAAWL,EACXA,EAAUpI,WAAWopB,WAMfY,IACTxiB,EAAKY,UAAUlb,OAAOsa,EAAKY,UAAUpX,QAAQoX,GAAY,GACzDA,EAAUpI,WAAWopB,YAAa,EAC7B/hB,EAAIlB,kBAGPiC,EAAUpI,WAAWwnB,YAAY9iB,SAASje,MAAM2U,IAC9C,IAAIyF,EAAMkD,MAAMyD,EAAKY,UAAUpiB,GAAGga,WAAWvZ,QAH/C2hB,EAAUpI,WAAWwnB,YAAY33B,SAAS,GAAGm1B,SAAU,EAMzD5c,EAAUpI,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQye,QAAS,EAC7D/hB,EAAKiB,SAAW,QAhB0B,GAAtCjB,EAAKY,UAAUpX,QAAQoX,IACzBZ,EAAKY,UAAUllB,KAAKklB,GAEtBA,EAAUpI,WAAWopB,YAAa,EAClC5hB,EAAK6hB,gBAAgB3D,EAAQC,KAe3Bne,EAAK+iB,aACP/iB,EAAKra,iBAAiB,IAAI,GAC1Bqa,EAAK+iB,gBAAa5oC,KAS1B6lB,EAAK4U,UAAY,SAAShU,EAAWsd,EAAQC,EAAQ1G,GACnDoL,EAAUz3B,KAAK03B,MACf9iB,EAAKsB,WAAY,EAEH,GAAVmW,GAAyB,GAAVA,IACjBzX,EAAKkB,SAAU,EACflB,EAAKiB,SAAW,KAChBjB,EAAKsd,UAAUE,SAAU,EAEzBxd,EAAK3O,GAAG2xB,KAAK,eAAgBhjB,EAAKY,aAOtCZ,EAAK2e,aAAe,SAAS/d,GAI3B,GAHIA,IACFZ,EAAK6B,iBAAmBjB,GAEtBZ,EAAKgC,aAAc,CACrB,IAAI7mB,EAAI6kB,EAAK4B,UAAUpY,QAAQoX,IACrB,GAANzlB,GACF6kB,EAAK6gB,YAAY1lC,KAQvB6kB,EAAK8e,mBAAqB,SAASp6B,GAE7Bm+B,EAAUD,EAAY,KACxB5iB,EAAK3O,GAAG2xB,KAAK,cAAe,CAC1BlxB,MAAOpN,EAAMoN,MACbE,MAAOtN,EAAMsN,W,oBC/MrB,IAAI6N,EAAMjiB,EAAQ,IAAamgB,QAC3B1E,EAAQwG,EAAIxG,MACLwG,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,cACfgC,EAAI/B,GACJ+B,EAAIxO,GAEb2e,EAAO9W,QAAU,SAAS8G,GAIxBA,EAAKijB,mBAAqB,SAASC,GACjCljB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BA,EAAK2d,WAAWwnB,YAAY7qC,MAAMye,IAAIsvB,EAAGA,EAAG,GAC5C,IAAIC,EAAQ,EAAItjB,EAAIb,eAAiBkkB,EACrCroC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAGlT,MAAMye,IAAIuvB,EAAOA,EAAO,MAOpEnjB,EAAKojB,gBAAkB,SAASC,GAC9BrjB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAE9B,GADAyoC,QAAUzoC,EAAK2d,WAAW6qB,GACrBC,QAEE,CACLA,QAAU1mC,KAAK9F,IAAIwsC,QAAU,GAC7BzoC,EAAK2d,WAAWwnB,YAAY7qC,MAAMye,IAAI0vB,QAASA,QAAS,GACxD,IAAIH,EAAQ,EAAItjB,EAAIb,eAAiBskB,QACrCzoC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAGlT,MAAMye,IAAIuvB,EAAOA,EAAO,QALhEtsC,QAAQC,IAAI,gCAalBkpB,EAAKujB,oBAAsB,SAASC,GAClCxjB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BA,EAAK2d,WAAWwnB,YAAY9iB,SAASje,MAAM2U,IACzC,IAAIyF,EAAMkD,MAAM,OAASinB,EAAY,iBAElC3jB,EAAIlB,mBACP9jB,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG6U,SAASje,MAAM2U,IACrD,IAAIyF,EAAMkD,MAAM,OAASinB,EAAY,oBAS7CxjB,EAAKyjB,iBAAmB,SAASJ,GAC/B,IAAI7kC,EAAI,EACR+K,OAAS,GACTnK,IAAM,KACNC,IAAM,KAEN2gB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,IACzByoC,QAAUzoC,EAAK2d,WAAW6qB,KAClB,MAAPjkC,MAAaA,IAAMkkC,SACZ,MAAPjkC,MAAaA,IAAMikC,SACnBA,QAAUlkC,IAAKA,IAAMkkC,QAChBA,QAAUjkC,MAAKA,IAAMikC,SAC9B/5B,OAAO/K,GAAK8kC,QACZ9kC,GAAK,GAEL+K,OAAO/K,IAAM,IAIjBA,EAAI,EACJwhB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9B,IAAI2oC,GACc,GAAdj6B,OAAO/K,GACTglC,EAAY,GAEZj6B,OAAO/K,IAAM+K,OAAO/K,GAAKY,MAAQC,IAAMD,KACvCokC,EAAwB,IAAZj6B,OAAO/K,IAErB3D,EAAK2d,WAAWwnB,YAAY9iB,SAASje,MAAM2U,IACzC,IAAIyF,EAAMkD,MAAM,OAASinB,EAAY,iBAElC3jB,EAAIlB,mBACP9jB,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG6U,SAASje,MAAM2U,IACrD,IAAIyF,EAAMkD,MAAM,OAASinB,EAAY,iBAGzChlC,OAOJwhB,EAAK0jB,kBAAoB,SAASxrC,GAAwB,IACpDyrC,EASAC,EAaAC,EAvBqCjsC,EAAc,uDAAN,KAG/C+rC,EADgB,UAAdzrC,EAAQ,GACJ,SAAA2C,GAAI,OAAKA,EAAK+kC,MAAQ/kC,EAAK+kC,MAAMljC,OAAS,EAAI,GAC7B,UAAdxE,EAAQ,GACX,SAAA2C,GAAI,OAAIA,EAAK2d,WAAWwnB,YAAY7qC,MAAMge,GAE1C,SAAAtY,GAAI,OAAI3C,EAAQ,IAKtB0rC,EADgB,UAAd1rC,EAAQ,GACJ,SAAAyrC,GAAG,OAAI3jB,EAAKgb,YAAY2I,IACP,QAAdzrC,EAAQ,GACX,SAAAyrC,GAAG,OAAIA,EAAMzrC,EAAQ,GAAGyrC,IACP,OAAdzrC,EAAQ,GACX,SAAAyrC,GAAG,OAAIA,EAAMzrC,EAAQ,GAAGyrC,IACP,OAAdzrC,EAAQ,GACX,SAAAyrC,GAAG,OAAI/mC,KAAK9F,IAAI6sC,IAEhB,SAAAA,GAAG,OAAIA,GAIG,WAAdzrC,EAAQ,GACV2rC,EAAO,SAAChpC,EAAM8oC,GACZ9oC,EAAK2d,WAAWwnB,YAAY7qC,MAAMye,IAAI+vB,EAAKA,EAAK,GAChD,IAAIR,EAAQ,EAAItjB,EAAIb,eAAiB2kB,EACrC9oC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAGlT,MAAMye,IAAIuvB,EAAOA,EAAO,IAE3C,gBAAdjrC,EAAQ,GACjB2rC,EAAO,SAAChpC,EAAM8oC,GACZ9oC,EAAK2d,WAAW6hB,UAAUnlB,EAAI,EAC9Bra,EAAK2d,WAAW6hB,UAAU9mB,EAAI,EAAIowB,EAAM,EACxC9oC,EAAK2d,WAAW6hB,UAAU37B,EAAI,EAAIilC,EAAM,GAEnB,iBAAdzrC,EAAQ,GACjB2rC,EAAO,SAAChpC,EAAM8oC,GACZ9oC,EAAK2d,WAAW6hB,UAAU9mB,EAAI,EAC9B1Y,EAAK2d,WAAW6hB,UAAUnlB,EAAI,EAAIyuB,EAAM,EACxC9oC,EAAK2d,WAAW6hB,UAAU37B,EAAI,EAAIilC,EAAM,GAEnB,kBAAdzrC,EAAQ,GACjB2rC,EAAO,SAAChpC,EAAM8oC,GACZ9oC,EAAK2d,WAAW6hB,UAAU37B,EAAI,EAC9B7D,EAAK2d,WAAW6hB,UAAU9mB,EAAI,EAAIowB,EAAM,EACxC9oC,EAAK2d,WAAW6hB,UAAUnlB,EAAI,EAAIyuB,EAAM,GAEnB,iBAAdzrC,EAAQ,GACjB2rC,EAAO,SAAChpC,EAAM8oC,GACZ9oC,EAAK2d,WAAWwnB,YAAY9iB,SAASje,MAAMsU,EAAI,EAC/C1Y,EAAK2d,WAAWwnB,YAAY9iB,SAASje,MAAMiW,EAAI,EAAIyuB,EAAM,EACzD9oC,EAAK2d,WAAWwnB,YAAY9iB,SAASje,MAAMP,EAAI,EAAIilC,EAAM,GAEpC,UAAdzrC,EAAQ,GACjB2rC,EAAO,SAAChpC,EAAM8oC,GACZ9oC,EAAK4kC,QAAUkE,EACf9oC,EAAK6kC,QAAUiE,GAEM,aAAdzrC,EAAQ,GACjB2rC,EAAO,SAAChpC,EAAM8oC,GACZ3jB,EAAK8jB,oBAAoBjpC,EAAM8oC,IAEV,eAAdzrC,EAAQ,KACjB2rC,EAAO,SAAChpC,EAAM8oC,GACZ3jB,EAAK+jB,kBAAkBlpC,EAAM8oC,KAIjC3jB,EAAKgkB,YAAYL,EAAKC,EAAKC,EAAMjsC,IAQnCooB,EAAKikB,WAAa,SAASN,EAAKC,EAAKC,EAAMhpC,GACzC,IAAImG,EAAI2iC,EAAI9oC,GACZ,QAASV,GAAL6G,EAAgB,CAClB,IAAIkU,EAAI0uB,EAAI5iC,QACH7G,GAAL+a,GACF2uB,EAAKhpC,EAAMqa,KAQjB8K,EAAKgkB,YAAc,SAASL,EAAKC,EAAKC,GAAqB,IAAfjsC,EAAc,uDAAN,KAClD,GAAa,MAATA,EACFooB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BmlB,EAAKikB,WAAWN,EAAKC,EAAKC,EAAMhpC,UAGlC,IAAK,IAAI2D,EAAI,EAAGA,EAAI5G,EAAM8E,OAAQ8B,IAChCwhB,EAAKikB,WAAWN,EAAKC,EAAKC,EAAMjsC,EAAM4G,KAS5CwhB,EAAK+jB,kBAAoB,SAASlpC,EAAMqpC,GACtCrpC,EAAK2d,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQjb,SAAS,GAAG6G,MAAMC,MAC/D+0B,EAASlpC,WAAa,MAO1BglB,EAAK8jB,oBAAsB,SAASjpC,EAAMsE,GAAyB,IAAnBglC,EAAkB,uDAAH,EAC7DhlC,GAAcglC,EACdtpC,EAAK2d,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQjb,SAAS,GAAG6G,MAAMwB,SAC/DvR,EAAKnE,WAAa,OAMtBglB,EAAK0d,gBAAkB,SAASv+B,GAC9B6gB,EAAKmB,YAAchiB,EACnB6gB,EAAKoB,aAAejiB,EACpB6gB,EAAKyd,WAAWtoC,MAAMye,IAAW,EAAPzU,EAAiB,EAAPA,EAAU,GAC9C6gB,EAAKyd,WAAWlnC,SAAS4c,GAAKhU,EAC9B6gB,EAAKyd,WAAWlnC,SAAS6c,GAAKjU,EAC9B6gB,EAAKuC,SAASgH,YAAqB,EAAPpqB,EAC5B6gB,EAAKiE,QAAQyB,OAAOnvB,SAASqkB,EAAuB,EAAnBoF,EAAKmB,aAMxCnB,EAAK4d,gBAAkB,SAASlY,GAC9B,IAAI+D,EAAWzJ,EAAKmE,QAAQ5tB,SAASqkB,EACjC5J,EACFpU,KAAKiyB,IAAMnJ,EAAO7E,IAAMjkB,KAAK2zB,GAAM,IAAO,IAAO9G,EAAW,EAAI,EAC9Dta,EAAQ6B,EAAS0U,EAAOxB,OAAS,EACrClE,EAAK2d,SAASxoC,MAAMye,IAAIzE,EAAO6B,EAAQ,GACvCgP,EAAK2d,SAASpnC,SAAS4c,EAAIuS,EAAOnvB,SAAS4c,EAAIhE,EAAQ,EACvD6Q,EAAK2d,SAASpnC,SAAS6c,EAAIsS,EAAOnvB,SAAS6c,EAAIpC,EAAS,K,oBCnP5D,IAAI6O,EAAMjiB,EAAQ,IAAamgB,QAC3B1E,EAAQwG,EAAIxG,MACLwG,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,cACfgC,EAAI/B,GACJ+B,EAAIxO,GAEb2e,EAAO9W,QAAU,SAAS8G,GAIxBA,EAAKokB,oBAAsB,SAASvpC,EAAMwpC,GAGxC,GAAa,WADXxpC,EAAK2d,WAAW8rB,QAAUzpC,EAAK2d,WAAWjZ,OAASsgB,EAAIf,aAEvD,IAAIylB,EAAYvkB,EAAK+a,mBAEjBwJ,EAAY,IAAIlrB,EAAMmrB,eAAe,EAAG,IAG9C,OAAOxkB,EAAKykB,0BAA0BF,EAAW1pC,EAAMwpC,IAMzDrkB,EAAKykB,0BAA4B,SAASF,EAAW1pC,EAAMwpC,GACzD,IAAIllC,EAAO6gB,EAAK0kB,YAAY7pC,GACxBsoC,EAAQtjB,EAAIb,eAEhBqlB,EAAUxkB,EAAItB,aAAe,KAAO8lB,EACpC,IAAIplC,EAAQ4gB,EAAIpB,eACZ,KACAnkB,SAASO,EAAK2d,WAAW4hB,QAAUva,EAAI3B,gBACvCymB,EAAY,IAAItrB,EAAMurB,kBAAkB,CAAE3lC,MAAOA,EAAO/D,IAAKmpC,IACjEM,EAAUE,aAAc,EACxB,IAAIC,EAAY,IAAIzrB,EAAM0rB,KAAKR,EAAWI,GAI1C,OAHAG,EAAUtH,SAAU,EACpBsH,EAAU3vC,MAAMye,IAAI,EAAIuvB,EAAQhkC,EAAM,EAAIgkC,EAAQhkC,EAAM,GACxD2lC,EAAUvuC,SAASqkB,GAAK,IACjBkqB,GAMT9kB,EAAKglB,eAAiB,SAASnqC,EAAMwpC,GAEnC,GAAa,WADDxpC,EAAK2d,WAAWjZ,OAASsgB,EAAIhB,YAEvC,IAAIzE,EAAW4F,EAAK+a,mBAEhB3gB,EAAW,IAAIf,EAAMmrB,eAAe,EAAG,IAE7C,OAAOxkB,EAAKilB,qBAAqB7qB,EAAUvf,EAAMwpC,IAMnDrkB,EAAKklB,cAAgB,SAAS/lC,GAC5B,IAAIib,EAAW4F,EAAK+a,cAChB97B,EAAQ,IAAIoa,EAAMkD,MAAMsD,EAAID,WAC5B1C,EAAW,IAAI7D,EAAMurB,kBAAkB,CAAE3lC,MAAOA,IAChDkmC,EAAU,IAAI9rB,EAAM0rB,KAAK3qB,EAAU8C,GAIvC,OAHAioB,EAAQhwC,MAAMye,IAAI,GAAK,GAAK,GAC5BuxB,EAAQ5uC,SAASqkB,EAAI,IACrBuqB,EAAQ3H,SAAU,EACX2H,GAMTnlB,EAAKilB,qBAAuB,SAAS7qB,EAAUvf,EAAMwpC,GACnD,IAAIllC,EAAO6gB,EAAK0kB,YAAY7pC,GAE5BwpC,EAAUxkB,EAAIrB,YAAc,KAAO6lB,EACnC,IAAIplC,EAAQ4gB,EAAInB,cACZ,KACA,IAAIrF,EAAMkD,MAAM1hB,EAAK2d,WAAWvZ,OAAS4gB,EAAI5B,YAC7Cf,EAAW,IAAI7D,EAAMurB,kBAAkB,CAAE3lC,MAAOA,EAAO/D,IAAKmpC,IAChEnnB,EAAS2nB,aAAc,EACvB,IAAI7E,EAAc,IAAI3mB,EAAM0rB,KAAK3qB,EAAU8C,GAE3C,OADA8iB,EAAY7qC,MAAMye,IAAIzU,EAAMA,EAAM,GAC3B6gC,GAMThgB,EAAK0kB,YAAc,SAAS7pC,GAI1B,OAFIA,EAAK2d,WAAWrZ,KAA0BtE,EAAK2d,WAAWrZ,MAKhE6gB,EAAKolB,gBAAkB,SAASvqC,GAC9B,IAAIqiB,EAAW,IAAI7D,EAAMurB,kBAAkB,CACzC3lC,MAAO,EACPomC,WAAW,EACXC,mBAAoB,EACpBtrB,KAAMX,EAAMksB,aAEVnrB,EAAW,IAAIf,EAAMmsB,cAAc,IAAM,KACzCC,EAAWzlB,EAAK0lB,4BAA4BtrB,EAAU8C,GACtDnb,EAAQie,EAAK2lB,uBAAuB9qC,EAAM4qC,GAC1CpF,EAAargB,EAAK4lB,yBAAyB7jC,EAAO0jC,GACtD5qC,EAAK2d,WAAW6nB,WAAaA,EAC7BrgB,EAAKyF,MAAMxpB,IAAIokC,IAGjBrgB,EAAK0lB,4BAA8B,SAAStrB,EAAU8C,GACpD,IAAIuoB,EAAW,IAAIpsB,EAAM0rB,KAAK3qB,EAAU8C,GACxCuoB,EAAStwC,MAAMye,IAAIiM,EAAIP,UAAWO,EAAIP,UAAW,GACjD,IAAIumB,GAAO,IAAIxsB,EAAMysB,MAAOpe,cAAc+d,GAI1C,OAHAA,EAASlvC,SAAS4c,IAAM0yB,EAAKxmC,IAAI8T,EAAI0yB,EAAKzmC,IAAI+T,GAAK0M,EAAIN,cACvDkmB,EAASlvC,SAAS6c,IAAMyyB,EAAKxmC,IAAI+T,EAAIyyB,EAAKzmC,IAAIgU,GAAKyM,EAAIL,cACvDimB,EAASjI,QAAU3d,EAAIF,eAChB8lB,GAGTzlB,EAAK2lB,uBAAyB,SAAS9qC,EAAM4qC,GAC3C,IAAI1jC,EAAQie,EAAK+lB,eAAelrC,GAIhC,OAHAkH,EAAMuhB,QAAQgd,QAAS,EACvBv+B,EAAMxL,SAASknB,KAAKgoB,EAASlvC,UAC7BwL,EAAM5M,MAAMsoB,KAAKgoB,EAAStwC,OACnB4M,GAGTie,EAAK4lB,yBAA2B,SAAS7jC,EAAO0jC,GAC9C,IAAIpF,EAAa,IAAIhnB,EAAMgU,SAG3B,OAFAgT,EAAWpkC,IAAI8F,GACfs+B,EAAWpkC,IAAIwpC,GACRpF,GAMTrgB,EAAK+lB,eAAiB,SAASlrC,GAE7B,IAAIyoB,EAAUtD,EAAKgmB,wBACfpsC,EAAU4T,SAASy4B,eAAeprC,EAAK2d,WAAWzW,OAClDmkC,EAAclmB,EAAKmmB,yBAIvB,OAHAD,EAAY9jB,YAAYxoB,GACxB0pB,EAAQlB,YAAY8jB,GACL,IAAI7sB,EAAM+T,YAAY9J,IAOvCtD,EAAKgmB,sBAAwB,WAC3B,IAAI1iB,EAAU9V,SAASwgB,cAAc,OAKrC,OAJA1K,EAAQpU,MAAMC,MAAQ,SACtBmU,EAAQpU,MAAM8B,OAAS,QACvBsS,EAAQpU,MAAMwD,gBAAkBmN,EAAIJ,gBACpC6D,EAAQpU,MAAMsN,QAAUqD,EAAIH,aACrB4D,GAMTtD,EAAKmmB,uBAAyB,WAC5B,IAAID,EAAc14B,SAASwgB,cAAc,OASzC,OARAkY,EAAYh3B,MAAMC,MAAQ,SAC1B+2B,EAAYh3B,MAAM8B,OAAS,MAC3Bk1B,EAAYh3B,MAAMwB,SAAW,OAC7Bw1B,EAAYh3B,MAAMk3B,aAAe,WACjCF,EAAYh3B,MAAM+e,SAAW,SAC7BiY,EAAYh3B,MAAMqH,WAAa,MAC/B2vB,EAAYh3B,MAAMm3B,WAAa,SAExBH,GAOTlmB,EAAKsmB,oBAAsB,SAASzrC,EAAM0rC,EAAUlC,GAClD,IAAIrE,EAAchgB,EAAKglB,eAAenqC,EAAMwpC,GAG5C,IAAKxkB,EAAIlB,kBAAmB,CAC1B,IAAImmB,EAAY9kB,EAAKokB,oBAAoBvpC,EAAM0rC,GAC/CvG,EAAY/jC,IAAI6oC,GAGlB,IAAIK,EAAUnlB,EAAKklB,gBASnB,OARAlF,EAAY/jC,IAAIkpC,GAEhBnF,EAAYzpC,SAAS4c,EAAItY,EAAK2d,WAAWrF,EACzC6sB,EAAYzpC,SAAS6c,EAAIvY,EAAK2d,WAAWpF,EACzC4sB,EAAY3nB,MAAQxd,EAAKE,GACzBilC,EAAY73B,KAAOtN,EAAKE,GACxBF,EAAK2d,WAAWwnB,YAAcA,EAEvBA,GAMThgB,EAAK2f,SAAW,SAAS9kC,GASvB,SAAS2rC,EAAc3rC,EAAM0rC,EAAUlC,GAErC,IAAIrE,EAAchgB,EAAKsmB,oBAAoBzrC,EAAM0rC,EAAUlC,GAG3DrkB,EAAKolB,gBAAgBvqC,GAErBmlB,EAAK8d,WAAa,EAClB9d,EAAKpoB,MAAMqE,IAAI+jC,GAGbngB,EAAItB,cAAgBsB,EAAIrB,YAC1BgoB,EAAc3rC,EAAM,KAAM,MAG1BmlB,EAAKQ,cAAcimB,KACjB5rC,EAAK2d,WAAWkuB,QAAU7mB,EAAIxB,cAxBlC,SAAwBxjB,EAAM0rC,GAE5BvmB,EAAKQ,cAAcimB,KACjB5rC,EAAK2d,WAAWmuB,OAAS9mB,EAAIvB,aAC7BkoB,EAAch4B,KAAK,KAAM3T,EAAM0rC,KAqBhB/3B,KAAK,KAAM3T,KAQhCmlB,EAAKwgB,SAAW,SAASpnB,EAAQ9O,GAAyB,IAAjBkzB,IAAgB,yDACvD,QACoCrjC,IAAlCif,EAAOZ,WAAWwnB,kBACgB7lC,IAAlCmQ,EAAOkO,WAAWwnB,YAFpB,CAOA,IAAI3nB,EAAyB,EAAjB2H,EAAKqd,UACjBrd,EAAKK,YAAYhI,EAAQ,GAAKe,EAC9B4G,EAAKK,YAAYhI,EAAQ,EAAI,GAAK/N,EAC7B8O,EAAOooB,WACVpoB,EAAOooB,SAAW,IAEfl3B,EAAOk3B,WACVl3B,EAAOk3B,SAAW,IAEpBxhB,EAAKM,YAAY5kB,KAAK,CACpB0d,OAAQA,EACR9O,OAAQA,EACRs8B,MAAOpJ,EACPnD,UAAWjhB,EAAOZ,WAAW6hB,YAE/BjhB,EAAOooB,SAAS9lC,KAAKskB,EAAKM,YAAYjI,EAAQ,IAC9C/N,EAAOk3B,SAAS9lC,KAAKskB,EAAKM,YAAYjI,EAAQ,IAC9C2H,EAAK6mB,yBAAyBztB,EAAQ9O,EAAQ+N,GAC9C2H,EAAKqd,WAAa,OArBhByJ,WAAW9mB,EAAKwgB,SAAShyB,KAAK,KAAM4K,EAAQ9O,GAAS,KA2BzD0V,EAAK6mB,yBAA2B,SAASztB,EAAQ9O,EAAQ+N,GACvD,IAAIpY,EAAY+f,EAAK7nB,MAAMkjB,WAAW9kB,SAASulB,MAC3CshB,EAASpd,EAAK7nB,MAAMkjB,WAAWpc,MAAM6c,MAErCirB,EAAQ3tB,EAAOZ,WAAWwnB,YAAYzpC,SACtCywC,EAAQ18B,EAAOkO,WAAWwnB,YAAYzpC,SACtC0wC,EAAUjnB,EAAKM,YAAYjI,EAAQ,GAAGgiB,UACtC6M,EAAUlnB,EAAKM,YAAYjI,EAAQ,GAAGgiB,UAC1C+C,EAAO/kB,GAAS4uB,EAAQ1zB,EACxBtT,EAAUoY,KAAW0uB,EAAM5zB,EAC3BiqB,EAAO/kB,GAAS4uB,EAAQvoC,EACxBuB,EAAUoY,KAAW0uB,EAAM3zB,EAC3BgqB,EAAO/kB,GAAS4uB,EAAQ/xB,EACxBjV,EAAUoY,KAAW0uB,EAAMnsB,EAAI,IAC/BwiB,EAAO/kB,GAAS6uB,EAAQ3zB,EACxBtT,EAAUoY,KAAW2uB,EAAM7zB,EAC3BiqB,EAAO/kB,GAAS6uB,EAAQxoC,EACxBuB,EAAUoY,KAAW2uB,EAAM5zB,EAC3BgqB,EAAO/kB,GAAS6uB,EAAQhyB,EACxBjV,EAAUoY,KAAW2uB,EAAMpsB,EAAI,O,oBCrSnC,IAAIiF,EAAMjiB,EAAQ,IAAamgB,QAC3B1E,EAAQwG,EAAIxG,MACLwG,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,cACfgC,EAAI/B,GACJ+B,EAAIxO,GAKb2e,EAAO9W,QAAU,SAAS8G,GAKxBA,EAAKmnB,aAAe,SAAAlkC,GACL,WAATA,GAEF+c,EAAKonB,UAAY,SACjBpnB,EAAKqnB,iBAAkB,GACL,SAATpkC,IAET+c,EAAKonB,UAAY,OACjBpnB,EAAKqnB,iBAAkB,IAI3BrnB,EAAK/P,YAAc,WACjB+P,EAAK9a,QAAS,GAEhBtC,OAAO0kC,MAAQtnB,EAAK/P,YAEpB+P,EAAKjQ,aAAe,WAClBiQ,EAAK9a,QAAS,GAGhB8a,EAAKunB,iBAAmB,WACtBvnB,EAAK0jB,kBAAkB,CAAC,SAAU,MAAO,WAAY1jB,EAAKY,YAG5DZ,EAAKwnB,YAAc,WACjBxnB,EAAK0jB,kBAAkB,CAAC,SAAU,MAAO,aAG3C1jB,EAAK7P,iBAAmB,WACtB6P,EAAK0jB,kBAAkB,EAAC,EAAM,GAAI,UAAW1jB,EAAKY,YAGpDZ,EAAK3P,mBAAqB,WACxB2P,EAAK0jB,kBAAkB,EAAC,EAAO,GAAI,UAAW1jB,EAAKY,YAGrDZ,EAAKynB,iBAAmB,SAAAtoC,GACtB6gB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BmlB,EAAK8jB,oBAAoBjpC,EAAMsE,EAAM6gB,EAAKwB,qBAI9CxB,EAAKhb,qBAAuB,SAAA7F,GAC1B6gB,EAAKwB,iBAAmBriB,EACxB6gB,EAAKynB,iBAAiBznB,EAAKxgB,YAG7BwgB,EAAK/a,eAAiB,SAAAi/B,GACpBlkB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BmlB,EAAK+jB,kBAAkBlpC,EAAMqpC,MAIjClkB,EAAK0nB,UAAY,WACf1nB,EAAKyB,YAAczB,EAAKyB,YAO1BzB,EAAK1U,wBAA0B,WACzB0U,EAAKwD,YAAYmL,WAGrB3O,EAAKsD,QAAQiK,YAAYvN,EAAKwD,YAAYD,YAC1CvD,EAAKwD,YAAYmL,UAAW,IAI9B3O,EAAK2nB,uBAAyB,WACvB3nB,EAAKwD,YAAYmL,WAGtB3O,EAAKsD,QAAQlB,YAAYpC,EAAKwD,YAAYD,YAC1CvD,EAAKwD,YAAYmL,UAAW,IAO9B3O,EAAK4nB,yBAA2B,WAC9B,IAAIhwC,EAAQ,GACZooB,EAAKxnB,MAAMosB,YAAY,SAAAzpB,GACV6kB,EAAKxnB,MAAM2mC,QAAQhkC,EAAEJ,IACvByd,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,UACjDjK,EAAM8D,KAAKP,EAAEJ,MAMG,GAAhBnD,EAAM8E,OACRsjB,EAAK1U,0BAGL0U,EAAK2nB,yBAGP3nB,EAAK3O,GAAG2xB,KAAK,kBAAmBprC,IAGlCooB,EAAKrO,qBAAuB,WAC1BqO,EAAK6nB,aAAa7nB,EAAKY,UAAU1lB,IAAI,SAAAC,GAAC,OAAIA,EAAEJ,OAG9CilB,EAAKvL,mBAAqB,WACxBuL,EAAK5a,WAAW4a,EAAKY,UAAU1lB,IAAI,SAAAC,GAAC,OAAIA,EAAEJ,OAG5CilB,EAAKxL,mBAAqB,WACxBwL,EAAK8nB,WAAW9nB,EAAKY,UAAU1lB,IAAI,SAAAC,GAAC,OAAIA,EAAEJ,OAG5CilB,EAAK6nB,aAAe,SAAAjoC,GAClBogB,EAAKxnB,MAAMosB,YAAY,SAAAzpB,GACrB,GAAIyE,EAAQE,SAAS3E,EAAEJ,IAAK,CAC1B,IAAIF,EAAOmlB,EAAKxnB,MAAM2mC,QAAQhkC,EAAEJ,SAE6BZ,GAA3DU,EAAK2d,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,WAE/ChH,EAAK2d,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,UAAW,GAE5DhH,EAAK2d,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,UAAYhH,EACxD2d,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,YAGjDme,EAAK4nB,4BAGP5nB,EAAK5a,WAAa,SAAAxF,GAChBogB,EAAKxnB,MAAMosB,YAAY,SAAAzpB,GACjByE,EAAQE,SAAS3E,EAAEJ,MACVilB,EAAKxnB,MAAM2mC,QAAQhkC,EAAEJ,IAC3Byd,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,UAAW,KAG9Dme,EAAK4nB,4BAGP5nB,EAAK8nB,WAAa,SAAAloC,GAChBogB,EAAKxnB,MAAMosB,YAAY,SAAAzpB,GACjByE,EAAQE,SAAS3E,EAAEJ,MACVilB,EAAKxnB,MAAM2mC,QAAQhkC,EAAEJ,IAC3Byd,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,UAAW,KAG9Dme,EAAK4nB,4BAGP5nB,EAAKzL,cAAgB,WACnByL,EAAKxnB,MAAMosB,YAAY,SAAS/pB,IAC1BA,EAAOmlB,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,KAC9Byd,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,UAAW,IAE5Dme,EAAK4nB,4BAGP5nB,EAAK1L,cAAgB,WACnB0L,EAAKxnB,MAAMosB,YAAY,SAAS/pB,IAC1BA,EAAOmlB,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,KAC9Byd,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,UAAW,IAE5Dme,EAAK4nB,4BAGP5nB,EAAK+nB,cAAgB,SAAS5oC,GAC5B6gB,EAAK0d,gBAAgBv+B,IAGvB6gB,EAAKjb,iBAAmB,SAASxF,GACF,GAAzBygB,EAAKY,UAAUlkB,OACjBsjB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BmlB,EAAKgoB,aAAahoB,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAAKwE,KAGjDygB,EAAKY,UAAUhmB,QAAQ,SAASC,GAC9BmlB,EAAKgoB,aAAahoB,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAAKwE,MAKrDygB,EAAKgoB,aAAe,SAASntC,EAAM0E,GACpB,UAATA,GACF1E,EAAK2d,WAAWjZ,MAAQA,EACxB1E,EAAK2d,WAAWwnB,YAAY5lB,SAAW4F,EAAK+a,cAC5ClgC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG+R,SAAW4F,EAAK+a,eACtC,UAATx7B,GACT1E,EAAK2d,WAAWjZ,MAAQA,EACxB1E,EAAK2d,WAAWwnB,YAAY5lB,SAAW,IAAIf,EAAMmrB,eAAe,EAAG,IACnE3pC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG+R,SAAW,IAAIf,EAAMmrB,eAC3D,EACA,KAEgB,YAATjlC,GACT1E,EAAK2d,WAAWjZ,MAAQA,EACxB1E,EAAK2d,WAAWwnB,YAAY5lB,SAAW,IAAIf,EAAMmrB,eAAe,EAAG,GACnE3pC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG+R,SAAW,IAAIf,EAAMmrB,eAC3D,EACA,IAEgB,YAATjlC,GACT1E,EAAK2d,WAAWjZ,MAAQA,EACxB1E,EAAK2d,WAAWwnB,YAAY5lB,SAAW,IAAIf,EAAMmrB,eAAe,EAAG,GACnE3pC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG+R,SAAW,IAAIf,EAAMmrB,eAC3D,EACA,IAEgB,WAATjlC,GACT1E,EAAK2d,WAAWjZ,MAAQA,EACxB1E,EAAK2d,WAAWwnB,YAAY5lB,SAAW,IAAIf,EAAMmrB,eAAe,EAAG,GACnE3pC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG+R,SAAW,IAAIf,EAAMmrB,eAC3D,EACA,IAEgB,WAATjlC,IACT1E,EAAK2d,WAAWjZ,MAAQA,EACxB1E,EAAK2d,WAAWwnB,YAAY5lB,SAAW,IAAIf,EAAMmrB,eAAe,EAAG,GACnE3pC,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAG+R,SAAW,IAAIf,EAAMmrB,eAC3D,EACA,KAKNxkB,EAAKioB,eAAiB,WACpB,OAAIjoB,EAAKY,UAAUlkB,QAAUsjB,EAAKxnB,MAAM0vC,gBAC/B,EAEFloB,EAAKY,UAAUlkB,QAGxBsjB,EAAK3Y,WAAa,WAChB2Y,EAAK1iB,UAAY0iB,EAAK1iB,SACtB0iB,EAAKmoB,2BAGPnoB,EAAKmoB,wBAA0B,WAC7BnoB,EAAK2d,SAASzgB,SAASje,MAAQ,IAAIoa,EAAMkD,MAAOyD,EAAK1iB,SAAU,SAAW,IAG5E0iB,EAAKooB,SAAW,WACd,OAAOpoB,EAAKxnB,OAGdwnB,EAAKqoB,YAAc,WACjB,IAAIzwC,EAAQ,GAIZ,OAHAooB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BjD,EAAM8D,KAAKb,KAENjD,GAGTooB,EAAK9f,aAAe,WAClB,IAAIooC,EAAQ,GAIZ,OAHAtoB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BytC,EAAMztC,EAAKE,IAAM,CAACF,EAAKsY,EAAGtY,EAAKuY,KAE1Bk1B,GAGTtoB,EAAKuoB,gBAAkB,WACrB,IAAID,EAAQ,GAIZ,OAHAtoB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9BytC,EAAMztC,EAAKE,IAAM,CAACF,EAAK0kC,GAAI1kC,EAAK2kC,MAE3B8I,GAGT,IAAIE,GAAQ,EACZxoB,EAAKyoB,YAAc,WAIjBD,GAASA,GAGXxoB,EAAK0oB,YAAc,SAAA3tC,GACjBilB,EAAK2B,SAAW3B,EAAKxnB,MAAM2mC,QAAQpkC,IAGrCilB,EAAK2oB,aAAe,WAClB3oB,EAAK2hB,WAAW3hB,EAAK2B,WAGvB,IAAIxO,EAAI,EACR6M,EAAK4oB,SAAW,WACdz1B,GAAK,GACL6M,EAAK2C,SAASgZ,cAAcxoB,GAC5B6M,EAAK8D,kBAGP9D,EAAK6oB,aAAe,SAAShuC,GACvBA,EACFmlB,EAAKygB,aAAa5lC,GAElBmlB,EAAKygB,aAAazgB,EAAK6B,mBAI3B7B,EAAK8oB,wBAA0B,WAC7B9oB,EAAK8B,sBAAwB9B,EAAK8B,sBAGpC9B,EAAKra,iBAAmB,SAAS/F,EAASohC,GAIxC,GAHIphC,EAAQlD,OAAS,GAAKoe,MAAMyM,QAAQ3nB,EAAQ,MAC9CA,EAAUA,EAAQ,IAEhBogB,EAAK+B,eACP,IAAK,IAAIvjB,EAAI,EAAGA,EAAIwhB,EAAK+B,eAAerlB,OAAQ8B,IAC9CwhB,EAAK+gB,cACH/gB,EAAK+B,eAAevjB,IACnBwiC,EACDnhB,EAAIzB,kBAIV4B,EAAK+B,eAAiB,GACtB/B,EAAKxnB,MAAMosB,YAAY,SAAS/pB,IACG,GAA7B+E,EAAQ4J,QAAQ3O,EAAKE,MACvBilB,EAAK+gB,cAAclmC,EAAMmmC,EAAQnhB,EAAIzB,kBACrC4B,EAAK+B,eAAermB,KAAKb,OAK/BmlB,EAAKhgB,eAAiB,WACpB,IAAK,IAAIxB,EAAI,EAAGA,EAAIwhB,EAAKY,UAAUlkB,OAAQ8B,IACzCwhB,EAAK6f,WAAW7f,EAAKY,UAAUpiB,IAEjCwhB,EAAKY,UAAY,IAGnBZ,EAAK+oB,YAAc,WACjB,OAAO/oB,EAAKY,WAGdZ,EAAKzP,eAAiB,WACpB,OAAOyP,EAAKY,UAAU1lB,IAAI,SAAAC,GAAC,OAAIA,EAAEJ,Q,oBCpWrC,IAAI8kB,EAAMjiB,EAAQ,IAAamgB,QAC3B1E,EAAQwG,EAAIxG,MACLwG,EAAI1G,KACJ0G,EAAIzH,KACKyH,EAAIhC,cACfgC,EAAI/B,GACJ+B,EAAIxO,GAEb2e,EAAO9W,QAAU,SAAS8G,GAIxBA,EAAK2E,YAAc,WACjB3E,EAAK7nB,MAAM6wC,aAAa,EAAGhpB,EAAKqd,UAAY,GAI5C,IAHA,IAAI4L,EAAQjpB,EAAKqd,UAAY,EACzBp9B,EAAY+f,EAAK7nB,MAAMkjB,WAAW9kB,SAASulB,MAC3CshB,EAASpd,EAAK7nB,MAAMkjB,WAAWpc,MAAM6c,MAChCtd,EAAI,EAAGA,EAAIyqC,EAAOzqC,GAAK,EAC9B,GAAIwhB,EAAKM,YAAY9hB,EAAI,GACvB,GAAIwhB,EAAKM,YAAY9hB,EAAI,GAAGooC,KAAM,CAChC,IAAIG,EAAQ/mB,EAAKK,YAAY7hB,GAAGga,WAAWwnB,YAAYzpC,SACnDywC,EAAQhnB,EAAKK,YAAY7hB,EAAI,GAAGga,WAAWwnB,YAAYzpC,SAC3D0J,EAAc,EAAJzB,GAASuoC,EAAM5zB,EACzBlT,EAAc,EAAJzB,EAAQ,GAAKuoC,EAAM3zB,EAC7BnT,EAAc,EAAJzB,EAAQ,GAAKwoC,EAAM7zB,EAC7BlT,EAAc,EAAJzB,EAAQ,GAAKwoC,EAAM5zB,EAC7BgqB,EAAW,EAAJ5+B,GAAS,IAChB4+B,EAAW,EAAJ5+B,EAAQ,GAAK,IACpB4+B,EAAW,EAAJ5+B,EAAQ,GAAK,IACpB4+B,EAAW,EAAJ5+B,EAAQ,GAAK,IACpB4+B,EAAW,EAAJ5+B,EAAQ,GAAK,IACpB4+B,EAAW,EAAJ5+B,EAAQ,GAAK,QACf,CACDuoC,EAAQ/mB,EAAKK,YAAY7hB,GAAGga,WAAWwnB,YAAYzpC,SACnDywC,EAAQhnB,EAAKK,YAAY7hB,EAAI,GAAGga,WAAWwnB,YAAYzpC,SAD3D,IAEI0wC,EAAUjnB,EAAKM,YAAY9hB,EAAI,GAAG67B,UAClC6M,EAAUlnB,EAAKM,YAAY9hB,EAAI,GAAG67B,UACtCp6B,EAAc,EAAJzB,GAASuoC,EAAM5zB,EACzBlT,EAAc,EAAJzB,EAAQ,GAAKuoC,EAAM3zB,EAC7BnT,EAAc,EAAJzB,EAAQ,GAAKwoC,EAAM7zB,EAC7BlT,EAAc,EAAJzB,EAAQ,GAAKwoC,EAAM5zB,EAC7BgqB,EAAW,EAAJ5+B,GAASyoC,EAAQ/xB,EACxBkoB,EAAW,EAAJ5+B,EAAQ,GAAKyoC,EAAQvoC,EAC5B0+B,EAAW,EAAJ5+B,EAAQ,GAAKyoC,EAAQ1zB,EAC5B6pB,EAAW,EAAJ5+B,EAAQ,GAAK0oC,EAAQhyB,EAC5BkoB,EAAW,EAAJ5+B,EAAQ,GAAK0oC,EAAQxoC,EAC5B0+B,EAAW,EAAJ5+B,EAAQ,GAAK0oC,EAAQ3zB,EAIlCyM,EAAK7nB,MAAMkjB,WAAW9kB,SAASglB,aAAc,EAC7CyE,EAAK7nB,MAAMkjB,WAAWpc,MAAMsc,aAAc,GAM5CyE,EAAK0E,aAAe,WAElB,IADA,IAAI9sB,EAAQooB,EAAK6E,MAAMjtB,QACd4G,EAAI,EAAGA,EAAI5G,EAAM8E,OAAQ8B,IAAK,CACrC,IAAI0qC,EAAWlpB,EAAKxnB,MAAM2mC,QAAQvnC,EAAM4G,GAAGzD,SACLZ,GAAlC+uC,EAAS1wB,WAAW6nB,aAGnB6I,EAAS1wB,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQzhB,SAIpDqnC,EAAS1wB,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQgd,QAAS,EAF5D4I,EAAS1wB,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQgd,QAAS,GAKhE4I,EAAS1wB,WAAW6nB,WAAW9pC,SAAS4c,EACtC+1B,EAAS1wB,WAAWrZ,KAAO+pC,EAAS1wB,WAAWwnB,YAAYzpC,SAAS4c,EACtE+1B,EAAS1wB,WAAW6nB,WAAW9pC,SAAS6c,EACtC81B,EAAS1wB,WAAWwnB,YAAYzpC,SAAS6c,IAO/C4M,EAAKyE,YAAc,WACjB,GAA2B,UAAvBzE,EAAKD,QAAQG,OACfF,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC1BA,EAAK2d,aACP3d,EAAK2d,WAAWwnB,YAAYzpC,SAAS4c,EAAI6M,EAAK6E,MAAMud,gBAClDvnC,EAAKE,IACLoY,EACFtY,EAAK2d,WAAWwnB,YAAYzpC,SAAS6c,EAAI4M,EAAK6E,MAAMud,gBAClDvnC,EAAKE,IACLqY,KAGD4M,EAAK9a,QACR8a,EAAK6E,MAAMskB,YAER,GAA2B,MAAvBnpB,EAAKD,QAAQG,OAAgB,CAEtC,IADA,IAAItoB,EAAQooB,EAAK6E,MAAMjtB,QACd4G,EAAI,EAAGA,EAAI5G,EAAM8E,OAAQ8B,IAAK,CACrC5G,EAAM4G,GAAG2U,EAAIvW,KAAKyC,KACf2gB,EAAKmB,YACNvkB,KAAKwC,IAAI4gB,EAAKmB,YAAavpB,EAAM4G,GAAG2U,IAEtCvb,EAAM4G,GAAG4U,EAAIxW,KAAKyC,KACf2gB,EAAKoB,aACNxkB,KAAKwC,IAAI4gB,EAAKoB,aAAcxpB,EAAM4G,GAAG4U,IAEvC,IAAI81B,EAAWlpB,EAAKxnB,MAAM2mC,QAAQvnC,EAAM4G,GAAGzD,IACvCmuC,GAAYA,EAAS1wB,WAAWwnB,cAC7BkJ,EAASzJ,SAIZyJ,EAAS3J,GAAK2J,EAAS/1B,EACvB+1B,EAAS1wB,WAAWwnB,YAAY33B,SAAS,GAAGm1B,SAAU,IAJtD0L,EAAS3J,GAAK,KACd2J,EAAS1wB,WAAWwnB,YAAY33B,SAAS,GAAGm1B,SAAU,GAKnD0L,EAASxJ,QAGZwJ,EAAS1J,GAAK0J,EAAS91B,EAFvB81B,EAAS1J,GAAK,KAIhB0J,EAAS1wB,WAAWwnB,YAAYzpC,SAAS4c,EAAIvb,EAAM4G,GAAG2U,EACtD+1B,EAAS1wB,WAAWwnB,YAAYzpC,SAAS6c,EAAIxb,EAAM4G,GAAG4U,GAI1D,IAAS5U,EAAI,EAAGA,EAAIwhB,EAAK4B,UAAUllB,OAAQ8B,IACzCwhB,EAAK4B,UAAUpjB,GAAG+gC,GAChBvf,EAAKgC,aAAa7O,EAAkC,EAA9B6M,EAAKgC,aAAazQ,KAAKpS,KAC/C6gB,EAAK4B,UAAUpjB,GAAGghC,GAChBxf,EAAKgC,aAAa5O,EAAkC,EAA9B4M,EAAKgC,aAAazQ,KAAKpS,KAAWX,EAGvDwhB,EAAK9a,QACR8a,EAAK6E,MAAMQ,SAQjBrF,EAAKwE,aAAe,WAClBxE,EAAKuC,SAASjY,OAAO6I,GACnB6M,EAAKuC,SAASoF,OAAOpxB,SAAS4c,EAC9BvW,KAAKyC,KACF2gB,EAAKmB,YACNvkB,KAAKwC,IAAI4gB,EAAKmB,YAAanB,EAAKuC,SAASoF,OAAOpxB,SAAS4c,IAE7D6M,EAAKuC,SAASoF,OAAOpxB,SAAS4c,GAC5B6M,EAAKuC,SAASoF,OAAOpxB,SAAS4c,EAC9BvW,KAAKyC,KACF2gB,EAAKmB,YACNvkB,KAAKwC,IAAI4gB,EAAKmB,YAAanB,EAAKuC,SAASoF,OAAOpxB,SAAS4c,IAE7D6M,EAAKuC,SAASjY,OAAO8I,GACnB4M,EAAKuC,SAASoF,OAAOpxB,SAAS6c,EAC9BxW,KAAKyC,KACF2gB,EAAKoB,aACNxkB,KAAKwC,IAAI4gB,EAAKoB,aAAcpB,EAAKuC,SAASoF,OAAOpxB,SAAS6c,IAE9D4M,EAAKuC,SAASoF,OAAOpxB,SAAS6c,GAC5B4M,EAAKuC,SAASoF,OAAOpxB,SAAS6c,EAC9BxW,KAAKyC,KACF2gB,EAAKoB,aACNxkB,KAAKwC,IAAI4gB,EAAKoB,aAAcpB,EAAKuC,SAASoF,OAAOpxB,SAAS6c,IAE9D4M,EAAK4d,gBAAgB5d,EAAKmE,UAM5BnE,EAAKnb,YAAc,SAASrM,GAE1BA,EAAMosB,YAAY,SAAS/pB,GACzB,IAAIuuC,EAAUppB,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IACjCquC,EASHppB,EAAKqpB,WAAWD,EAASvuC,IARpBmlB,EAAK+iB,aACR/iB,EAAK+iB,WAAa,IAEpB/iB,EAAK+iB,WAAWrnC,KAAKb,EAAKE,IAC1BilB,EAAKllB,QAAQD,GACI,EACjBmlB,EAAK2B,SAAW3B,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,OAK5CvC,EAAM8wC,YAAY,SAASC,GACpBvpB,EAAKxnB,MAAMgxC,QAAQD,EAAKlvC,OAAQkvC,EAAKhvC,OACxCylB,EAAKlkB,QACHkkB,EAAKxnB,MAAM2mC,QAAQoK,EAAKlvC,QACxB2lB,EAAKxnB,MAAM2mC,QAAQoK,EAAKhvC,SAK9BylB,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAChBrC,EAAM2mC,QAAQtkC,EAAKE,KAE/BilB,EAAK6f,WAAWhlC,KAIpBmlB,EAAK6E,MAAMhC,MAAM,GACjB7C,EAAK6E,MAAMG,OAKThF,EAAKiF,cAAe,EAIlBjF,EAAK+iB,YACP/iB,EAAKra,iBAAiBqa,EAAK+iB,YAAY,IAO3C/iB,EAAK7a,gBAAkB,SAASlF,GAC9B+f,EAAKxnB,MAAMosB,YAAY,SAAS/pB,GAC9B,IAAI6jC,EAAMz+B,EAAUpF,EAAKE,IACrB2jC,IACF1e,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAAIoY,EAAIurB,EAAI,GACpC1e,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAAIqY,EAAIsrB,EAAI,GACpC1e,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAAI0kC,QAAU5kC,EAAK4kC,QAC3Czf,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAAI2kC,QAAU7kC,EAAK6kC,QACvC7kC,EAAK4kC,UACPzf,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAAIwkC,GAAKb,EAAI,IAEnC7jC,EAAK6kC,UACP1f,EAAKxnB,MAAM2mC,QAAQtkC,EAAKE,IAAIykC,GAAKd,EAAI,QAS7C1e,EAAKqpB,WAAa,SAASxuC,EAAM8lC,GAC/B,GAAIA,EAAQpvB,KAAM,CAQhB,GAPI1W,EAAK0W,KAAKtS,OAAS0hC,EAAQpvB,KAAKtS,QAClCpE,EAAK0W,KAAKtS,MAAQ0hC,EAAQpvB,KAAKtS,MAC/BpE,EAAK2d,WAAWvZ,MAAQpE,EAAK0W,KAAKtS,MAClCpE,EAAK2d,WAAWwnB,YAAY9iB,SAASje,MAAM2U,IACzC,IAAIyF,EAAMkD,MAAM1hB,EAAK0W,KAAKtS,SAG1B0hC,EAAQpvB,KAAKpS,MAAQwhC,EAAQpvB,KAAKpS,KAAO,EAAG,CAC9CtE,EAAK0W,KAAKpS,KAAOwhC,EAAQpvB,KAAKpS,KAC9BtE,EAAK2d,WAAWrZ,KAAOwhC,EAAQpvB,KAAKpS,KACpCtE,EAAK2d,WAAWwnB,YAAY7qC,MAAMye,IAChC+sB,EAAQpvB,KAAKpS,KACbwhC,EAAQpvB,KAAKpS,KACb,GAEF,IAAIgkC,EAAQ,EAAItjB,EAAIb,eAAiB2hB,EAAQpvB,KAAKpS,KAClDtE,EAAK2d,WAAWwnB,YAAY33B,SAAS,GAAGlT,MAAMye,IAAIuvB,EAAOA,EAAO,GAE9DxC,EAAQpvB,KAAKxP,QACflH,EAAK0W,KAAKxP,MAAQ4+B,EAAQpvB,KAAKxP,MAC/BlH,EAAK2d,WAAWzW,MAAQlH,EAAK0W,KAAKxP,MAClClH,EAAK2d,WAAW6nB,WAAWh4B,SAAS,GAAGib,QAAQmmB,WAAW,GAAGC,UAC3D7uC,EAAK0W,KAAKxP,OAEV4+B,EAAQpvB,KAAKhS,QACf1E,EAAK0W,KAAKhS,MAAQohC,EAAQpvB,KAAKhS,MAC/B1E,EAAK2d,WAAWjZ,MAAQ1E,EAAK0W,KAAKhS,MAClCygB,EAAKgoB,aAAantC,EAAMA,EAAK0W,KAAKhS,a","file":"static/js/main.b5900637.chunk.js","sourcesContent":["import * as scale from \"d3-scale\";\r\n\r\n// Argo-lite Graph Sharing backend Strapi Server:\r\nexport const BACKEND_URL = \"https://argo-share.herokuapp.com\"; // for production\r\n// export const BACKEND_URL = \"https://sleepy-brushlands-57948.herokuapp.com\"; // for free heroku\r\n// export const BACKEND_URL = \"http://localhost:1337\"; // for local strapi development\r\n\r\nexport const SCALE_LINEAR = \"Linear Scale\";\r\nexport const SCALE_LOG = \"Log Scale\";\r\n\r\nexport const scales = {\r\n  [SCALE_LINEAR]: scale.scaleLinear,\r\n  [SCALE_LOG]: scale.scaleLog\r\n};\r\n\r\nexport const LOAD_USER_CONFIG = \"load-user-config\";\r\nexport const LOADED_USER_CONFIG = \"loaded-user-config\";\r\nexport const SAVE_USER_CONFIG = \"save-user-config\";\r\nexport const SAVED_USER_CONFIG = \"saved-user-config\";\r\n\r\nexport const FETCH_WORKSPACE_PROJECTS = \"fetch-workspace-projects\";\r\nexport const FETCHED_WORKSPACE_PROJECTS = \"fetched-workspace-projects\";\r\nexport const MENU_NEW_PROJECT = \"menu-new-project\";\r\nexport const CREATE_NEW_PROJECT = \"create-new-project\";\r\nexport const CREATED_NEW_PROJECT = \"created-new-project\";\r\n\r\nexport const DELETE_FILE = \"delete-file\";\r\nexport const RENAME_FILE = \"rename-file\";\r\n\r\nexport const LOAD_GRAPH_JSON = \"load-graph-json\";\r\nexport const LOAD_GRAPH_SQLITE = \"load-graph-sqlite\";\r\nexport const LOADED_GRAPH_JSON = \"loaded-graph-json\";\r\nexport const LOAD_TOAST_KEY = \"load-toast-key\";\r\n\r\nexport const SAVE_GRAPH_JSON = \"save-graph-json\";\r\nexport const SAVE_GRAPH_SQLITE = \"save-graph-sqlite\";\r\nexport const SAVED_GRAPH_JSON = \"saved-graph-json\";\r\nexport const SAVE_TOAST_KEY = \"save-const-key\";\r\n\r\nexport const MENU_LOAD = \"menu-load\";\r\nexport const MENU_IMPORT_CSV = \"menu-import-csv\";\r\nexport const MENU_SAVE_GRAPH_STATE = \"menu-save-graph-state\";\r\nexport const MENU_SAVE_GRAPH_STATE_TO_PROJECT =\r\n  \"menu-save-graph-state-to-project\";\r\nexport const MENU_SAVE_GRAPH_SQLITE = \"menu-save-graph-sqlite\";\r\nexport const SAVE_GRAPH_STATE = \"save-graph-state\";\r\nexport const SAVED_GRAPH_STATE = \"saved-graph-state\";\r\nexport const SAVE_GRAPH_STATE_TO_PROJECT = \"save-graph-state-to-project\";\r\nexport const SAVED_GRAPH_STATE_TO_PROJECT = \"saved-graph-state-to-project\";\r\nexport const LOAD_GRAPH_STATE = \"load-graph-state\";\r\nexport const LOADED_GRAPH_STATE = \"loaded-graph-state\";\r\n\r\nexport const SHOW_ITEM_IN_FOLDER = \"show-item-in-folder\";\r\nexport const SHOW_WORKSPACE_FOLDER = 'show-workspace-folder';\r\nexport const CHANGE_WORKSPACE_FOLDER = 'change-workspace-folder';\r\nexport const CHANGED_WORKSPACE_FOLDER = 'changed-workspace-folder';\r\n\r\nexport const CHOOSE_EDGE_FILE = \"choose-edge-file\";\r\nexport const CHOSEN_EDGE_FILE = \"chosen-edge-file\";\r\nexport const CHOOSE_NODE_FILE = \"choose-node-file\";\r\nexport const PEAKED_NODE_FILE = \"peaked-node-file\";\r\nexport const CHOSEN_NODE_FILE = \"chosen-node-file\";\r\n\r\nexport const CHOOSE_GRAPH_FILE = \"choose-graph-file\";\r\nexport const CHOSEN_GRAPH_FILE = \"chosen-graph-file\";\r\nexport const CHOOSE_STATE_FILE = \"choose-state-file\";\r\nexport const CHOSEN_STATE_FILE = \"chosen-state-file\";\r\n\r\nexport const NODE_AND_EDGE_FILE = \"both nodes and edges file\";\r\nexport const ONLY_EDGE_FILE = \"only edges file\";\r\n\r\nexport const GRAPH_AND_STATE_FILE = \"both graph and snapshot file\";\r\nexport const ONLY_GRAPH_FILE = \"only graph file\";\r\nexport const IMPORT_GRAPH = \"import-graph\";\r\nexport const IMPORTED_GRAPH = \"imported-graph\";\r\nexport const OPEN_GRAPH = \"open-graph\";\r\nexport const OPENED_GRAPH = \"opened-graph\";\r\n\r\nexport const SEARCH_REQUEST = \"search-request\";\r\nexport const SEARCH_RESPONSE = \"search-response\";\r\n\r\nexport const ADD_NODES = \"add-nodes\";\r\nexport const ADD_SELECT_NODE = \"add-select-node\";\r\nexport const ADD_NODE = \"add-node\";\r\nexport const GET_NEIGHBORS = \"get-neighbors\";\r\n","import { Position, Toaster } from \"@blueprintjs/core\";\r\n\r\nexport const toaster = Toaster.create({\r\n  position: Position.TOP\r\n});\r\n\r\nexport default toaster;\r\n","import { runInAction, toJS } from 'mobx';\r\nimport { Intent } from '@blueprintjs/core';\r\nimport { demapify } from 'es6-mapify';\r\n\r\nimport appState from '../stores/index';\r\nimport {\r\n  ADD_NODE,\r\n  ADD_NODES,\r\n  ADD_SELECT_NODE,\r\n  CHOOSE_EDGE_FILE,\r\n  CHOOSE_GRAPH_FILE,\r\n  CHOOSE_NODE_FILE,\r\n  CHOOSE_STATE_FILE,\r\n  CHOSEN_EDGE_FILE,\r\n  CHOSEN_GRAPH_FILE,\r\n  CHOSEN_NODE_FILE,\r\n  CHOSEN_STATE_FILE,\r\n  GET_NEIGHBORS,\r\n  IMPORT_GRAPH,\r\n  IMPORTED_GRAPH,\r\n  LOAD_GRAPH_SQLITE,\r\n  LOADED_GRAPH_SQLITE,\r\n  LOADED_GRAPH_STATE,\r\n  MENU_IMPORT_CSV,\r\n  MENU_LOAD,\r\n  MENU_NEW_PROJECT,\r\n  MENU_SAVE_GRAPH_SQLITE,\r\n  MENU_SAVE_GRAPH_STATE,\r\n  CREATE_NEW_PROJECT,\r\n  CREATED_NEW_PROJECT,\r\n  OPEN_GRAPH,\r\n  OPENED_GRAPH,\r\n  FETCH_WORKSPACE_PROJECTS,\r\n  FETCHED_WORKSPACE_PROJECTS,\r\n  SAVE_GRAPH_SQLITE,\r\n  SAVE_GRAPH_STATE,\r\n  SAVED_GRAPH_JSON,\r\n  SAVED_GRAPH_STATE,\r\n  SEARCH_REQUEST,\r\n  SEARCH_RESPONSE,\r\n  SHOW_ITEM_IN_FOLDER,\r\n  SAVED_GRAPH_STATE_TO_PROJECT,\r\n  MENU_SAVE_GRAPH_STATE_TO_PROJECT,\r\n  SAVE_GRAPH_STATE_TO_PROJECT,\r\n  DELETE_FILE,\r\n  RENAME_FILE,\r\n  SHOW_WORKSPACE_FOLDER,\r\n  LOAD_USER_CONFIG,\r\n  LOADED_USER_CONFIG,\r\n  SAVED_USER_CONFIG,\r\n  SAVE_USER_CONFIG,\r\n  CHANGE_WORKSPACE_FOLDER,\r\n  CHANGED_WORKSPACE_FOLDER,\r\n} from '../constants/index';\r\nimport { toaster } from '../notifications/client';\r\n\r\nimport createGraph from 'ngraph.graph';\r\nimport pageRank from 'ngraph.pagerank';\r\nimport parse from \"csv-parse/lib/sync\";\r\n// import worker from './worker';\r\n\r\n// TODO: Register web worker used by Argo-lite.\r\n\r\n// Argo-lite replacement for electron ipc.\r\nconst ipcRenderer = {\r\n  send: (eventString) => {\r\n    console.log(`ipcRenderer.send(${eventString}, ...)`);\r\n  }\r\n}\r\n\r\nexport default function registerIPC() {\r\n  // ipcRenderer.on(LOADED_USER_CONFIG, (event, loadedObject) => {\r\n  //   // Overwrite PreferenceStore values according to user config values,\r\n  //   // if present.\r\n  //   if (loadedObject.darkMode) {\r\n  //     appState.preferences.darkMode = true;\r\n  //   }\r\n  //   if (loadedObject.workspace && loadedObject.workspace != '') {\r\n  //     appState.preferences.workspacePath = loadedObject.workspace;\r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_USER_CONFIG, (event) => {\r\n  //   toaster.show({\r\n  //     message: \"User configuration saved\",\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_SQLITE, (event, loadedObject) => {\r\n  //   runInAction('load saved graph', () => {\r\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\r\n  //     appState.graph.metadata = loadedObject.metadata;\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(OPENED_GRAPH, (event, loadedObject) => {\r\n  //   runInAction('load saved graph and state', () => {\r\n  //     console.log(loadedObject);\r\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\r\n  //     appState.graph.metadata = loadedObject.metadata;\r\n  //     if (loadedObject.state) {\r\n  //       appState.graph.loadImmediateStates(loadedObject.state);\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, loadedObject) => {\r\n  //   appState.graph.loadImmediateStates(loadedObject);\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_STATE, (event, savedFilePath) => {\r\n  //   toaster.show({\r\n  //     message: `Saved graph snapshot file to ${savedFilePath}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //     action: {\r\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\r\n  //       text: 'Show in Folder',\r\n  //     },\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_STATE_TO_PROJECT, (event, snapshotName) => {\r\n  //   toaster.show({\r\n  //     message: `Saved to snapshot ${snapshotName}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_JSON, (event, savedFilePath) => {\r\n  //   toaster.show({\r\n  //     message: `Saved graph file to ${savedFilePath}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //     action: {\r\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\r\n  //       text: 'Show in Folder',\r\n  //     },\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_NODE_FILE, (event, path) => {\r\n  //   appState.import.importConfig.nodeFile.path = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_EDGE_FILE, (event, path) => {\r\n  //   appState.import.importConfig.edgeFile.path = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_GRAPH_FILE, (event, path) => {\r\n  //   appState.import.graphFile = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_STATE_FILE, (event, path) => {\r\n  //   appState.import.stateFile = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(IMPORTED_GRAPH, (event) => {\r\n  //   appState.import.loading = false;\r\n  //   appState.import.dialogOpen = false;\r\n  //   appState.project.isFetching = true;\r\n  //   fetchWorkspaceProjects();\r\n  // });\r\n\r\n  // ipcRenderer.on(ADD_NODES, (event, toAdd) => {\r\n  //   runInAction('add nodes and edges to graph', () => {\r\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\r\n  //       toAdd.nodes,\r\n  //     );\r\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\r\n  //       toAdd.edges,\r\n  //     );\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(ADD_SELECT_NODE, (event, toAdd) => {\r\n  //   runInAction('add nodes and edges to graph', () => {\r\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\r\n  //       toAdd.nodes,\r\n  //     );\r\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\r\n  //       toAdd.edges,\r\n  //     );\r\n  //   });\r\n\r\n  //   appState.graph.frame.setLastNode(toAdd.nodes[0].node_id);\r\n  //   appState.graph.frame.dragLastNode();\r\n  // });\r\n\r\n  // ipcRenderer.on(SEARCH_RESPONSE, (event, candidates) => {\r\n  //   var cands = JSON.parse(candidates);\r\n  //   var ckeys = cands.map(x => x.node_id);\r\n  //   appState.search.allCands = Object.values(cands);\r\n  //   appState.search.pageNum = 0;\r\n  //   appState.search.nPerPage = 10;\r\n  //   appState.search.numCandidates = appState.search.allCands.length;\r\n  //   appState.search.maxPage = parseInt(\r\n  //     appState.search.allCands.length / appState.search.nPerPage,\r\n  //   );\r\n  //   appState.search.pages = [...Array(appState.search.maxPage).keys()];\r\n  //   appState.search.candidates = appState.search.allCands.slice(0, 10);\r\n  //   appState.search.panelOpen = true;\r\n  //   if (appState.graph.frame) {\r\n  //     appState.graph.frame.highlightNodeIds(ckeys, true);\r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, stateStr) => {\r\n  //   appState.graph.loadImmediateStates(stateStr);\r\n  // });\r\n\r\n  // ipcRenderer.on(CREATED_NEW_PROJECT, () => {\r\n  //   fetchWorkspaceProjects();\r\n  // });\r\n\r\n  // ipcRenderer.on(FETCHED_WORKSPACE_PROJECTS, (event, projects) => {\r\n  //   appState.project.isFetching = false;\r\n  //   appState.project.projects = projects;\r\n  //   // Update mobx state on projects, useful for updating the components after deleting/renaming etc.\r\n  //   if (appState.project.currentProject !== null) {\r\n  //     // There is a project currently selected (showing in a ProjectDetailDialog etc.)\r\n  //     // This fetch needs to update the dialog also\r\n  //     const temp = appState.project.projects.filter((project) => {\r\n  //       return project.projectPath === appState.project.currentProject.projectPath;\r\n  //     });\r\n  //     if (temp.length === 1) {\r\n  //       appState.project.currentProject = temp[0];\r\n  //     } else {\r\n  //       appState.project.currentProject = null;\r\n  //     }\r\n      \r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(CHANGED_WORKSPACE_FOLDER, (events, newWorkspaceDirectory) => {\r\n  //   appState.preferences.workspacePath = newWorkspaceDirectory;\r\n  //   appState.preferences.saveUserConfig();\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_NEW_PROJECT, () => {\r\n  //   appState.project.isNewProjectDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_LOAD, () => {\r\n  //   appState.preferences.openDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_IMPORT_CSV, () => {\r\n  //   appState.import.dialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE, () => {\r\n  //   // Original implementation for opening a traditional system-level save file dialog\r\n  //   // ipcRenderer.send(SAVE_GRAPH_STATE, appState.graph.saveImmediateStates());\r\n    \r\n  //   // New implementation opening a dialog that saves snapshot to project\r\n  //   appState.project.isSaveSnapshotDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE_TO_PROJECT, () => {\r\n  //   requestSaveSnapshot();\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_SQLITE, requestSaveSQLite);\r\n}\r\n\r\nexport function requestLoadSQLite() {\r\n  ipcRenderer.send(LOAD_GRAPH_SQLITE);\r\n}\r\n\r\nexport function addNode(node_id) {\r\n  ipcRenderer.send(ADD_NODE, node_id);\r\n}\r\n\r\nexport function requestNeighbors(\r\n  node_id,\r\n  attr = 'degree',\r\n  num = '10',\r\n  order = 'desc',\r\n) {\r\n  ipcRenderer.send(GET_NEIGHBORS, node_id, attr, num, order);\r\n}\r\n\r\nfunction requestSaveSQLite() {\r\n  ipcRenderer.send(\r\n    SAVE_GRAPH_SQLITE,\r\n    JSON.stringify({\r\n      graph: toJS(appState.graph.rawGraph),\r\n      metadata: toJS(appState.graph.metadata),\r\n      nodes: toJS(appState.graph.nodes),\r\n      overrides: toJS(demapify(appState.graph.overrides)),\r\n      nodePositions: appState.graph.frame.getPositions(),\r\n    }),\r\n  );\r\n}\r\n\r\nexport function requestChooseNodeFile(hasHeader) {\r\n  ipcRenderer.send(CHOOSE_NODE_FILE, hasHeader);\r\n}\r\n\r\nexport function requestChooseEdgeFile(hasHeader) {\r\n  ipcRenderer.send(CHOOSE_EDGE_FILE, hasHeader);\r\n}\r\n\r\nexport function requestChooseGraphFile() {\r\n  ipcRenderer.send(CHOOSE_GRAPH_FILE);\r\n}\r\n\r\nexport function requestChooseStateFile() {\r\n  ipcRenderer.send(CHOOSE_STATE_FILE);\r\n}\r\n\r\nexport function requestOpen() {\r\n  ipcRenderer.send(\r\n    OPEN_GRAPH,\r\n    appState.import.graphFile,\r\n    appState.import.stateFile,\r\n  );\r\n}\r\n\r\n// Request to delete a file specified at filePath\r\nexport function requestDelete(filePath) {\r\n  ipcRenderer.send(DELETE_FILE, filePath);\r\n}\r\n\r\n/**\r\n * Request to rename a file specified at filePath\r\n * @param filePath where the file to be renamed is located\r\n * @param newName new file name with extension\r\n */\r\nexport function requestRename(filePath, newName) {\r\n  ipcRenderer.send(RENAME_FILE, filePath, newName);\r\n}\r\n\r\nexport function requestSaveSnapshot(snapshotName) {\r\n  if (!snapshotName) {\r\n    // Default: Use the currently opened snapshot name (if no snapshot opened, the default name in the ProjectStore will be used)\r\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, appState.project.currentSnapshotName);\r\n  } else {\r\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, snapshotName);\r\n  }\r\n}\r\n\r\nexport function requestImportGraphFromCSV(hasNodeFile, delimiter, newProjectName) {\r\n  if (!newProjectName) {\r\n    newProjectName = 'Test Project';\r\n  }\r\n  appState.import.loading = true;\r\n  const importConfig = {\r\n    hasNodeFile,\r\n    nodes: {\r\n      path: appState.import.importConfig.nodeFile.path,\r\n      hasColumns: appState.import.importConfig.nodeFile.hasColumns,\r\n      columns: toJS(appState.import.importConfig.nodeFile.columns),\r\n      mapping: toJS(appState.import.importConfig.nodeFile.mapping),\r\n    },\r\n    edges: {\r\n      path: appState.import.importConfig.edgeFile.path,\r\n      hasColumns: appState.import.importConfig.edgeFile.hasColumns,\r\n      columns: toJS(appState.import.importConfig.edgeFile.columns),\r\n      mapping: toJS(appState.import.importConfig.edgeFile.mapping),\r\n      createMissing: appState.import.importConfig.edgeFile.createMissing,\r\n    },\r\n    delimiter,\r\n    newProjectName\r\n  };\r\n  ipcRenderer.send(IMPORT_GRAPH, importConfig);\r\n\r\n  // TODO: Potentially separate this out to web worker.\r\n  importGraphFromCSV(importConfig).then(graph => {\r\n    runInAction('load imported graph', () => {\r\n      appState.graph.rawGraph = graph.rawGraph;\r\n      appState.graph.metadata = graph.metadata;\r\n    });\r\n    // Reinitialize global configs\r\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\r\n    appState.graph.overrides = new Map();\r\n    appState.import.loading = false;\r\n    appState.import.dialogOpen = false;\r\n  });\r\n}\r\n\r\nasync function readCSV(fileObject, hasHeader, delimiter) {\r\n  const file = fileObject;\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = () => {\r\n      const content = reader.result;\r\n      if (hasHeader) {\r\n        resolve(parse(content, {\r\n          comment: \"#\",\r\n          trim: true,\r\n          auto_parse: true,\r\n          skip_empty_lines: true,\r\n          columns: hasHeader,\r\n          delimiter\r\n        }));\r\n      }\r\n      resolve(parse(content, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      }));\r\n    }\r\n  });\r\n  \r\n}\r\n\r\nasync function importGraphFromCSV(config) {\r\n  // Since the CSV lib we use uses int index when there's not header/column names specified\r\n  // but the frontend selector always convert int to string values, we need to\r\n  // manually convert the user-selected fromId and toId values back to int.\r\n  // Note that this should only be done when there's no header provided on the CSV (hasColumns == false).\r\n  const fromId = config.nodes.hasColumns ? config.edges.mapping.fromId : parseInt(config.edges.mapping.fromId);\r\n  const toId = config.nodes.hasColumns ? config.edges.mapping.toId : parseInt(config.edges.mapping.toId);\r\n\r\n  // Create temporary data structures.\r\n  let nodesArr = [];\r\n  const graph = createGraph();\r\n  const degreeDict = {};\r\n  if (config.hasNodeFile) {\r\n    nodesArr = await readCSV(appState.import.selectedNodeFileFromInput, config.nodes.hasColumns, config.delimiter);\r\n    nodesArr.forEach(node => graph.addNode(node[config.nodes.mapping.id].toString(),\r\n      { id: node[config.nodes.mapping.id].toString(), degree: 0, ...node }));\r\n    nodesArr =\r\n      nodesArr.map(\r\n        n => ({ ...n, id: n[config.nodes.mapping.id].toString(), degree: 0, pagerank: 0 }));\r\n    nodesArr.forEach(n => degreeDict[n.id] = 0);\r\n  }\r\n  const edges = await readCSV(appState.import.selectedEdgeFileFromInput, config.edges.hasColumns, config.delimiter);\r\n  if (config.edges.createMissing) {\r\n    edges.forEach((it) => {\r\n      const from = it[fromId].toString();\r\n      const to = it[toId].toString();\r\n      if (!graph.hasNode(from)) {\r\n        graph.addNode(from, { id: from, degree: 0 });\r\n        nodesArr.push({ id: from, degree: 0, pagerank: 0 });\r\n        degreeDict[from] = 0;\r\n      }\r\n      if (!graph.hasNode(to)) {\r\n        graph.addNode(to, { id: to, degree: 0 });\r\n        nodesArr.push({ id: to, degree: 0, pagerank: 0 });\r\n        degreeDict[to] = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  const edgesSet = new Set();\r\n  \r\n  const edgesArr = [];\r\n\r\n  const addEdge = (from, to) => {\r\n    const edgeKey = `${from}👉${to}`;\r\n    if (edgesSet.has(edgeKey)) {\r\n      return;\r\n    }\r\n    edgesSet.add(edgeKey);\r\n    graph.addLink(from, to);\r\n    degreeDict[to] += 1;\r\n    edgesArr.push({\r\n      source_id: from,\r\n      target_id: to,\r\n    });\r\n  };\r\n  \r\n  edges.forEach(it => {\r\n    const from = it[fromId].toString();\r\n    const to = it[toId].toString();\r\n    // Argo currently works with undirected graph\r\n    addEdge(from, to);\r\n    addEdge(to, from);\r\n  });\r\n\r\n  const rank = pageRank(graph);\r\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\r\n  return {\r\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\r\n    metadata: {\r\n      snapshotName: 'Untitled Graph',\r\n      fullNodes: nodesArr.length,\r\n      fullEdges: Math.floor(edgesArr.length / 2), // Counting undirected edges\r\n      nodeProperties: Object.keys(nodesArr[0]),\r\n      nodeComputed: ['pagerank', 'degree'],\r\n      edgeProperties: ['source_id', 'target_id'],\r\n    },\r\n  }\r\n}\r\n\r\nexport function runSearch(searchStr) {\r\n  ipcRenderer.send(SEARCH_REQUEST, searchStr, appState.graph.searchOrder);\r\n}\r\n\r\nexport function fetchWorkspaceProjects() {\r\n  ipcRenderer.send(FETCH_WORKSPACE_PROJECTS);\r\n}\r\n\r\nexport function requestCreateNewProject(projectMetadata) {\r\n  ipcRenderer.send(CREATE_NEW_PROJECT, projectMetadata);\r\n}\r\n\r\nexport function requestOpenWorkspaceFolder() {\r\n  ipcRenderer.send(SHOW_WORKSPACE_FOLDER);\r\n}\r\n\r\nexport function requestLoadUserConfig() {\r\n  ipcRenderer.send(LOAD_USER_CONFIG);\r\n}\r\n\r\nexport function requestSaveUserConfig(userConfig) {\r\n  ipcRenderer.send(SAVE_USER_CONFIG, userConfig);\r\n}\r\n\r\nexport function requestChangeWorkspace() {\r\n  ipcRenderer.send(CHANGE_WORKSPACE_FOLDER);\r\n}","import { observable, action } from \"mobx\";\r\nimport { requestLoadUserConfig, requestSaveUserConfig } from \"../ipc/client\";\r\n\r\nexport default class PreferencesStore {\r\n  @observable dialogOpen = false;\r\n\r\n  @observable openDialogOpen = false;\r\n  @observable openSnapshotDialogOpen = false;\r\n  @observable shareDialogOpen = false;\r\n  @observable statisticsDialogOpen = false;\r\n  @observable isRenderOptionsCardHidden = false;\r\n\r\n  // The following fields are asynchronously loaded.\r\n  // Any writes to these fields through saveUserConfig\r\n  // won't be active until the app exits and starts\r\n  // next time.\r\n\r\n  @observable darkMode = true;\r\n\r\n  @observable workspacePath = '';\r\n\r\n  // This is called at the beginning of the app.\r\n  loadUserConfig() {\r\n    requestLoadUserConfig();\r\n  }\r\n\r\n  saveUserConfig() {\r\n    const userConfig = {\r\n      darkMode: this.darkMode,\r\n      workspace: this.workspacePath,\r\n    }\r\n\r\n    requestSaveUserConfig(userConfig);\r\n  }\r\n}\r\n","const jsnx = require('jsnetworkx');\r\nconst jsgraphs = require('js-graph-algorithms');\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the JSNetworkX library.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToJsnx(snapshot) {\r\n    const jsnxGraph = new jsnx.Graph();\r\n    jsnxGraph.addNodesFrom(snapshot.rawGraph.nodes.map(n => [n.id, n]));\r\n    jsnxGraph.addEdgesFrom(snapshot.rawGraph.edges.map(e => [e.source_id, e.target_id]));\r\n    return jsnxGraph;\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the ngraph library.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToNGraph(snapshot) {\r\n    return null;\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToJSGraph(snapshot) {\r\n    var idDict = {};\r\n    var i;\r\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\r\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\r\n    }\r\n    var g = new jsgraphs.Graph(snapshot.rawGraph.nodes.length);\r\n    snapshot.rawGraph.edges.forEach(e => {\r\n        g.addEdge(idDict[e.source_id], idDict[e.target_id]);\r\n    });\r\n    return new jsgraphs.ConnectedComponents(g);\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot to the GEXF format.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToGexf(snapshot) {\r\n    return null;\r\n}\r\n\r\n/**\r\n * Calculate the average clustering coefficient of the (undirected unweighted) graph.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function averageClusteringCoefficient(snapshot) {\r\n    const jsnxGraph = convertToJsnx(snapshot);\r\n    const result = jsnx.averageClustering(jsnxGraph);\r\n    console.log('Computing Clustering Coefficient');\r\n    return result;\r\n}\r\n\r\n/**\r\n * Calculate the number of connected components in a graph\r\n * @param {*} rawGraph the rawGraph inside appState\r\n */\r\nexport function connectedComponents(snapshot) {\r\n    var cc = convertToJSGraph(snapshot);\r\n    return cc.componentCount();\r\n}\r\n ","import { observable, computed, action, autorun } from \"mobx\";\r\nimport createGraph from \"ngraph.graph\";\r\nimport { scales } from \"../constants/index\";\r\nimport appState from \".\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { averageClusteringCoefficient, connectedComponents} from \"../services/AlgorithmUtils\";\r\n\r\nexport default class GraphStore {\r\n\r\n  initialGlobalConfig = {\r\n    nodes: {\r\n      colorBy: \"pagerank\",\r\n      color: {\r\n        scale: \"Linear Scale\",\r\n        from: \"#448AFF\",\r\n        to: \"#E91E63\"\r\n      },\r\n      sizeBy: \"pagerank\",\r\n      size: {\r\n        min: 2,\r\n        max: 10,\r\n        scale: \"Linear Scale\"\r\n      },\r\n      labelBy: \"node_id\",\r\n      shape: \"circle\",\r\n      labelSize: 1,\r\n      labelLength: 10\r\n    },\r\n  }\r\n\r\n  @observable\r\n  nodes = this.initialGlobalConfig.nodes;\r\n\r\n  // Updated by frame event\r\n  @observable selectedNodes = [];\r\n  // Updated by frame event. Not being listened, only used to save label visibility.\r\n  nodesShowingLabels = [];\r\n  // Used by autorun during snapshot loading.\r\n  @observable initialNodesShowingLabels = [];\r\n\r\n  @observable\r\n  overrideConfig = {\r\n    color: \"#000\",\r\n    size: 5,\r\n    label: \"\",\r\n    shape: \"circle\"\r\n  };\r\n\r\n  @observable\r\n  rawGraph = {\r\n    nodes: [],\r\n    edges: []\r\n  };\r\n\r\n  @observable\r\n  metadata = {\r\n    fullNodes: 0,\r\n    fullEdges: 0,\r\n    nodeProperties: [],\r\n    nodeComputed: [\"pagerank\", \"degree\"],\r\n    edgeProperties: [],\r\n    snapshotName: \"loading...\" // Optional: for display in Argo-lite only\r\n  };\r\n\r\n  // used for listing all the properties, either original or computed\r\n  @computed\r\n  get allPropertiesKeyList() {\r\n    return uniq([\r\n      ...this.metadata.nodeProperties,\r\n      ...this.metadata.nodeComputed\r\n    ]).filter(k => k !== 'id'); // since node_id is already present\r\n  }\r\n\r\n  @observable.ref frame = null;\r\n  @observable.ref positions = null;\r\n\r\n  @observable overrides = new Map();\r\n  @observable searchOrder = \"degree\";\r\n\r\n  hasGraphLoaded = false;\r\n\r\n  @computed\r\n  get hasGraph() {\r\n    if (this.rawGraph.nodes.length > 0) {\r\n      this.hasGraphLoaded = true;\r\n    }\r\n    return this.hasGraphLoaded;\r\n  }\r\n\r\n  @computed\r\n  get minMax() {\r\n    const ret = {};\r\n    for (const p of [\r\n      ...this.metadata.nodeProperties,\r\n      ...this.metadata.nodeComputed\r\n    ]) {\r\n      let min = Number.MAX_VALUE;\r\n      let max = Number.MIN_VALUE;\r\n\r\n      for (const n of this.rawGraph.nodes) {\r\n        min = Math.max(Math.min(min, n[p]), 0.0000001);\r\n        max = Math.max(max, n[p]);\r\n      }\r\n\r\n      ret[p] = [min, max];\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  @computed\r\n  get nodeSizeScale() {\r\n    return scales[this.nodes.size.scale]()\r\n      .domain(this.minMax[this.nodes.sizeBy])\r\n      .range([this.nodes.size.min, this.nodes.size.max]);\r\n  }\r\n\r\n  @computed\r\n  get nodeColorScale() {\r\n    return scales[this.nodes.color.scale]()\r\n      .domain(this.minMax[this.nodes.colorBy])\r\n      .range([this.nodes.color.from, this.nodes.color.to]);\r\n  }\r\n\r\n  @computed\r\n  get computedGraph() {\r\n    const graph = createGraph();\r\n    this.rawGraph.nodes.forEach(n => {\r\n      const override = this.overrides.get(n.id.toString());\r\n      graph.addNode(n.id.toString(), {\r\n        label: (override && override.get(\"label\")) || n[this.nodes.labelBy],\r\n        size:\r\n          (override && override.get(\"size\")) ||\r\n          this.nodeSizeScale(n[this.nodes.sizeBy]),\r\n        color:\r\n          (override && override.get(\"color\")) ||\r\n          this.nodeColorScale(n[this.nodes.colorBy]),\r\n        shape: (override && override.get(\"shape\")) || n[this.nodes.shape],\r\n        ref: n\r\n      });\r\n    });\r\n\r\n    this.rawGraph.edges.forEach(e => {\r\n      graph.addLink(e.source_id.toString(), e.target_id.toString());\r\n    });\r\n\r\n    return graph;\r\n  }\r\n\r\n  removeNodes(nodeids) {\r\n    this.rawGraph.nodes = this.rawGraph.nodes.filter(\r\n      n => !nodeids.includes(n.id)\r\n    );\r\n    this.rawGraph.edges = this.rawGraph.edges.filter(\r\n      e => !nodeids.includes(e.source_id) && !nodeids.includes(e.target_id)\r\n    );\r\n    appState.graph.frame.removeSelected();\r\n  }\r\n\r\n  getSnapshot() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n      overrides: this.overrides,\r\n      nodesShowingLabels: this.nodesShowingLabels,\r\n      positions: this.frame.getPositions(),\r\n      metadata: this.metadata,\r\n      global: {\r\n        nodes: this.nodes,\r\n      },\r\n    };\r\n    return snapshot;\r\n  }\r\n\r\n  /**\r\n   * [Argo-lite] Saves graph snapshot as String\r\n   * \r\n   * Note that Argo-lite snapshot contains all graph data\r\n   * and metadata except nodes/edges deleted by users.\r\n   * This is different from Argo-electron snapshot.\r\n   */\r\n  saveImmediateStates(optionalConfig) {\r\n    const snapshot = this.getSnapshot();\r\n    // TODO: add corresponding options on frontend\r\n    // The optional options allows users to leave out\r\n    // certain app state when saving snapshot\r\n    if (optionalConfig) {\r\n      if (optionalConfig.noPosition) {\r\n        snapshot.positions = undefined;\r\n      }\r\n      if (optionalConfig.noGlobal) {\r\n        snapshot.global = undefined;\r\n      }\r\n      if (optionalConfig.noOverride) {\r\n        snapshot.overrides = undefined;\r\n      }\r\n    }\r\n    return JSON.stringify(snapshot);\r\n  }\r\n\r\n  @action\r\n  loadImmediateStates(savedStatesStr) {\r\n    const savedStates = JSON.parse(savedStatesStr);\r\n    if (!savedStates) {\r\n      return;\r\n    }\r\n    const savedOverrides = new Map(\r\n      Object.entries(savedStates.overrides).map(([k, v]) => [\r\n        k,\r\n        new Map(Object.entries(v))\r\n      ])\r\n    );\r\n    this.overrides.clear();\r\n    this.overrides.merge(savedOverrides);\r\n\r\n    if (savedStates.metadata) {\r\n      this.metadata = savedStates.metadata;\r\n    }\r\n    if (savedStates.global) {\r\n      this.nodes = savedStates.global.nodes;\r\n    }\r\n\r\n    // The following lines trigger autoruns.\r\n    this.rawGraph = savedStates.rawGraph;\r\n    if (savedStates.positions) {\r\n      this.positions = savedStates.positions;\r\n    }\r\n    if (savedStates.nodesShowingLabels) {\r\n      this.initialNodesShowingLabels = savedStates.nodesShowingLabels;\r\n      this.nodesShowingLabels = savedStates.nodesShowingLabels;\r\n    }\r\n  }\r\n\r\n \r\n  get averageClustering() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n    };\r\n    return averageClusteringCoefficient(snapshot);\r\n  }\r\n\r\n \r\n  get components() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n    };\r\n    return connectedComponents(snapshot);\r\n  }\r\n}\r\n\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class ImportStore {\r\n  @observable graphFile = \"\";\r\n  @observable stateFile = \"\";\r\n\r\n  @observable dialogOpen = false;\r\n\r\n  @observable loading = false;\r\n\r\n  // Argo-lite specific: File object selected via the file input.\r\n  @observable selectedEdgeFileFromInput = null;\r\n  @observable selectedNodeFileFromInput = null;\r\n\r\n  @observable\r\n  importConfig = {\r\n    nodeFile: {\r\n      path: \"\",\r\n      topN: [],\r\n      hasColumns: true,\r\n      ready: false, // whether the topN is ready to display\r\n      columns: [],\r\n      mapping: {\r\n        id: \"<UNK>\"\r\n      },\r\n      delimiter: \",\"\r\n    },\r\n    edgeFile: {\r\n      path: \"\",\r\n      ready: false,\r\n      hasColumns: true,\r\n      columns: [],\r\n      topN: [],\r\n      mapping: {\r\n        fromId: \"<UNK>\",\r\n        toId: \"<UNK>\"\r\n      },\r\n      createMissing: true,\r\n      delimiter: \",\"\r\n    }\r\n  };\r\n}\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class ProjectStore {\r\n \r\n  @observable projects = [];\r\n\r\n  /*\r\n   * Active project and snapshot\r\n   */\r\n  @observable currentProject = null;\r\n  // @observable currentProjectName = null;\r\n  // @observable currentProjectPath = null;\r\n  @observable currentSnapshotName = \"Quick Save\"; // TODO: If not loaded from snapshot, use this, otherwise use the name of the loaded snapshot\r\n\r\n  // [Argo-lite] for displaying snapshot file in textarea to be copied\r\n  @observable stringCopyOfSnapshot = 'Loading';\r\n  \r\n  /*\r\n   * Dialogs and UI\r\n   */\r\n  @observable isNewProjectDialogOpen = false;\r\n  @observable isProjectDetailDialogOpen = false;\r\n  @observable isSaveSnapshotDialogOpen = false;\r\n  @observable isRenameSnapshotDialogOpen = false;\r\n  // when the ipc returns the projects data for the first time\r\n  // turn off `isFetching` so that the spinner of WorkspaceView will be turned off\r\n  // Also used when refreshing WorkspaceView\r\n  @observable isFetching = true;\r\n\r\n  /*\r\n   * New project creation and import\r\n   */\r\n  @observable newProjectName = '';\r\n}\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class SearchStore {\r\n  @observable searchStr = \"\";\r\n  @observable candidates = [];\r\n  @observable numCandidates = 0;\r\n  @observable panelOpen = false;\r\n}\r\n","import { autorun, runInAction } from \"mobx\";\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport PreferencesStore from \"./PreferencesStore\";\r\nimport GraphStore from \"./GraphStore\";\r\nimport ImportStore from \"./ImportStore\";\r\nimport ProjectStore from \"./ProjectStore\";\r\n// import { peakCSV } from \"../services/CSVUtils\";\r\nimport parse from \"csv-parse/lib/sync\";\r\nimport SearchStore from \"./SearchStore\";\r\nimport { runSearch } from \"../ipc/client\";\r\n\r\nimport { BACKEND_URL } from \"../constants\";\r\nimport { toaster } from '../notifications/client';\r\n\r\nexport class AppState {\r\n  constructor() {\r\n    this.preferences = new PreferencesStore();\r\n    this.graph = new GraphStore();\r\n    this.import = new ImportStore();\r\n    this.search = new SearchStore();\r\n    this.project = new ProjectStore();\r\n  }\r\n}\r\n\r\nconst appState = new AppState();\r\n\r\nwindow.appState = appState;\r\n\r\nconst loadSnapshotFromURL = (url) => {\r\n  return fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors'\r\n  }).then(response => response.text());\r\n};\r\n\r\nconst loadSnapshotFromStrapi = (uuid) => {\r\n  const url = `${BACKEND_URL}/snapshots?uuid=${uuid}`;\r\n  return fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors'\r\n  }).then(response => response.json()).then(json => json[0].body).catch(error => {\r\n    // TODO: Show user an error dialog saying graph cannot be fetched.\r\n  });\r\n};\r\n\r\nconst loadAndDisplaySnapshotFromURL = (url) => {\r\n  loadSnapshotFromURL(url).then(snapshotString => {\r\n    // use filename/last segment of URL as title in Navbar\r\n    appState.graph.metadata.snapshotName = url.split('/').pop() || url.split('/').pop().pop();\r\n    appState.graph.loadImmediateStates(snapshotString);\r\n  });\r\n};\r\n\r\nconst loadAndDisplaySnapshotFromStrapi = (uuid) => {\r\n  loadSnapshotFromStrapi(uuid).then(snapshotString => {\r\n    // TODO: use more sensible snapshot name\r\n    appState.graph.metadata.snapshotName = 'Shared';\r\n    appState.graph.loadImmediateStates(snapshotString);\r\n  });\r\n};\r\n\r\nwindow.loadAndDisplaySnapshotFromURL = loadAndDisplaySnapshotFromURL;\r\n\r\nwindow.loadInitialSampleGraph = async () => {\r\n  // default fallback url\r\n  let url = \"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\";\r\n\r\n  // check url hash\r\n  if (window.location.hash) {\r\n    const hash = window.location.hash.substring(1);\r\n    // If the hash component begins with http.\r\n    if (hash.length >= 4 && hash.startsWith('http')) {\r\n      try {\r\n        url = decodeURIComponent(hash);\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert('Provided URL is not valid.');\r\n      }\r\n    } else {\r\n      // If the hash component does not begin with http\r\n      // treat it as a uuid in strapi.\r\n      loadAndDisplaySnapshotFromStrapi(hash);\r\n      return;\r\n    }\r\n    \r\n  }\r\n  loadAndDisplaySnapshotFromURL(url)\r\n};\r\n\r\nwindow.saveSnapshotToString = () => {\r\n  const snapshotString = appState.graph.saveImmediateStates();\r\n  return snapshotString;\r\n};\r\n\r\n// Load initial sample graph when Argo Lite is ready\r\nwindow.addEventListener('load', (event) => {\r\n  window.loadInitialSampleGraph();\r\n});\r\n\r\nconst updateTimeout = null;\r\n\r\n// Load graph on frontend once the rawGraph has been returned from IPC\r\n// Once a graph has been loaded and displayed, even if nodes are all deleted, still consider it \"hasGraph\"\r\nautorun(() => {\r\n  if (!appState.graph.hasGraph && appState.graph.rawGraph.nodes.length > 0) {\r\n    appState.graph.hasGraph = true;\r\n  }\r\n})\r\n\r\nautorun(() => {\r\n  if (appState.graph.frame) {\r\n    appState.graph.frame.updateGraph(appState.graph.computedGraph);\r\n    appState.graph.frame.setAllNodesShape(appState.graph.nodes.shape);\r\n    appState.graph.frame.setLabelRelativeSize(appState.graph.nodes.labelSize);\r\n    appState.graph.frame.setLabelLength(appState.graph.nodes.labelLength);\r\n  }\r\n});\r\n\r\nautorun(() => {\r\n  if (appState.graph.frame && appState.graph.positions) {\r\n    // If positions are saved in a snapshot, pause layout upon loading.\r\n    appState.graph.frame.paused = true;\r\n    appState.graph.frame.updatePositions(appState.graph.positions);\r\n    appState.graph.positions = null;\r\n    console.log('[autorun] Positions updated.');\r\n  }\r\n  if (appState.graph.frame && appState.graph.initialNodesShowingLabels) {\r\n    appState.graph.frame.showLabels(appState.graph.initialNodesShowingLabels);\r\n    appState.graph.initialNodesShowingLabels = null;\r\n  }\r\n});\r\n\r\nautorun(() => {\r\n  const searchStr = appState.search.searchStr;\r\n  if (searchStr.length >= 3) {\r\n    runSearch(searchStr);\r\n  } else {\r\n    appState.search.panelOpen = false;\r\n    appState.search.candidates.splice(0, appState.search.candidates.length);\r\n    if (appState.graph.frame) {\r\n      appState.graph.frame.highlightNodeIds([], true);\r\n    }\r\n  }\r\n});\r\n\r\n// Argo-lite specific: extract CSV from File object and update related fields.\r\nautorun(() => {\r\n  const file = appState.import.selectedEdgeFileFromInput;\r\n  const hasHeader = appState.import.importConfig.edgeFile.hasColumns;\r\n  const delimiter = appState.import.importConfig.edgeFile.delimiter;\r\n\r\n  if (!file) {\r\n    return;\r\n  }\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n\r\n  reader.onload = () => {\r\n    // Read entire CSV into memory as string\r\n    const fileAsString = reader.result;\r\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\r\n    const lines = fileAsString.split('\\n');\r\n    const lineNumber = lines.length;\r\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\r\n    console.log(topLinesAsString);\r\n\r\n    // Parse the top lines\r\n    try {\r\n      const it = hasHeader ? parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: hasHeader,\r\n        delimiter\r\n      }) : parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      });\r\n      runInAction(\"preview top N lines of edge file\", () => {\r\n        appState.import.importConfig.edgeFile.topN = it;\r\n        appState.import.importConfig.edgeFile.columns = Object.keys(it[0]).map(key => `${key}`);\r\n        appState.import.importConfig.edgeFile.mapping.fromId = appState.import.importConfig.edgeFile.columns[0];\r\n        appState.import.importConfig.edgeFile.mapping.toId = appState.import.importConfig.edgeFile.columns[0]\r\n        appState.import.importConfig.edgeFile.ready = true;\r\n      });\r\n    } catch {\r\n      toaster.show({\r\n        message: 'Error: Fails to parse file',\r\n        intent: Intent.DANGER,\r\n        timeout: -1\r\n      });\r\n    }\r\n  };\r\n\r\n  reader.onerror = () => {\r\n    console.error(reader.error);\r\n    toaster.show({\r\n      message: 'Error: Fails to open file',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n  };\r\n});\r\n\r\nautorun(() => {\r\n  const file = appState.import.selectedNodeFileFromInput;\r\n  const hasHeader = appState.import.importConfig.nodeFile.hasColumns;\r\n  const delimiter = appState.import.importConfig.nodeFile.delimiter;\r\n\r\n  if (!file) {\r\n    return;\r\n  }\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n\r\n  reader.onload = () => {\r\n    // Read entire CSV into memory as string\r\n    const fileAsString = reader.result;\r\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\r\n    const lines = fileAsString.split('\\n');\r\n    const lineNumber = lines.length;\r\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\r\n    console.log(topLinesAsString);\r\n\r\n    // Parse the top lines\r\n    try {\r\n      const it = hasHeader ? parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: hasHeader,\r\n        delimiter\r\n      }) : parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      });\r\n\r\n      runInAction(\"preview top N lines of edge file\", () => {\r\n        appState.import.importConfig.nodeFile.topN = it;\r\n        appState.import.importConfig.nodeFile.columns = Object.keys(it[0]).map(key => `${key}`);\r\n        appState.import.importConfig.nodeFile.mapping.fromId = appState.import.importConfig.nodeFile.columns[0];\r\n        appState.import.importConfig.nodeFile.mapping.toId = appState.import.importConfig.nodeFile.columns[0]\r\n        appState.import.importConfig.nodeFile.ready = true;\r\n      });\r\n    } catch {\r\n      toaster.show({\r\n        message: 'Error: Fails to open file',\r\n        intent: Intent.DANGER,\r\n        timeout: -1\r\n      });\r\n    }\r\n  };\r\n\r\n  reader.onerror = () => {\r\n    console.error(reader.error);\r\n    toaster.show({\r\n      message: 'Error: Fails to open file',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n  };\r\n});\r\n\r\nexport default appState;\r\n","import React from \"react\";\r\nimport { Button, Classes, Dialog, Intent, Switch } from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport { requestChangeWorkspace } from \"../ipc/client\";\r\n\r\n@observer\r\nclass PreferencesDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"cog\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.preferences.dialogOpen}\r\n        onClose={() => {\r\n          appState.preferences.dialogOpen = false;\r\n        }}\r\n        title=\"Preferences\"\r\n      >\r\n        <div className=\"pt-dialog-body\">\r\n          <Switch\r\n            label=\"Dark Mode\"\r\n            checked={appState.preferences.darkMode}\r\n            onChange={() => {\r\n              appState.preferences.darkMode = !appState.preferences.darkMode;\r\n              appState.preferences.saveUserConfig();\r\n              if (appState.graph.frame) {\r\n                appState.graph.frame.toggleDark();\r\n              }\r\n            }}\r\n          />\r\n          \r\n          <p>Choose a different workspace directory (need to relaunch Argo)</p>\r\n          <div className={classnames(Classes.CONTROL_GROUP)}>\r\n            <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n              <input\r\n                type=\"text\"\r\n                className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n                placeholder=\"Select workspace directory\"\r\n                readOnly\r\n                value={appState.preferences.workspacePath}\r\n              />\r\n            </div>\r\n            <Button\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                requestChangeWorkspace();\r\n              }}\r\n            >\r\n              Choose Directory\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"pt-dialog-footer\">\r\n          <div className=\"pt-dialog-footer-actions\">\r\n            <Button\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                appState.preferences.dialogOpen = false;\r\n              }}\r\n              text=\"Done\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreferencesDialog;","import React from \"react\";\r\nimport { Button, Classes, Collapse } from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default ({ name, isOpen, onToggle, children }) => (\r\n  <div>\r\n    <Button\r\n      className={classnames(Classes.FILL, Classes.MINIMAL, \"text-align-left\")}\r\n      rightIconName={isOpen ? \"chevron-up\" : \"chevron-down\"}\r\n      onClick={onToggle}\r\n    >\r\n      {name}\r\n    </Button>\r\n    <Collapse isOpen={isOpen}>{children}</Collapse>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\r\n\r\nexport default ({ handleClick, item, isActive }) => (\r\n  <MenuItem\r\n    className={isActive ? Classes.ACTIVE : \"\"}\r\n    key={item}\r\n    onClick={handleClick}\r\n    text={item}\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport { Button, Classes } from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/labs\";\r\nimport CommonItemRenderer from \"./CommonItemRenderer\";\r\n\r\nexport default ({ items, onSelect, value, fill = false }) => (\r\n  <Select\r\n    items={items}\r\n    itemRenderer={CommonItemRenderer}\r\n    filterable={false}\r\n    onItemSelect={onSelect}\r\n  >\r\n    <Button className={fill ? Classes.FILL : null} text={value} />\r\n  </Select>\r\n);\r\n","/* eslint-disable jsx-a11y/label-has-for */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport {\r\n  requestChooseEdgeFile,\r\n  requestChooseNodeFile,\r\n  requestImportGraphFromCSV,\r\n  requestCreateNewProject\r\n} from \"../ipc/client\";\r\nimport Collapsable from \"./utils/Collapsable\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport { NODE_AND_EDGE_FILE, ONLY_EDGE_FILE } from \"../constants/index\";\r\n\r\n@observer\r\nclass PreviewTable extends React.Component {\r\n  render() {\r\n    const file = this.props.file;\r\n    return (\r\n      <Table\r\n        className=\"import-preview-table\"\r\n        numRows={file.topN.length}\r\n        selectedRegions={Object.values(file.mapping)\r\n          .map(it => file.columns.indexOf(it))\r\n          .map(it => ({ rows: null, cols: [it, it] }))}\r\n      >\r\n        {file.columns.map(it => (\r\n          <Column\r\n            key={it}\r\n            name={it}\r\n            renderCell={i => <Cell>{file.topN[i][it]}</Cell>}\r\n          />\r\n        ))}\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\n@observer\r\nclass ImportDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      available: ONLY_EDGE_FILE,\r\n      nodesOpen: true,\r\n      edgesOpen: true,\r\n      delimiter: ','\r\n    };\r\n  }\r\n\r\n  changeAvailable = targetValue => {\r\n    if (targetValue === ONLY_EDGE_FILE) {\r\n      appState.import.importConfig.edgeFile.createMissing = true;\r\n    }\r\n    this.setState({ available: targetValue });\r\n  };\r\n\r\n  canImport = () => {\r\n    if (this.state.available === NODE_AND_EDGE_FILE) {\r\n      return (\r\n        appState.import.importConfig.edgeFile.ready &&\r\n        appState.import.importConfig.nodeFile.ready\r\n      );\r\n    } else if (this.state.available === ONLY_EDGE_FILE) {\r\n      return appState.import.importConfig.edgeFile.ready;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  renderNodesSelection = () => {\r\n    const nodeFile = appState.import.importConfig.nodeFile;\r\n    if (this.state.available === ONLY_EDGE_FILE) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Collapsable\r\n        name=\"Nodes\"\r\n        isOpen={this.state.nodesOpen}\r\n        onToggle={() => this.setState({ nodesOpen: !this.state.nodesOpen })}\r\n      >\r\n        <div className={classnames(Classes.CONTROL_GROUP)}>\r\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n            <input\r\n              type=\"file\"\r\n              className={classnames(Classes.DISABLED)}\r\n              onChange={(event) => {\r\n                if (event.target.files.length < 1) {\r\n                  return;\r\n                }\r\n                appState.import.selectedNodeFileFromInput = event.target.files[0];\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Switch\r\n          label=\"Has Headers\"\r\n          checked={nodeFile.hasColumns}\r\n          onChange={() => (nodeFile.hasColumns = !nodeFile.hasColumns)}\r\n        />\r\n        {nodeFile.ready && (\r\n          <div className=\"column-selection\">\r\n            <PreviewTable file={nodeFile} />\r\n            Column for Node ID:\r\n            <SimpleSelect\r\n              items={nodeFile.columns}\r\n              value={nodeFile.mapping.id}\r\n              onSelect={it => (nodeFile.mapping.id = it)}\r\n            />\r\n          </div>\r\n        )}\r\n      </Collapsable>\r\n    );\r\n  };\r\n\r\n  renderEdgesSelection = () => {\r\n    const edgeFile = appState.import.importConfig.edgeFile;\r\n    return (\r\n      <Collapsable\r\n        name=\"Edges\"\r\n        isOpen={this.state.edgesOpen}\r\n        onToggle={() => this.setState({ edgesOpen: !this.state.edgesOpen })}\r\n      >\r\n        <div className={classnames(Classes.CONTROL_GROUP)}>\r\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n            <input\r\n              type=\"file\"\r\n              className={classnames(Classes.DISABLED)}\r\n              onChange={(event) => {\r\n                if (event.target.files.length < 1) {\r\n                  return;\r\n                }\r\n                appState.import.selectedEdgeFileFromInput = event.target.files[0];\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Switch\r\n          label=\"Has Headers\"\r\n          checked={edgeFile.hasColumns}\r\n          onChange={() => (edgeFile.hasColumns = !edgeFile.hasColumns)}\r\n        />\r\n        <Switch\r\n          label=\"Create Missing Nodes\"\r\n          checked={edgeFile.createMissing}\r\n          disabled={this.state.available === ONLY_EDGE_FILE}\r\n          onChange={() => (edgeFile.createMissing = !edgeFile.createMissing)}\r\n        />\r\n        {edgeFile.ready && (\r\n          <div className=\"column-selection\">\r\n            <PreviewTable file={edgeFile} />\r\n            Column for Source ID:\r\n            <SimpleSelect\r\n              items={edgeFile.columns}\r\n              value={edgeFile.mapping.fromId}\r\n              onSelect={it => (edgeFile.mapping.fromId = it)}\r\n            />{\" \"}\r\n            <br />\r\n            Column for Target ID:\r\n            <SimpleSelect\r\n              items={edgeFile.columns}\r\n              value={edgeFile.mapping.toId}\r\n              onSelect={it => (edgeFile.mapping.toId = it)}\r\n            />\r\n          </div>\r\n        )}\r\n      </Collapsable>\r\n    );\r\n  };\r\n\r\n  updateDelimiter (newDelimiter) {\r\n    this.setState({delimiter: newDelimiter});\r\n\r\n    if (newDelimiter == \"\\\\t\") {\r\n      newDelimiter = \"\\t\"\r\n    }\r\n\r\n    appState.import.importConfig.edgeFile.delimiter = newDelimiter\r\n    appState.import.importConfig.nodeFile.delimiter = newDelimiter\r\n  }\r\n\r\n  renderDelimiterSelection() {\r\n    return (\r\n      <div className=\"column-selection\">\r\n        Selected Delimiter\r\n        <SimpleSelect\r\n          items={[\",\", \"\\\\t\", \";\"]}\r\n          value={this.state.delimiter}\r\n          onSelect={it => { this.updateDelimiter(it) }}\r\n        />{\" \"}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.import.dialogOpen}\r\n        onClose={() => {\r\n          appState.import.dialogOpen = false;\r\n        }}\r\n        title=\"Import CSV\"\r\n      >\r\n        {appState.import.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\r\n              I have:\r\n              <SimpleSelect\r\n                items={[ONLY_EDGE_FILE, NODE_AND_EDGE_FILE]}\r\n                value={this.state.available}\r\n                onSelect={this.changeAvailable}\r\n              />\r\n              {this.renderNodesSelection()}\r\n              {this.renderEdgesSelection()}\r\n              {this.renderDelimiterSelection()}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                <Button\r\n                  className={classnames({\r\n                    [Classes.DISABLED]: !this.canImport()\r\n                  })}\r\n                  intent={Intent.PRIMARY}\r\n                  onClick={() => {\r\n                    // TODO: this might be unsafe, check if there's racing condition\r\n                    requestCreateNewProject({\r\n                      name: appState.project.newProjectName,\r\n                      createdDate: new Date().toLocaleString(),\r\n                    });\r\n                    requestImportGraphFromCSV( //edgefile.delimiter and nodefile.delimiter are the same\r\n                      this.state.available === NODE_AND_EDGE_FILE, appState.import.importConfig.edgeFile.delimiter, appState.project.newProjectName\r\n                    );\r\n\r\n                    // Importing a graph means no label would be shown by default,\r\n                    // thus turn off label CSSRenderer for better performance.\r\n                    appState.graph.frame.turnOffLabelCSSRenderer();\r\n                  }}\r\n                  text=\"Import\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\r\n\r\n/**\r\n * [Deprecated] This dialog is only used to open SQlite-based\r\n * graph file and optionally along with a snapshot file.\r\n * \r\n * For Argo-lite, which only has the JSON snapshot file,\r\n * use OpenSnapshotDialog.\r\n */\r\nimport React from \"react\";\r\nimport { Button, Classes, Dialog, Intent, Spinner } from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport {\r\n  requestChooseGraphFile,\r\n  requestChooseStateFile,\r\n  requestOpen\r\n} from \"../ipc/client\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport {\r\n  GRAPH_AND_STATE_FILE,\r\n  ONLY_EDGE_FILE,\r\n  ONLY_GRAPH_FILE\r\n} from \"../constants\";\r\n\r\n@observer\r\nclass OpenDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      available: ONLY_GRAPH_FILE,\r\n      selectedGraph: null,\r\n      selectedState: null\r\n    };\r\n  }\r\n\r\n  canImport = () => {\r\n    if (this.state.available === GRAPH_AND_STATE_FILE) {\r\n      return appState.import.stateFile && appState.import.graphFile;\r\n    } else {\r\n      return appState.import.graphFile;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  changeAvailable = targetValue => {\r\n    if (targetValue === ONLY_EDGE_FILE) {\r\n      appState.import.importConfig.edgeFile.createMissing = true;\r\n    }\r\n    this.setState({ available: targetValue });\r\n  };\r\n\r\n  renderSelectGraph = () => {\r\n    return (\r\n      <div className={classnames(Classes.CONTROL_GROUP)}>\r\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n          <input\r\n            type=\"text\"\r\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n            placeholder=\"Select graph file\"\r\n            readOnly\r\n            value={appState.import.graphFile}\r\n          />\r\n        </div>\r\n        <Button intent={Intent.PRIMARY} onClick={requestChooseGraphFile}>\r\n          Choose File\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSelectState = () => {\r\n    return (\r\n      <div className={classnames(Classes.CONTROL_GROUP)}>\r\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n          <input\r\n            type=\"text\"\r\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n            placeholder=\"Select snapshot file\"\r\n            readOnly\r\n            value={appState.import.stateFile}\r\n          />\r\n        </div>\r\n        <Button intent={Intent.PRIMARY} onClick={requestChooseStateFile}>\r\n          Choose File\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.preferences.openDialogOpen}\r\n        onClose={() => {\r\n          appState.preferences.openDialogOpen = false;\r\n        }}\r\n        title=\"Open File\"\r\n      >\r\n        {appState.import.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\r\n              I have:\r\n              <SimpleSelect\r\n                items={[GRAPH_AND_STATE_FILE, ONLY_GRAPH_FILE]}\r\n                value={this.state.available}\r\n                onSelect={this.changeAvailable}\r\n              />\r\n              {this.renderSelectGraph()}\r\n              {this.state.available === GRAPH_AND_STATE_FILE &&\r\n                this.renderSelectState()}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                <Button\r\n                  className={classnames({\r\n                    [Classes.DISABLED]: !this.canImport()\r\n                  })}\r\n                  intent={Intent.PRIMARY}\r\n                  onClick={() => {\r\n                    appState.preferences.openDialogOpen = false;\r\n                    requestOpen();\r\n                  }}\r\n                  text=\"Open\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass NewProjectDialog extends React.Component {\r\n  \r\n  render() {\r\n    const isNewProjectNameDuplicate = appState.project.projects.some(p => p.name === appState.project.newProjectName);\r\n    const isNewProjectNameEmpty = appState.project.newProjectName.trim() === '';\r\n    const isValidated = !(isNewProjectNameDuplicate || isNewProjectNameEmpty);\r\n  \r\n    return (\r\n      <Dialog\r\n        iconName=\"projects\"\r\n        isOpen={appState.project.isNewProjectDialogOpen}\r\n        onClose={() => {\r\n          appState.project.isNewProjectDialogOpen = false;\r\n        }}\r\n        title=\"Create New Project\"\r\n      >\r\n        <div className={Classes.DIALOG_BODY}>\r\n          <label className=\"pt-label .modifier\">\r\n            Project Name\r\n            <span className=\"pt-text-muted\"> (required){isNewProjectNameDuplicate && ' (This name has already been taken!)'}</span>\r\n            <input\r\n              className=\"pt-input\"\r\n              type=\"text\"\r\n              placeholder=\"New Project\"\r\n              dir=\"auto\"\r\n              value={appState.project.newProjectName}\r\n              onChange={event => {\r\n                appState.project.newProjectName = event.target.value;\r\n              }}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={Classes.DIALOG_FOOTER}>\r\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n            <Button\r\n              className={classnames({\r\n                [Classes.DISABLED]: !isValidated\r\n              })}\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                if (isValidated) {\r\n                  appState.project.isNewProjectDialogOpen = false;\r\n                  appState.import.dialogOpen = true;\r\n                }\r\n              }}\r\n              text=\"Next\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewProjectDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { requestOpen, requestDelete } from \"../ipc/client\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass ProjectDetailDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      appState.project.currentProject && (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.project.isProjectDetailDialogOpen}\r\n          onClose={() => {\r\n            appState.project.isProjectDetailDialogOpen = false;\r\n          }}\r\n          title={`Load ${appState.project.currentProject.name} Project`}\r\n        >\r\n          {appState.project.currentProject.hasGraphData ? (\r\n            <div className={Classes.DIALOG_BODY}>\r\n              <Card\r\n                interactive={true}\r\n                elevation={Card.ELEVATION_TWO}\r\n                onClick={() => {\r\n                  appState.import.graphFile =\r\n                    appState.project.currentProject.graphDataPath;\r\n                  appState.project.isProjectDetailDialogOpen = false;\r\n                  requestOpen();\r\n                }}\r\n              >\r\n                <Icon iconName=\"graph\" /> Start fresh from original graph\r\n              </Card>\r\n              <hr />\r\n              <div className=\"argo-menu-list-header\">Load recent snapshots</div>\r\n              <div>\r\n                {appState.project.currentProject.snapshotPaths.map(\r\n                  snapshotPath => {\r\n                    return (\r\n                      <div key={snapshotPath}>\r\n                        <Card\r\n                          interactive={false}\r\n                          elevation={Card.ELEVATION_TWO}\r\n                        >\r\n                          {/* <Icon iconName=\"layout\" /> */}\r\n                          <h5>\r\n                            {snapshotPath\r\n                              .replace(/^.*[\\\\\\/]/, \"\")\r\n                              .replace(/\\.[^/.]+$/, \"\")}\r\n                          </h5>\r\n                          <Button\r\n                            className={classnames([\r\n                              Classes.BUTTON,\r\n                              Classes.INTENT_PRIMARY\r\n                            ])}\r\n                            onClick={() => {\r\n                              appState.import.graphFile =\r\n                                appState.project.currentProject.graphDataPath;\r\n                              appState.import.stateFile = snapshotPath;\r\n                              appState.project.currentSnapshotName = snapshotPath\r\n                                .replace(/^.*[\\\\\\/]/, \"\")\r\n                                .replace(/\\.[^/.]+$/, \"\");\r\n                              appState.project.isProjectDetailDialogOpen = false;\r\n                              requestOpen();\r\n                            }}\r\n                          >\r\n                            Load Snapshot\r\n                          </Button>\r\n                          <Button\r\n                            className={classnames([Classes.BUTTON])}\r\n                            onClick={() => {\r\n                              // TODO: Open a confirmation dialog\r\n                              requestDelete(snapshotPath);\r\n                              appState.project.currentProject.snapshotPaths = appState.project.currentProject.snapshotPaths.filter(\r\n                                path => path !== snapshotPath\r\n                              );\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Card>\r\n                      </div>\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              Error: Cannot find .argograph file in this project directory.\r\n            </div>\r\n          )}\r\n        </Dialog>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDetailDialog;","/**\r\n * [Argo-lite Modified]\r\n * In electron Argo, snapshots are saved to the active project folder.\r\n * In Argo-lite, snapshots are saved as a file download.\r\n * Sometimes, it's tricky to let browser download something without a backend\r\n * hosting the file. Thus we also allow user to copy paste from\r\n * a text area containing our snapshot JSON.\r\n * \r\n * Remember to change appState.project.stringCopyOfSnapshot\r\n * before showing the dialog.\r\n */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { requestSaveSnapshot } from \"../ipc/client\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass SaveSnapshotDialog extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     name: \"Quick Save\",\r\n  //   };\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.project.isSaveSnapshotDialogOpen}\r\n          onClose={() => {\r\n            appState.project.isSaveSnapshotDialogOpen = false;\r\n          }}\r\n          title={`Save Snapshot`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            {/* <label className=\"pt-label .modifier\">\r\n              Snapshot Name\r\n              <span className=\"pt-text-muted\"> (required)</span>\r\n              <input\r\n                className=\"pt-input\"\r\n                type=\"text\"\r\n                placeholder=\"My Snapshot\"\r\n                dir=\"auto\"\r\n                value={this.state.name}\r\n                onChange={event => this.setState({ name: event.target.value })}\r\n              />\r\n            </label> */}\r\n            <p>If your browser doesn't start downloading the file, you can manually copy the content below and save to a plain text file.</p>\r\n            <input id=\"snapshot-textarea\" type=\"textarea\" value={appState.project.stringCopyOfSnapshot} readOnly />\r\n            <button\r\n              onClick={() => {\r\n                document.getElementById('snapshot-textarea').select();\r\n                document.execCommand(\"copy\");\r\n              }}\r\n            >\r\n              Copy to Clipboard\r\n            </button>\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                // className={classnames({\r\n                //   [Classes.DISABLED]: !this.state.name\r\n                // })}\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.project.isSaveSnapshotDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isRenameSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isRenameSnapshotDialogOpen = false;\n          }}\n          title={`Rename Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                className={classnames({\n                  [Classes.DISABLED]: !this.state.name\n                })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.graph.metadata.snapshotName = this.state.name;\n                  appState.project.isRenameSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","/**\n * [Argo-lite] Open the Argo-lite JSON graph snapshot file\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { toaster } from '../notifications/client';\n\n@observer\nclass OpenSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        selectedFile: null\n    };\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openSnapshotDialogOpen}\n        onClose={() => {\n          appState.preferences.openSnapshotDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        <div>\n            <div className={classnames(Classes.DIALOG_BODY)}>\n                <div className={classnames(Classes.CONTROL_GROUP)}>\n                    <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                        <input\n                            type=\"file\"\n                            className={classnames(Classes.DISABLED)}\n                            onChange={(event) => {\n                                if (event.target.files.length < 1) {\n                                    return;\n                                }\n                                this.setState({\n                                    selectedFile: event.target.files[0]\n                                });\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.state.selectedFile\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // This dialog is closed when user is done selecting file\n                    appState.preferences.openSnapshotDialogOpen = false;\n\n                    // Show user a notification\n                    toaster.show({\n                        message: 'Loading Graph Snapshot. Please wait...',\n                        intent: Intent.NONE,\n                        timeout: 2000\n                    });\n                    \n                    // Read the file and load snapshot\n                    const reader = new FileReader();\n                    reader.readAsText(this.state.selectedFile);\n\n                    reader.onload = () => {\n                        const fileAsString = reader.result;\n                        appState.graph.loadImmediateStates(fileAsString);\n                    }\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport { toaster } from '../notifications/client';\n\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { BACKEND_URL } from \"../constants\";\n\nconst uuidv4 = require('uuid/v4');\n\n@observer\nclass ShareDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShared: false,\n      isFetching: false,\n      sharedURL: 'Error: Sharing failed'\n    };\n\n    this.handleRequest = this.handleRequest.bind(this);\n  }\n\n  async handleRequest(uuid) {\n    // return await new Promise(resolve => setTimeout(resolve, 2000));\n    const backendURL = `${BACKEND_URL}/snapshots`;\n    // TODO: add better error handling\n    return await fetch(backendURL, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n            uuid,\n            body: window.saveSnapshotToString()\n        }),\n    }).then(response => response.ok).catch(error => {\n        toaster.show({\n            message: 'Failed to publish to sharing server. Unexpected error.',\n            intent: Intent.DANGER,\n            timeout: -1\n        });\n    });\n  }\n\n  render() {\n    return (\n        <Dialog\n            iconName=\"projects\"\n            isOpen={appState.preferences.shareDialogOpen}\n            onClose={() => {\n            appState.preferences.shareDialogOpen = false;\n            }}\n            title={`Share Graph`}\n        >\n            <div className={classnames(Classes.DIALOG_BODY)}>\n            {\n                !this.state.isShared && (\n                    <p>You can share the current state of your graph to a public URL that you can share with your friends! (*this will make your graph public)</p>\n                )\n            }\n            {\n                this.state.isFetching && (\n                    <p><b>Sharing in progress. Please wait...</b></p>\n                )\n            }\n            {\n                this.state.isShared && (\n                    <div>\n                        Your graph has been shared to\n                        <input id=\"snapshot-textarea\" type=\"textarea\" value={this.state.sharedURL} readOnly />\n                        <button\n                            onClick={() => {\n                                document.getElementById('snapshot-textarea').select();\n                                document.execCommand(\"copy\");\n                            }}\n                        >\n                            Copy to Clipboard\n                        </button>\n                    </div>\n                )\n            }\n            </div>\n\n            <div className={Classes.DIALOG_FOOTER}>\n                <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                    {\n                        !this.state.isShared && (\n                            <Button\n                            className={classnames({\n                                [Classes.DISABLED]: this.state.isFetching\n                            })}\n                            intent={Intent.PRIMARY}\n                            onClick={async () => {\n                                this.setState({ isFetching: true });\n                                // Generate a random UUID\n                                const uuid = uuidv4();\n                                // Generate URL corresponding to the UUID\n                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n        \n                                // Wait for backend response\n                                const requestSuccess = await this.handleRequest(uuid);\n                                // Update local state\n                                if (requestSuccess) {\n                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                } else {\n                                    // request fails, toast fires\n                                    this.setState({ isFetching: false, isShared: false });\n                                    toaster.show({\n                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                        intent: Intent.DANGER,\n                                        timeout: -1\n                                    });\n                                }\n                                \n                            }}\n                            text=\"Share\"\n                            />\n                        )\n                    }\n                    {\n                        this.state.isShared && (\n                            <Button\n                            className={classnames({\n                                [Classes.DISABLED]: this.state.isFetching\n                            })}\n                            intent={Intent.PRIMARY}\n                            onClick={async () => {\n                                this.setState({ isFetching: true, isShared: false });\n                                // Generate a random UUID\n                                const uuid = uuidv4();\n                                // Generate URL corresponding to the UUID\n                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n        \n                                // Wait for backend response\n                                const requestSuccess = await this.handleRequest(uuid);\n                                // Update local state\n                                if (requestSuccess) {\n                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                } else {\n                                    // request fails, toast fires\n                                    this.setState({ isFetching: false, isShared: false });\n                                    toaster.show({\n                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                        intent: Intent.DANGER,\n                                        timeout: -1\n                                    });\n                                }\n                                \n                            }}\n                            text=\"Share Again to a new URL\"\n                            />\n                        )\n                    }\n                    \n                </div>\n            </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default ShareDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass StatisticsDialog extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.preferences.statisticsDialogOpen}\r\n          onClose={() => {\r\n            appState.preferences.statisticsDialogOpen = false;\r\n          }}\r\n          title={`Statistics`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            <table className={Classes.TABLE} style={{width: '100%'}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Statistics</th>\r\n                        <th>Value</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td># Nodes</td>\r\n                        <td>{appState.graph.metadata.fullNodes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td># Edges</td>\r\n                        <td>{appState.graph.metadata.fullEdges}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Average Degree</td>\r\n                        <td>Under Construction</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Graph Density</td>\r\n                        <td>Under Construction</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Graph Diameter</td>\r\n                        <td>Under Construction</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Clustering Coefficient</td>\r\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.averageClustering : 'loading graph'}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Connected Component</td>\r\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.components : 'loading graph'}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.preferences.statisticsDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatisticsDialog;","import React from \"react\";\r\nimport PreferencesDialog from \"./PreferencesDialog\";\r\nimport ImportDialog from \"./ImportDialog\";\r\nimport OpenDialog from \"./OpenDialog\";\r\nimport NewProjectDialog from \"./NewProjectDialog\";\r\nimport ProjectDetailDialog from \"./ProjectDetailDialog\";\r\nimport SaveSnapshotDialog from \"./SaveSnapshotDialog\";\r\nimport RenameSnapshotDialog from \"./RenameSnapshotDialog\";\r\nimport OpenSnapshotDialog from \"./OpenSnapshotDialog\";\r\nimport ShareDialog from './ShareDialog';\r\nimport StatisticsDialog from './StatisticsDialog';\r\n\r\nexport default class Dialogs extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"none\" }}>\r\n        <PreferencesDialog />\r\n        <ImportDialog />\r\n        <OpenDialog />\r\n        <OpenSnapshotDialog />\r\n        <NewProjectDialog />\r\n        <ProjectDetailDialog />\r\n        <SaveSnapshotDialog />\r\n        <RenameSnapshotDialog />\r\n        <ShareDialog />\r\n        <StatisticsDialog />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  InputGroup,\r\n  Intent,\r\n  Position,\r\n  Tooltip,\r\n  Popover,\r\n  Menu,\r\n  MenuItem,\r\n  MenuDivider\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport appState from \"../stores/index\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\n@observer\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className={classnames([Classes.NAVBAR])}>\r\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\r\n          <div className={classnames([Classes.NAVBAR_HEADING])}>Argo <small>Lite</small></div>\r\n          {/* <a\r\n            href=\"https://poloclub.github.io/argo-graph/\"\r\n            target='_blank'\r\n            style={{\r\n              padding: '6px 10px 6px 10px',\r\n              backgroundColor: 'pink',\r\n              color: 'white',\r\n              borderRadius: '4px',\r\n              textDecoration: 'none'\r\n            }}\r\n          >\r\n            Learn more about Argo\r\n          </a> */}\r\n          <Popover\r\n            content={\r\n              <Menu>\r\n                <MenuItem text=\"Load Sample\" iconName=\"graph\">\r\n                  <MenuItem\r\n                    iconName=\"graph\"\r\n                    text=\"Les Miserables\"\r\n                    onClick={() => {\r\n                      window.loadAndDisplaySnapshotFromURL(\"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\");\r\n                    }}\r\n                  />\r\n                </MenuItem>\r\n                <MenuDivider />\r\n                <MenuItem\r\n                  iconName=\"import\"\r\n                  text=\"Import from CSV...\"\r\n                  onClick={() => (appState.import.dialogOpen = true)}\r\n                />\r\n                <MenuItem\r\n                  iconName=\"pt-icon-document-open\"\r\n                  text=\"Open Snapshot\"\r\n                  onClick={() => {appState.preferences.openSnapshotDialogOpen = true}}\r\n                />\r\n                <MenuDivider />\r\n                <MenuItem\r\n                  iconName=\"download\"\r\n                  text=\"Save Snapshot\"\r\n                  onClick={() => {\r\n                    appState.project.stringCopyOfSnapshot = appState.graph.saveImmediateStates();\r\n                    appState.project.isSaveSnapshotDialogOpen = true\r\n                  }}\r\n                />\r\n                <MenuItem\r\n                  iconName=\"pt-icon-document-share\"\r\n                  text=\"Publish and Share Snapshot\"\r\n                  onClick={() => {appState.preferences.shareDialogOpen = true}}\r\n                />\r\n              </Menu>\r\n            }\r\n            position={Position.BOTTOM}\r\n          >\r\n            <Button\r\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n              iconName=\"document\"\r\n            >\r\n              Graph\r\n            </Button>\r\n          </Popover>\r\n          <Popover\r\n            content={\r\n              <Menu>\r\n                <MenuItem\r\n                  text=\"Statistics\"\r\n                  iconName=\"pt-icon-timeline-bar-chart\"\r\n                  onClick={() => {appState.preferences.statisticsDialogOpen = true}}\r\n                />\r\n              </Menu>\r\n            }\r\n            position={Position.BOTTOM}\r\n          >\r\n            <Button\r\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n              iconName=\"pt-icon-wrench\"\r\n            >\r\n              Tools\r\n            </Button>\r\n          </Popover>\r\n        </div>\r\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\r\n        <span className={Classes.NAVBAR_DIVIDER} />\r\n        {appState.graph.hasGraph && appState.graph.frame && (\r\n            <div style={{ display: \"inline\" }}>\r\n              <Tooltip\r\n                content={appState.graph.frame.paused ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\r\n                position={Position.BOTTOM}\r\n              >\r\n                <Button\r\n                  className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n                  iconName={appState.graph.frame.paused ? \"play\" : \"pause\"}\r\n                  text={appState.graph.frame.paused ? \"Resume Layout\" : \"Pause Layout\"}\r\n                  onClick={() => {\r\n                    if (appState.graph.frame.paused) {\r\n                      appState.graph.frame.resumeLayout();\r\n                      this.forceUpdate();\r\n                    } else {\r\n                      appState.graph.frame.pauseLayout();\r\n                      this.forceUpdate();\r\n                    }\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n\r\n              {// This menu only shows when there are nodes selected\r\n              appState.graph.selectedNodes.length > 0 && (\r\n                <div style={{ display: \"inline\" }}>\r\n                  {/* <span className={Classes.NAVBAR_DIVIDER} /> */}\r\n                  <Tooltip\r\n                    content=\"Pin Selected Nodes\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"pin\"\r\n                      text=\"Pin\"\r\n                      intent={Intent.PRIMARY}\r\n                      onClick={() => {\r\n                        appState.graph.frame.pinSelectedNodes();\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip\r\n                    content=\"Unpin Selected Nodes\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"unpin\"\r\n                      text=\"Unpin\"\r\n                      intent={Intent.WARNING}\r\n                      onClick={() => {\r\n                        appState.graph.frame.unpinSelectedNodes();\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip\r\n                    content=\"Delete Selected Nodes\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"delete\"\r\n                      text=\"Delete\"\r\n                      intent={Intent.DANGER}\r\n                      onClick={() => {\r\n                        appState.graph.removeNodes(\r\n                          appState.graph.frame.getSelectedIds()\r\n                        );\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_RIGHT])}\r\n        >\r\n          <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            iconName=\"graph\"\r\n            onClick={() => {\r\n              appState.project.isRenameSnapshotDialogOpen = true;\r\n            }}\r\n          >\r\n            {appState.graph.metadata.snapshotName || \"Untitled Graph\"}\r\n            {\r\n              (appState.graph.metadata.fullNodes && appState.graph.metadata.fullEdges) ? (\r\n                ` (Nodes: ${appState.graph.metadata.fullNodes} Edges: ${appState.graph.metadata.fullEdges} )`\r\n              ) : null\r\n            }\r\n          </Button>\r\n          <span className={Classes.NAVBAR_DIVIDER} />\r\n          <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            iconName=\"cog\"\r\n            onClick={() => {\r\n              appState.preferences.dialogOpen = true;\r\n            }}\r\n          />\r\n          <span className={Classes.NAVBAR_DIVIDER} />\r\n          <a\r\n            href=\"https://github.com/poloclub/argo-graph-lite\"\r\n            target='_blank'\r\n            style={{\r\n              color: appState.preferences.darkMode ? 'white' : 'black',\r\n              fontSize: '120%',\r\n              textDecoration: 'none'\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} />\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Card,\r\n  Classes,\r\n  Spinner,\r\n  NonIdealState,\r\n  FocusStyleManager\r\n} from \"@blueprintjs/core\";\r\nimport appState from \"../stores/index\";\r\nimport { requestOpenWorkspaceFolder } from \"../ipc/client\";\r\n\r\n// Argo-lite: In lite, home screen is replaced by a loading screen\r\n// since there will always be a default graph showing.\r\n@observer\r\nclass WorkspaceView extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"workspace\">\r\n        {/* <Card\r\n          interactive={true}\r\n          elevation={Card.ELEVATION_TWO}\r\n          onClick={() => {\r\n            appState.project.isNewProjectDialogOpen = true;\r\n          }}\r\n        >\r\n          <Icon iconName=\"plus\" /> Create New Project\r\n        </Card>\r\n        <Card\r\n          interactive={true}\r\n          elevation={Card.ELEVATION_TWO}\r\n          onClick={() => {\r\n            requestOpenWorkspaceFolder();\r\n          }}\r\n        >\r\n          <Icon iconName=\"cog\" /> Manage Workspace\r\n        </Card>\r\n        <hr />\r\n        <div className=\"argo-menu-list-header\">My Projects</div>\r\n        <div style={{ paddingBottom: '100px' }}>\r\n          {appState.project.isFetching ? (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <Spinner />\r\n            </div>\r\n          ) : appState.project.projects.length > 0 ? (\r\n            appState.project.projects.map(project => {\r\n              return (\r\n                <div key={project.name}>\r\n                  <Card\r\n                    interactive={true}\r\n                    elevation={Card.ELEVATION_TWO}\r\n                    onClick={() => {\r\n                      appState.project.currentProject = project;\r\n                      appState.project.isProjectDetailDialogOpen = true;\r\n                    }}\r\n                  >\r\n                    <h5>{project.name}</h5>\r\n                    <p>Created: {project.createdDate || 'Unknown'}</p>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              Workspace is empty. Start by creating a new project.\r\n            </div>\r\n          )}\r\n        </div> */}\r\n        <div style={{ textAlign: \"center\", height: \"100vh\" }}>\r\n          <Spinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkspaceView;","import React from \"react\";\r\nimport { Frame } from \"../graph-frontend\";\r\nimport { ContextMenu, MenuFactory, MenuItemFactory } from \"@blueprintjs/core\";\r\nimport appState from \"../stores\";\r\nimport { requestNeighbors } from \"../ipc/client\";\r\n\r\nexport default class ThreeJSVis extends React.Component {\r\n  componentDidMount() {\r\n    console.log(\"!!!!!\");\r\n    const graphFrame = new Frame(appState.graph.computedGraph);\r\n    graphFrame.init();\r\n    graphFrame.display();\r\n    appState.graph.frame = graphFrame;\r\n    graphFrame.ee.on(\"select-nodes\", nodes => {\r\n      appState.graph.selectedNodes = nodes;\r\n    });\r\n    graphFrame.ee.on(\"show-node-label\", nodes => {\r\n      appState.graph.nodesShowingLabels = nodes;\r\n    });\r\n    graphFrame.ee.on(\"right-click\", data => {\r\n      const menu = MenuFactory({\r\n        children: [\r\n          MenuItemFactory({\r\n            onClick: () => {\r\n              appState.graph.frame.toggleSelectedLabels();\r\n            },\r\n            text: `Toggle Labels`\r\n          }),\r\n          MenuItemFactory({\r\n            onClick: () => {\r\n              appState.graph.frame.unpinSelectedNodes();\r\n            },\r\n            text: `Unpin Selected`\r\n          }),\r\n          // MenuItemFactory({\r\n          //   onClick: () => {\r\n          //     requestNeighbors(\r\n          //       appState.graph.frame.rightClickedNode.id,\r\n          //       \"degree\",\r\n          //       \"10\"\r\n          //     );\r\n          //   },\r\n          //   text: `Add 10 Neighbors by Degree`\r\n          // }),\r\n          // MenuItemFactory({\r\n          //   onClick: () => {\r\n          //     requestNeighbors(\r\n          //       appState.graph.frame.rightClickedNode.id,\r\n          //       \"pagerank\",\r\n          //       \"10\"\r\n          //     );\r\n          //   },\r\n          //   text: `Add 10 Neighbors by Pagerank`\r\n          // })\r\n        ]\r\n      });\r\n      ContextMenu.show(menu, { left: data.pageX, top: data.pageY }, () => {\r\n        // onMenuClose\r\n        console.log(\"ContextMenu closed\");\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"graph-container\"\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"90vh\",\r\n          flex: \"1\",\r\n          position: \"absolute\"\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Popover2, Select } from \"@blueprintjs/labs\";\r\nimport classnames from \"classnames\";\r\nimport { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport { scales } from \"../../constants/index\";\r\nimport Collapsable from \"../utils/Collapsable\";\r\nimport SimpleSelect from \"../utils/SimpleSelect\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass GlobalPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeOutRef: null,\r\n      sizeOptionOpen: false,\r\n      colorOptionOpen: false,\r\n      shapeOptionOpen: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Collapsable\r\n          name=\"Color\"\r\n          isOpen={this.state.colorOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              colorOptionOpen: !this.state.colorOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Color by:\r\n            <SimpleSelect\r\n              items={appState.graph.allPropertiesKeyList}\r\n              onSelect={it => (appState.graph.nodes.colorBy = it)}\r\n              value={appState.graph.nodes.colorBy}\r\n            />\r\n            <br />\r\n            With scale:\r\n            <SimpleSelect\r\n              items={Object.keys(scales)}\r\n              onSelect={it => (appState.graph.nodes.color.scale = it)}\r\n              value={appState.graph.nodes.color.scale}\r\n            />\r\n            <br />\r\n            Using Gradient from\r\n            <Popover2>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.nodes.color.from\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.nodes.color.from}\r\n                onChange={it => (appState.graph.nodes.color.from = it.hex)}\r\n              />\r\n            </Popover2>\r\n            to\r\n            <Popover2>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.nodes.color.to\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.nodes.color.to}\r\n                onChange={it => (appState.graph.nodes.color.to = it.hex)}\r\n              />\r\n            </Popover2>\r\n            :\r\n            <br />\r\n            <svg width=\"220\" height=\"30\" className=\"gradient-preview\">\r\n              <defs>\r\n                <linearGradient\r\n                  x1=\"0%\"\r\n                  y1=\"50%\"\r\n                  x2=\"100%\"\r\n                  y2=\"50%\"\r\n                  id=\"theGradient\"\r\n                >\r\n                  <stop\r\n                    stopColor={appState.graph.nodes.color.from}\r\n                    stopOpacity=\"1\"\r\n                    offset=\"0%\"\r\n                  />\r\n                  <stop\r\n                    stopColor={appState.graph.nodes.color.to}\r\n                    stopOpacity=\"1\"\r\n                    offset=\"100%\"\r\n                  />\r\n                </linearGradient>\r\n              </defs>\r\n              <rect\r\n                x=\"0\"\r\n                y=\"0\"\r\n                width=\"220\"\r\n                height=\"50\"\r\n                fill=\"url(#theGradient)\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </Collapsable>\r\n\r\n        <Collapsable\r\n          name=\"Size\"\r\n          isOpen={this.state.sizeOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              sizeOptionOpen: !this.state.sizeOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Scale by:\r\n            <Select\r\n              items={appState.graph.allPropertiesKeyList}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => (appState.graph.nodes.sizeBy = it)}\r\n            >\r\n              <Button text={appState.graph.nodes.sizeBy} />\r\n            </Select>\r\n            <br />\r\n            With scale:\r\n            <Select\r\n              items={Object.keys(scales)}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => (appState.graph.nodes.size.scale = it)}\r\n            >\r\n              <Button text={appState.graph.nodes.size.scale} />\r\n            </Select>\r\n            <br />\r\n            Size Range:\r\n            <br />\r\n            <RangeSlider\r\n              min={1}\r\n              max={20}\r\n              stepSize={0.1}\r\n              labelStepSize={5}\r\n              onChange={([a, b]) => {\r\n                runInAction(\"update scale\", () => {\r\n                  appState.graph.nodes.size.min = a;\r\n                  appState.graph.nodes.size.max = b;\r\n                });\r\n              }}\r\n              value={[\r\n                appState.graph.nodes.size.min,\r\n                appState.graph.nodes.size.max\r\n              ]}\r\n            />\r\n          </div>\r\n        </Collapsable>\r\n\r\n        <Collapsable\r\n          name=\"Shape\"\r\n          isOpen={this.state.shapeOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              shapeOptionOpen: !this.state.shapeOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Node Shape:\r\n            <Select\r\n              items={[\r\n                \"circle\",\r\n                \"square\",\r\n                \"triangle\",\r\n                \"pentagon\",\r\n                \"hexagon\",\r\n                \"octagon\"\r\n              ]}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => (appState.graph.nodes.shape = it)}\r\n            >\r\n              <Button text={appState.graph.nodes.shape} />\r\n            </Select>\r\n          </div>\r\n        </Collapsable>\r\n        <small>\r\n          {pluralize(\"node\", appState.graph.overrides.size, true)}<span> </span>\r\n          have override styles.\r\n          <a onClick={() => (appState.graph.overrides = new Map())}>Clear.</a>\r\n        </small>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalPanel;","import React from \"react\";\r\nimport { Classes, Collapse, Switch } from \"@blueprintjs/core\";\r\n\r\nexport default ({ name, isOpen, onToggle, children }) => (\r\n  <div>\r\n    <Switch\r\n      label={name}\r\n      checked={isOpen}\r\n      onChange={onToggle}\r\n      className={Classes.ALIGN_RIGHT}\r\n    />\r\n    <Collapse isOpen={isOpen}>{children}</Collapse>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Popover2, Select } from \"@blueprintjs/labs\";\r\nimport classnames from \"classnames\";\r\nimport { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\nimport SwitchCollapsable from \"../utils/SwitchCollapsable\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass SelectionPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shapeOptionOpen: false,\r\n      sizeOptionOpen: false,\r\n      colorOptionOpen: false,\r\n      labelOptionOpen: false\r\n    };\r\n  }\r\n\r\n  twoLayerUpdate = (nodeId, key, value) => {\r\n    if (!appState.graph.overrides.has(nodeId)) {\r\n      appState.graph.overrides.set(nodeId, new Map());\r\n    }\r\n    const nodeAttrs = appState.graph.overrides.get(nodeId);\r\n    if (value !== null) {\r\n      nodeAttrs.set(key, value);\r\n    } else {\r\n      nodeAttrs.delete(key);\r\n      if (nodeAttrs.size === 0) {\r\n        appState.graph.overrides.delete(nodeId);\r\n      }\r\n    }\r\n  };\r\n\r\n  batchTwoLayerUpdate = (nodes, key, value) => {\r\n    runInAction(\"update entire selection\", () => {\r\n      nodes.forEach(n => this.twoLayerUpdate(n.data.ref.id, key, value));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SwitchCollapsable\r\n          name=\"Override Size\"\r\n          isOpen={this.state.sizeOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.sizeOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  sizeOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"size\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  sizeOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"size\",\r\n                    appState.graph.overrideConfig.size\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <Slider\r\n              min={1}\r\n              max={20}\r\n              stepSize={0.1}\r\n              labelStepSize={5}\r\n              onChange={it => {\r\n                appState.graph.overrideConfig.size = it;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"size\",\r\n                  it\r\n                );\r\n              }}\r\n              value={appState.graph.overrideConfig.size}\r\n            />\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <SwitchCollapsable\r\n          name=\"Override Color\"\r\n          isOpen={this.state.colorOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.colorOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  colorOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  colorOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    appState.graph.overrideConfig.color\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Choose Color:\r\n            <Popover2>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.overrideConfig.color\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.overrideConfig.color}\r\n                onChange={it => {\r\n                  appState.graph.overrideConfig.color = it.hex;\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    it.hex\r\n                  );\r\n                }}\r\n              />\r\n            </Popover2>\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <SwitchCollapsable\r\n          name=\"Override Label\"\r\n          isOpen={this.state.labelOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.labelOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  labelOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"label\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  labelOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"label\",\r\n                    appState.graph.overrideConfig.label\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Custom Label:\r\n            <input\r\n              value={appState.graph.overrideConfig.label}\r\n              onChange={it => {\r\n                appState.graph.overrideConfig.label = it.target.value;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"label\",\r\n                  it.target.value\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <SwitchCollapsable\r\n          name=\"Override Shape\"\r\n          isOpen={this.state.shapeOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.shapeOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  shapeOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"shape\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  shapeOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"shape\",\r\n                    appState.graph.overrideConfig.shape\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Node Shape:\r\n            <Select\r\n              items={[\r\n                \"circle\",\r\n                \"square\",\r\n                \"triangle\",\r\n                \"pentagon\",\r\n                \"hexagon\",\r\n                \"octagon\"\r\n              ]}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => {\r\n                appState.graph.overrideConfig.shape = it;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"shape\",\r\n                  it\r\n                );\r\n              }}\r\n            >\r\n              <Button text={appState.graph.overrideConfig.shape} />\r\n            </Select>\r\n          </div>\r\n        </SwitchCollapsable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectionPanel;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport GlobalPanel from \"./GlobalPanel\";\r\nimport SelectionPanel from \"./SelectionPanel\";\r\n\r\n@observer\r\nclass NodesPanel extends React.Component {\r\n  getRenderedNodes = () => {\r\n    if (appState.graph.selectedNodes.length === 0) {\r\n      return (\r\n        <div>\r\n          <p>Modifying All Nodes</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <p>{`Modifying ${pluralize(\r\n        \"Node\",\r\n        appState.graph.selectedNodes.length,\r\n        true\r\n      )}`}</p>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.getRenderedNodes()}\r\n        {appState.graph.selectedNodes.length === 0 ? (\r\n          <GlobalPanel />\r\n        ) : (\r\n          <SelectionPanel />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodesPanel;","import React from \"react\";\r\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/labs\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass LabelsPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.showAllLabels()}\r\n        >\r\n          Show All Labels\r\n        </Button>\r\n        <Button\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.hideAllLabels()}\r\n        >\r\n          Hide All Labels\r\n        </Button>\r\n        <Button\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.hideSelectedLabels()}\r\n        >\r\n          Hide Labels of Selected Nodes\r\n        </Button>\r\n        <Button\r\n          iconName=\"eye-on\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.showSelectedLabels()}\r\n        >\r\n          Show Labels of Selected Nodes\r\n        </Button>\r\n        <div style={{height: '30px'}} />\r\n        <h6>Label Size</h6>\r\n        <Slider\r\n          min={0.5}\r\n          max={3}\r\n          stepSize={0.1}\r\n          onChange={value => {\r\n            appState.graph.nodes.labelSize = value;\r\n          }}\r\n          value={appState.graph.nodes.labelSize}\r\n        />\r\n        <div style={{height: '30px'}} />\r\n        <h6>Label Length</h6>\r\n        <Slider\r\n          min={1}\r\n          max={32}\r\n          stepSize={0.1}\r\n          labelStepSize={5}\r\n          onChange={value => {\r\n            appState.graph.nodes.labelLength = value;\r\n          }}\r\n          value={appState.graph.nodes.labelLength}\r\n        />\r\n        <h6>Label By</h6>\r\n        <Select\r\n          items={appState.graph.allPropertiesKeyList}\r\n          itemRenderer={CommonItemRenderer}\r\n          filterable={false}\r\n          onItemSelect={it => (appState.graph.nodes.labelBy = it)}\r\n        >\r\n          <Button text={appState.graph.nodes.labelBy} />\r\n        </Select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabelsPanel;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { Classes } from \"@blueprintjs/core\";\r\nimport appState from \"../../stores\";\r\nimport { observer } from \"mobx-react/index\";\r\n\r\n@observer\r\nclass NodeDetail extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={classnames(\r\n          // 'overlay-card',\r\n          \"right-overlay-card\",\r\n          \"transparent-frame\"\r\n        )}\r\n      >\r\n        <div className={classnames(Classes.CARD, \"node-details-table\")}>\r\n          <table\r\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED)}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {appState.graph.allPropertiesKeyList.map((it, i) => (\r\n                <tr key={`${it}-${i}`}>\r\n                  <td>{it}</td>\r\n                  <td>{this.props.node[it]}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodeDetail;","import React from \"react\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { LegendLinear, LegendSize } from \"@vx/vx\";\r\nimport appState from \"../stores\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction Legends() {\r\n  return (\r\n    <div className=\"legends\">\r\n      <LegendSize\r\n        className=\"scale-legend\"\r\n        direction=\"row\"\r\n        itemDirection=\"column\"\r\n        itemMargin=\"0\"\r\n        shapeMargin=\"5px 0\"\r\n        labelFormat={format(\".4f\")}\r\n        scale={appState.graph.nodeSizeScale}\r\n        shape={props => {\r\n          const { size } = props;\r\n          return (\r\n            <svg width={size} height={size}>\r\n              <circle {...props} r={size / 2} cx={size / 2} cy={size / 2} />\r\n            </svg>\r\n          );\r\n        }}\r\n      />\r\n      <LegendLinear\r\n        direction=\"row\"\r\n        itemDirection=\"column\"\r\n        shape=\"circle\"\r\n        scale={appState.graph.nodeColorScale}\r\n        labelFormat={format(\".4f\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Legends);\r\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores\";\n\n@observer\nclass StatusBar extends React.Component {\n    render() {\n        return (\n            <div\n                className={classnames(\"bottom-status-bar\")}\n                style={{\n                    backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF'\n                }}\n            >\n                <div className={classnames(\"bottom-status-bar__left\")}>{appState.graph.selectedNodes.length} nodes selected</div>\n                <div className={classnames(\"bottom-status-bar__right\")}>Color by: {appState.graph.nodes.colorBy} ({appState.graph.nodes.color.scale}), Size by: {appState.graph.nodes.sizeBy} ({appState.graph.nodes.size.scale})</div>\n            </div>\n        );\n    }\n}\n\nexport default StatusBar;","import React from \"react\";\r\nimport { Classes, Tab2, Tabs2 } from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../stores\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport { addNode } from \"../ipc/client\";\r\nimport NodesPanel from \"./panels/NodesPanel\";\r\nimport LabelsPanel from \"./panels/LabelsPanel\";\r\nimport NodeDetail from \"./panels/NodeDetailPanel\";\r\nimport Legends from \"./Legends\";\r\nimport StatusBar from './StatusBar';\r\n\r\n// TODO: migrate to simple select\r\n\r\n@observer\r\nclass RenderOptionsCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Graph Options</h4>\r\n        <Tabs2 animate id=\"graph-options\">\r\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesPanel />} />\r\n          <Tab2 id=\"labels\" title=\"Labels\" panel={<LabelsPanel />} />\r\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\r\n          <Tabs2.Expander />\r\n        </Tabs2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//\r\n\r\n@observer\r\nclass FloatingCards extends React.Component {\r\n  optionsVisible = {\r\n    left: '0em'\r\n  }\r\n  optionsInvisible = {\r\n   left: '-22em'\r\n  }\r\n  sideButtonVis = {\r\n    marginLeft: '50px'\r\n  }\r\n  sideButtonInv = {\r\n    marginLeft: '-15px'\r\n  }\r\n  toggleOptions = () => {\r\n      appState.preferences.isRenderOptionsCardHidden = !appState.preferences.isRenderOptionsCardHidden;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"floating-overlay\">\r\n        <div className=\"left-cards\">\r\n          {appState.search.panelOpen && (\r\n            <div\r\n              className={classnames(\r\n                Classes.CARD,\r\n                Classes.ELEVATION_2,\r\n                \"overlay-card\",\r\n                \"left-overlay-card\"\r\n              )}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"left\",\r\n                  alignItems: \"left\"\r\n                }}\r\n              >\r\n                <h4 style={{ width: 140 }}>\r\n                  {appState.search.numCandidates} results\r\n                </h4>\r\n                <div style={{ width: 20 }} />\r\n                <h4>Order</h4>\r\n                <div style={{ width: 5 }} />\r\n                <SimpleSelect\r\n                  style={{ \"margin-bottom\": 10 }}\r\n                  items={[...appState.graph.metadata.nodeComputed, \"node_id\"]}\r\n                  onSelect={it => (appState.graph.searchOrder = it)}\r\n                  value={appState.graph.searchOrder}\r\n                />\r\n              </div>\r\n              <table\r\n                className={classnames(\r\n                  Classes.TABLE,\r\n                  Classes.TABLE_STRIPED,\r\n                  Classes.INTERACTIVE\r\n                )}\r\n                style={{\r\n                  width: \"100%\",\r\n                  userSelect: \"none\"\r\n                }}\r\n              >\r\n                <tbody>\r\n                  {appState.search.candidates.map((node, i) => (\r\n                    <tr\r\n                      key={i}\r\n                      onMouseOver={() =>\r\n                        appState.graph.frame.highlightNodeIds(\r\n                          [node.node_id],\r\n                          true\r\n                        )\r\n                      }\r\n                      onMouseDown={() => addNode(node.node_id)}\r\n                      onMouseLeave={() =>\r\n                        appState.graph.frame.highlightNodeIds(\r\n                          [node.node_id],\r\n                          false\r\n                        )\r\n                      }\r\n                    >\r\n                      <td>{node[appState.graph.nodes.labelBy]}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <center>\r\n                <a\r\n                  onMouseDown={() => {\r\n                    if (appState.search.pageNum > 0) {\r\n                      appState.search.pageNum -= 1;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Prev&nbsp;\r\n                </a>\r\n                &nbsp;\r\n                {appState.search.pageNum !== 0 ? (\r\n                  <a\r\n                    onMouseDown={() => {\r\n                      appState.search.pageNum = 0;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }}\r\n                  >\r\n                    1&nbsp;\r\n                  </a>\r\n                ) : (\r\n                  <a\r\n                    style={{\r\n                      color: \"#111111\",\r\n                      pointerEvents: \"none\",\r\n                      cursor: \"default\"\r\n                    }}\r\n                  >\r\n                    {appState.search.pageNum + 1}&nbsp;\r\n                  </a>\r\n                )}\r\n                ...<b>&nbsp;</b>\r\n                {appState.search.pages.map(i => {\r\n                  if (\r\n                    i != 0 &&\r\n                    i != appState.search.maxPage &&\r\n                    i == appState.search.pageNum\r\n                  ) {\r\n                    return (\r\n                      <a\r\n                        key={i}\r\n                        style={{\r\n                          color: \"#111111\",\r\n                          pointerEvents: \"none\",\r\n                          cursor: \"default\"\r\n                        }}\r\n                      >\r\n                        {appState.search.pageNum + 1}&nbsp;\r\n                      </a>\r\n                    );\r\n                  } else if (\r\n                    i != 0 &&\r\n                    i != appState.search.maxPage &&\r\n                    ((i > appState.search.pageNum - 4 &&\r\n                      i < appState.search.pageNum + 4) ||\r\n                      (appState.search.pageNum < 4 && i < 8) ||\r\n                      (appState.search.pageNum > appState.search.maxPage - 4 &&\r\n                        i > appState.search.maxPage - 8))\r\n                  ) {\r\n                    return (\r\n                      <a\r\n                        key={i}\r\n                        onMouseDown={() => {\r\n                          appState.search.pageNum = i;\r\n                          appState.search.candidates = appState.search.allCands.slice(\r\n                            appState.search.pageNum * appState.search.nPerPage,\r\n                            (appState.search.pageNum + 1) *\r\n                              appState.search.nPerPage\r\n                          );\r\n                        }}\r\n                      >\r\n                        {i + 1}&nbsp;\r\n                      </a>\r\n                    );\r\n                  }\r\n                })}\r\n                ...&nbsp;\r\n                {appState.search.pageNum !== appState.search.maxPage ? (\r\n                  <a\r\n                    onMouseDown={() => {\r\n                      appState.search.pageNum = appState.search.maxPage;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }}\r\n                  >\r\n                    {appState.search.maxPage + 1}&nbsp;\r\n                  </a>\r\n                ) : (\r\n                  <a\r\n                    style={{\r\n                      color: \"#111111\",\r\n                      pointerEvents: \"none\",\r\n                      cursor: \"default\"\r\n                    }}\r\n                  >\r\n                    {appState.search.pageNum + 1}\r\n                  </a>\r\n                )}\r\n                &nbsp;\r\n                <a\r\n                  onMouseDown={() => {\r\n                    if (appState.search.pageNum < appState.search.maxPage) {\r\n                      appState.search.pageNum += 1;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </a>\r\n                <br />\r\n                <br />\r\n                <h5>Page {appState.search.pageNum + 1}</h5>\r\n              </center>\r\n            </div>\r\n          )}\r\n          <div\r\n            className={classnames(\r\n              Classes.CARD,\r\n              Classes.ELEVATION_2,\r\n              \"overlay-card\",\r\n              \"left-overlay-card\",\r\n              \"transparent-frame\",\r\n              \"left-cards\"\r\n            )} style = {appState.preferences.isRenderOptionsCardHidden ? this.optionsInvisible : this.optionsVisible}\r\n            >\r\n            <button className = \"openbtn2\" onClick = {this.toggleOptions}> &#8249;\r\n            </button>\r\n            <br/>\r\n            <RenderOptionsCard />\r\n          </div>\r\n          <div className = {classnames(Classes.CARD, Classes.ELEVATION_2, \"overlay-card\",\r\n          \"transparent-frame\")} style = {{width: \"1em\", paddingTop: \"1em\", paddingRight: \"0.7em\", paddingBottom: \"0.5em\", marginLeft: \"-5.4em\"}}>\r\n            <button className = \"openbtn\" onClick = {this.toggleOptions} style = {appState.preferences.isRenderOptionsCardHidden ? this.sideButtonVis : this.sideButtonInv}>\r\n            &#9776;\r\n              </button>\r\n          </div>\r\n        </div>\r\n        {appState.graph.selectedNodes.length === 1 && (\r\n          <NodeDetail node={appState.graph.selectedNodes[0].data.ref} />\r\n        )}\r\n        <Legends />\r\n        <StatusBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FloatingCards;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  FocusStyleManager,\r\n  NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport Dialogs from \"./components/Dialogs\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport WorkspaceView from \"./components/WorkspaceView\";\r\nimport appState from \"./stores/index\";\r\nimport ThreeJSVis from \"./visualizers/ThreeJSVis\";\r\nimport FloatingCards from \"./components/FloatingCards\";\r\nimport registerIPC from \"./ipc/client\";\r\nimport { fetchWorkspaceProjects } from \"./ipc/client\";\r\n\r\nimport keydown, { Keys } from \"react-keydown\";\r\n\r\nregisterIPC();\r\nFocusStyleManager.onlyShowFocusOnTabs();\r\n\r\nfetchWorkspaceProjects();\r\n\r\nappState.preferences.loadUserConfig();\r\n\r\nconst { DELETE, BACKSPACE, P, U } = Keys;\r\n\r\n@keydown\r\n@observer\r\nclass App extends React.Component {\r\n  componentWillReceiveProps({ keydown }) {\r\n    if (keydown.event) {\r\n      if (keydown.event.which === DELETE || keydown.event.which === BACKSPACE) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.removeNodes(appState.graph.frame.getSelectedIds());\r\n          this.forceUpdate();\r\n        }\r\n      } else if (keydown.event.which === P) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.frame.pinSelectedNodes();\r\n        }\r\n      } else if (keydown.event.which === U) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.frame.unpinSelectedNodes();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className={classnames({\r\n          \"app-wrapper\": true,\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n      >\r\n        <Navbar />\r\n        <main className=\"main\">\r\n          {appState.graph.hasGraph ? (\r\n            <ThreeJSVis />\r\n          ) : (\r\n            <WorkspaceView />\r\n          )}\r\n        </main>\r\n        {appState.graph.hasGraph && <FloatingCards />}\r\n        <Dialogs />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/dist/blueprint.css';\nimport '@blueprintjs/table/dist/table.css';\nimport './styles/index.css';\n\nconst render = () => {\n    ReactDOM.render(<App/>, document.getElementById('root'));\n};\n\nrender();","var $ = require(\"jquery\");\r\nfunction Edge(source, target) {\r\n  this.source = source;\r\n  this.target = target;\r\n  this.renderData = {};\r\n}\r\n\r\nfunction Node(id, size = 0.5) {\r\n  this.id = id;\r\n  this.index = id;\r\n  this.in = [];\r\n  this.out = [];\r\n  this.size = size;\r\n  this.renderData = {};\r\n  this.domainData = {};\r\n  this.x = 1;\r\n  this.y = 1;\r\n  this.vx = 1;\r\n  this.vy = 1;\r\n\r\n  /**\r\n   * Tells if a node is connected to a node of a certain id\r\n   */\r\n  this.connectedTo = function(id) {\r\n    outNodeIds = this.out.map(function(outNode) {\r\n      return outNode.id;\r\n    });\r\n    return $.inArray(id, outNodeIds) >= 0;\r\n  };\r\n}\r\n\r\nNode.prototype.connectNode = function(node) {\r\n  if (!this.connectedTo(node.id)) {\r\n    this.out.push(node);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexports.Edge = Edge;\r\nexports.Node = Node;\r\n","var THREE = require(\"three\");\r\n\r\nTHREE.MeshLine = function() {\r\n  this.positions = [];\r\n\r\n  this.previous = [];\r\n  this.next = [];\r\n  this.side = [];\r\n  this.width = [];\r\n  this.indices_array = [];\r\n  this.uvs = [];\r\n  this.counters = [];\r\n  this.geometry = new THREE.BufferGeometry();\r\n\r\n  this.widthCallback = null;\r\n};\r\n\r\nTHREE.MeshLine.prototype.setGeometry = function(g, c) {\r\n  this.widthCallback = c;\r\n\r\n  this.positions = [];\r\n  this.counters = [];\r\n\r\n  if (g instanceof THREE.Geometry) {\r\n    for (var j = 0; j < g.vertices.length; j++) {\r\n      var v = g.vertices[j];\r\n      var c = j / g.vertices.length;\r\n      this.positions.push(v.x, v.y, v.z);\r\n      this.positions.push(v.x, v.y, v.z);\r\n      this.counters.push(c);\r\n      this.counters.push(c);\r\n    }\r\n  }\r\n\r\n  if (g instanceof THREE.BufferGeometry) {\r\n    // read attribute positions ?\r\n  }\r\n\r\n  if (g instanceof Float32Array || g instanceof Array) {\r\n    for (var j = 0; j < g.length; j += 3) {\r\n      var c = j / g.length;\r\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\r\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\r\n      this.counters.push(c);\r\n      this.counters.push(c);\r\n    }\r\n  }\r\n\r\n  this.process();\r\n};\r\n\r\nTHREE.MeshLine.prototype.compareV3 = function(a, b) {\r\n  var aa = a * 6;\r\n  var ab = b * 6;\r\n  return (\r\n    this.positions[aa] === this.positions[ab] &&\r\n    this.positions[aa + 1] === this.positions[ab + 1] &&\r\n    this.positions[aa + 2] === this.positions[ab + 2]\r\n  );\r\n};\r\n\r\nTHREE.MeshLine.prototype.copyV3 = function(a) {\r\n  var aa = a * 6;\r\n  return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\r\n};\r\n\r\nTHREE.MeshLine.prototype.process = function() {\r\n  var l = this.positions.length / 6;\r\n\r\n  this.previous = [];\r\n  this.next = [];\r\n  this.side = [];\r\n  this.width = [];\r\n  this.indices_array = [];\r\n  this.uvs = [];\r\n\r\n  for (var j = 0; j < l; j++) {\r\n    this.side.push(1);\r\n    this.side.push(-1);\r\n  }\r\n\r\n  var w;\r\n  for (var j = 0; j < l; j++) {\r\n    if (this.widthCallback) w = this.widthCallback(j / (l - 1));\r\n    else w = 1;\r\n    this.width.push(w);\r\n    this.width.push(w);\r\n  }\r\n\r\n  for (var j = 0; j < l; j++) {\r\n    this.uvs.push(j / (l - 1), 0);\r\n    this.uvs.push(j / (l - 1), 1);\r\n  }\r\n\r\n  var v;\r\n\r\n  if (this.compareV3(0, l - 1)) {\r\n    v = this.copyV3(l - 2);\r\n  } else {\r\n    v = this.copyV3(0);\r\n  }\r\n  this.previous.push(v[0], v[1], v[2]);\r\n  this.previous.push(v[0], v[1], v[2]);\r\n  for (var j = 0; j < l - 1; j++) {\r\n    v = this.copyV3(j);\r\n    this.previous.push(v[0], v[1], v[2]);\r\n    this.previous.push(v[0], v[1], v[2]);\r\n  }\r\n\r\n  for (var j = 1; j < l; j++) {\r\n    v = this.copyV3(j);\r\n    this.next.push(v[0], v[1], v[2]);\r\n    this.next.push(v[0], v[1], v[2]);\r\n  }\r\n\r\n  if (this.compareV3(l - 1, 0)) {\r\n    v = this.copyV3(1);\r\n  } else {\r\n    v = this.copyV3(l - 1);\r\n  }\r\n  this.next.push(v[0], v[1], v[2]);\r\n  this.next.push(v[0], v[1], v[2]);\r\n\r\n  for (var j = 0; j < l - 1; j++) {\r\n    var n = j * 2;\r\n    this.indices_array.push(n, n + 1, n + 2);\r\n    this.indices_array.push(n + 2, n + 1, n + 3);\r\n  }\r\n\r\n  if (!this.attributes) {\r\n    this.attributes = {\r\n      position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\r\n      previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\r\n      next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\r\n      side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\r\n      width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\r\n      uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\r\n      index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\r\n      counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\r\n    };\r\n  } else {\r\n    this.attributes.position.copyArray(new Float32Array(this.positions));\r\n    this.attributes.position.needsUpdate = true;\r\n    this.attributes.previous.copyArray(new Float32Array(this.previous));\r\n    this.attributes.previous.needsUpdate = true;\r\n    this.attributes.next.copyArray(new Float32Array(this.next));\r\n    this.attributes.next.needsUpdate = true;\r\n    this.attributes.side.copyArray(new Float32Array(this.side));\r\n    this.attributes.side.needsUpdate = true;\r\n    this.attributes.width.copyArray(new Float32Array(this.width));\r\n    this.attributes.width.needsUpdate = true;\r\n    this.attributes.uv.copyArray(new Float32Array(this.uvs));\r\n    this.attributes.uv.needsUpdate = true;\r\n    this.attributes.index.copyArray(new Uint16Array(this.indices_array));\r\n    this.attributes.index.needsUpdate = true;\r\n  }\r\n\r\n  this.geometry.addAttribute(\"position\", this.attributes.position);\r\n  this.geometry.addAttribute(\"previous\", this.attributes.previous);\r\n  this.geometry.addAttribute(\"next\", this.attributes.next);\r\n  this.geometry.addAttribute(\"side\", this.attributes.side);\r\n  this.geometry.addAttribute(\"width\", this.attributes.width);\r\n  this.geometry.addAttribute(\"uv\", this.attributes.uv);\r\n  this.geometry.addAttribute(\"counters\", this.attributes.counters);\r\n\r\n  this.geometry.setIndex(this.attributes.index);\r\n};\r\n\r\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\r\n  var i;\r\n\r\n  src = src.subarray || src.slice ? src : src.buffer;\r\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\r\n\r\n  src = srcOffset\r\n    ? src.subarray\r\n      ? src.subarray(srcOffset, length && srcOffset + length)\r\n      : src.slice(srcOffset, length && srcOffset + length)\r\n    : src;\r\n\r\n  if (dst.set) {\r\n    dst.set(src, dstOffset);\r\n  } else {\r\n    for (i = 0; i < src.length; i++) {\r\n      dst[i + dstOffset] = src[i];\r\n    }\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Fast method to advance the line by one position.  The oldest position is removed.\r\n * @param position\r\n */\r\nTHREE.MeshLine.prototype.advance = function(position) {\r\n  var positions = this.attributes.position.array;\r\n  var previous = this.attributes.previous.array;\r\n  var next = this.attributes.next.array;\r\n  var l = positions.length;\r\n\r\n  // PREVIOUS\r\n  memcpy(positions, 0, previous, 0, l);\r\n\r\n  // POSITIONS\r\n  memcpy(positions, 6, positions, 0, l - 6);\r\n\r\n  positions[l - 6] = position.x;\r\n  positions[l - 5] = position.y;\r\n  positions[l - 4] = position.z;\r\n  positions[l - 3] = position.x;\r\n  positions[l - 2] = position.y;\r\n  positions[l - 1] = position.z;\r\n\r\n  // NEXT\r\n  memcpy(positions, 6, next, 0, l - 6);\r\n\r\n  next[l - 6] = position.x;\r\n  next[l - 5] = position.y;\r\n  next[l - 4] = position.z;\r\n  next[l - 3] = position.x;\r\n  next[l - 2] = position.y;\r\n  next[l - 1] = position.z;\r\n\r\n  this.attributes.position.needsUpdate = true;\r\n  this.attributes.previous.needsUpdate = true;\r\n  this.attributes.next.needsUpdate = true;\r\n};\r\n\r\nTHREE.MeshLineMaterial = function(parameters) {\r\n  var vertexShaderSource = [\r\n    \"precision highp float;\",\r\n    \"\",\r\n    \"attribute vec3 position;\",\r\n    \"attribute vec3 previous;\",\r\n    \"attribute vec3 next;\",\r\n    \"attribute float side;\",\r\n    \"attribute float width;\",\r\n    \"attribute vec2 uv;\",\r\n    \"attribute float counters;\",\r\n    \"\",\r\n    \"uniform mat4 projectionMatrix;\",\r\n    \"uniform mat4 modelViewMatrix;\",\r\n    \"uniform vec2 resolution;\",\r\n    \"uniform float lineWidth;\",\r\n    \"uniform vec3 color;\",\r\n    \"uniform float opacity;\",\r\n    \"uniform float near;\",\r\n    \"uniform float far;\",\r\n    \"uniform float sizeAttenuation;\",\r\n    \"\",\r\n    \"varying vec2 vUV;\",\r\n    \"varying vec4 vColor;\",\r\n    \"varying vec3 vPosition;\",\r\n    \"varying float vCounters;\",\r\n    \"\",\r\n    \"vec2 fix( vec4 i, float aspect ) {\",\r\n    \"\",\r\n    \"    vec2 res = i.xy / i.w;\",\r\n    \"    res.x *= aspect;\",\r\n    \"\t vCounters = counters;\",\r\n    \"    return res;\",\r\n    \"\",\r\n    \"}\",\r\n    \"\",\r\n    \"void main() {\",\r\n    \"\",\r\n    \"    float aspect = resolution.x / resolution.y;\",\r\n    \"\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\",\r\n    \"\",\r\n    \"    vColor = vec4( color, opacity );\",\r\n    \"    vUV = uv;\",\r\n    \"\",\r\n    \"    mat4 m = projectionMatrix * modelViewMatrix;\",\r\n    \"    vec4 finalPosition = m * vec4( position, 1.0 );\",\r\n    \"    vec4 prevPos = m * vec4( previous, 1.0 );\",\r\n    \"    vec4 nextPos = m * vec4( next, 1.0 );\",\r\n    \"\",\r\n    \"    vec2 currentP = fix( finalPosition, aspect );\",\r\n    \"    vec2 prevP = fix( prevPos, aspect );\",\r\n    \"    vec2 nextP = fix( nextPos, aspect );\",\r\n    \"\",\r\n    \"\t float pixelWidth = finalPosition.w * pixelWidthRatio;\",\r\n    \"    float w = 1.8 * pixelWidth * lineWidth * width;\",\r\n    \"\",\r\n    \"    if( sizeAttenuation == 1. ) {\",\r\n    \"        w = 1.8 * lineWidth * width;\",\r\n    \"    }\",\r\n    \"\",\r\n    \"    vec2 dir;\",\r\n    \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\r\n    \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\r\n    \"    else {\",\r\n    \"        vec2 dir1 = normalize( currentP - prevP );\",\r\n    \"        vec2 dir2 = normalize( nextP - currentP );\",\r\n    \"        dir = normalize( dir1 + dir2 );\",\r\n    \"\",\r\n    \"        vec2 perp = vec2( -dir1.y, dir1.x );\",\r\n    \"        vec2 miter = vec2( -dir.y, dir.x );\",\r\n    \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\r\n    \"\",\r\n    \"    }\",\r\n    \"\",\r\n    \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\r\n    \"    vec2 normal = vec2( -dir.y, dir.x );\",\r\n    \"    normal.x /= aspect;\",\r\n    \"    normal *= .5 * w;\",\r\n    \"\",\r\n    \"    vec4 offset = vec4( normal * side, 0.0, 1.0 );\",\r\n    \"    finalPosition.xy += offset.xy;\",\r\n    \"\",\r\n    \"\t vPosition = ( modelViewMatrix * vec4( position, 1. ) ).xyz;\",\r\n    \"    gl_Position = finalPosition;\",\r\n    \"\",\r\n    \"}\"\r\n  ];\r\n\r\n  var fragmentShaderSource = [\r\n    \"#extension GL_OES_standard_derivatives : enable\",\r\n    \"precision mediump float;\",\r\n    \"\",\r\n    \"uniform sampler2D map;\",\r\n    \"uniform float useMap;\",\r\n    \"uniform float useDash;\",\r\n    \"uniform vec2 dashArray;\",\r\n    \"uniform float visibility;\",\r\n    \"uniform float alphaTest;\",\r\n    \"\",\r\n    \"varying vec2 vUV;\",\r\n    \"varying vec4 vColor;\",\r\n    \"varying vec3 vPosition;\",\r\n    \"varying float vCounters;\",\r\n    \"\",\r\n    \"void main() {\",\r\n    \"\",\r\n    \"    vec4 c = vColor;\",\r\n    \"\t if( c.a < alphaTest ) discard;\",\r\n    \"    if( useMap == 1. ) c *= texture2D( map, vUV );\",\r\n    \"\t if( useDash == 1. ){\",\r\n    \"\t \t \",\r\n    \"\t }\",\r\n    \"    gl_FragColor = c;\",\r\n    \"\t gl_FragColor.a *= step(vCounters,visibility);\",\r\n    \"}\"\r\n  ];\r\n\r\n  function check(v, d) {\r\n    if (v === undefined) return d;\r\n    return v;\r\n  }\r\n\r\n  THREE.Material.call(this);\r\n\r\n  parameters = parameters || {};\r\n\r\n  this.lineWidth = check(parameters.lineWidth, 1);\r\n  this.map = check(parameters.map, null);\r\n  this.useMap = check(parameters.useMap, 0);\r\n  this.color = check(parameters.color, new THREE.Color(0xffffff));\r\n  this.opacity = check(parameters.opacity, 1);\r\n  this.resolution = check(parameters.resolution, new THREE.Vector2(1, 1));\r\n  this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\r\n  this.near = check(parameters.near, 1);\r\n  this.far = check(parameters.far, 1);\r\n  this.dashArray = check(parameters.dashArray, []);\r\n  this.useDash = this.dashArray !== [] ? 1 : 0;\r\n  this.visibility = check(parameters.visibility, 1);\r\n  this.alphaTest = check(parameters.alphaTest, 0);\r\n\r\n  var material = new THREE.RawShaderMaterial({\r\n    uniforms: {\r\n      lineWidth: { type: \"f\", value: this.lineWidth },\r\n      map: { type: \"t\", value: this.map },\r\n      useMap: { type: \"f\", value: this.useMap },\r\n      color: { type: \"c\", value: this.color },\r\n      opacity: { type: \"f\", value: this.opacity },\r\n      resolution: { type: \"v2\", value: this.resolution },\r\n      sizeAttenuation: { type: \"f\", value: this.sizeAttenuation },\r\n      near: { type: \"f\", value: this.near },\r\n      far: { type: \"f\", value: this.far },\r\n      dashArray: {\r\n        type: \"v2\",\r\n        value: new THREE.Vector2(this.dashArray[0], this.dashArray[1])\r\n      },\r\n      useDash: { type: \"f\", value: this.useDash },\r\n      visibility: { type: \"f\", value: this.visibility },\r\n      alphaTest: { type: \"f\", value: this.alphaTest }\r\n    },\r\n    vertexShader: vertexShaderSource.join(\"\\r\\n\"),\r\n    fragmentShader: fragmentShaderSource.join(\"\\r\\n\")\r\n  });\r\n\r\n  delete parameters.lineWidth;\r\n  delete parameters.map;\r\n  delete parameters.useMap;\r\n  delete parameters.color;\r\n  delete parameters.opacity;\r\n  delete parameters.resolution;\r\n  delete parameters.sizeAttenuation;\r\n  delete parameters.near;\r\n  delete parameters.far;\r\n  delete parameters.dashArray;\r\n  delete parameters.visibility;\r\n  delete parameters.alphaTest;\r\n\r\n  material.type = \"MeshLineMaterial\";\r\n\r\n  material.setValues(parameters);\r\n\r\n  return material;\r\n};\r\n\r\nTHREE.MeshLineMaterial.prototype = Object.create(THREE.Material.prototype);\r\nTHREE.MeshLineMaterial.prototype.constructor = THREE.MeshLineMaterial;\r\n\r\nTHREE.MeshLineMaterial.prototype.copy = function(source) {\r\n  THREE.Material.prototype.copy.call(this, source);\r\n\r\n  this.lineWidth = source.lineWidth;\r\n  this.map = source.map;\r\n  this.useMap = source.useMap;\r\n  this.color.copy(source.color);\r\n  this.opacity = source.opacity;\r\n  this.resolution.copy(source.resolution);\r\n  this.sizeAttenuation = source.sizeAttenuation;\r\n  this.near = source.near;\r\n  this.far = source.far;\r\n\r\n  return this;\r\n};\r\n\r\nexports.MeshLine = THREE.MeshLine;\r\nexports.MeshLineMaterial = THREE.MeshLineMaterial;\r\n","var Frame = require(\"./src/process\").Frame;\r\n\r\nexports.Frame = Frame;\r\n\r\nvar graph = require(\"ngraph.generators\").balancedBinTree(5);\r\n\r\nexports.graph = graph;\r\n\r\nif (window) {\r\n  window.Argo = exports;\r\n}\r\n","var THREE = require(\"three\");\r\nvar STATS = require(\"stats.js\");\r\nwindow.THREE = THREE;\r\nrequire(\"../include/QuickHull\");\r\nrequire(\"../include/ConvexGeometry\");\r\nrequire(\"../include/CSS3DRenderer\");\r\nvar Edge = require(\"./structure/node\").Edge;\r\nvar Node = require(\"./structure/node\").Node;\r\nvar OrbitControls = require(\"../include/OrbitControls\")(THREE); //'three-orbit-controls')(THREE);\r\nTHREE.MeshLine = require(\"../include/THREE.MeshLine\").MeshLine;\r\nTHREE.MeshLineMaterial = require(\"../include/THREE.MeshLine\").MeshLineMaterial;\r\nvar d3 = require(\"d3\");\r\nvar ee = require(\"event-emitter\");\r\n\r\nexports.default = {\r\n  THREE: THREE,\r\n  STATS: STATS, // stats.js panel for showing fps and other stats.\r\n  STATS_SHOW: false,\r\n  Edge: Edge,\r\n  Node: Node,\r\n  OrbitControls: OrbitControls,\r\n  d3: d3,\r\n  ee: ee,\r\n  NODE_COLOR: 0x0055aa,\r\n  NODE_HIGHLIGHT: 0x3498db,\r\n  ADJACENT_HIGHLIGHT: 0x95a5a6,\r\n  SEARCH_HIGHLIGHT: 0xe67e22,\r\n  NODE_HTEXTURE: \"http://i.imgur.com/xzkxSIw.png\",\r\n  NODE_TEXTURE: \"http://i.imgur.com/reTXqiM.png\",\r\n  NODE_NO_HTEX: true,\r\n  NODE_NO_TEX: true,\r\n  NODE_NO_HCOLOR: false,\r\n  NODE_NO_COLOR: false,\r\n  NODE_NO_HIGHLIGHT: false,\r\n  NODE_NEIGHBOR_HIGHLIGHT: true,\r\n  NODE_SHAPE: \"square\",\r\n  NODE_HSHAPE: \"square\",\r\n  NODE_SIZE: 5,\r\n  HIGHLIGHT_SIZE: 1.0,\r\n  LAYOUT: \"d3\",\r\n  LINES: \"notfancy\",\r\n  MAP: true,\r\n  MAP_RENDER_PER_NUMBER_OF_FRAME: 10,\r\n  TEXT_SCALE: true,\r\n  TEXT_SIZE: 0.07,\r\n  TEXT_X_OFFSET: 0.52,\r\n  TEXT_Y_OFFSET: 0.35,\r\n  TEXT_BACK_COLOR: \"rgba(100, 100, 200, 0)\",\r\n  TEXT_OPACITY: \"1\",\r\n  TEXT_WIREFRAME: false,\r\n  PIN_COLOR: 0xffffff\r\n};\r\n","var def = require(\"./imports\").default;\r\nconst spawn = require(\"threads\").spawn;\r\nvar THREE = def.THREE;\r\nvar STATS = def.STATS;\r\nvar STATS_SHOW = def.STATS_SHOW;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nvar Frame = function(graph, options) {\r\n  // Needed to reference \"this\" in functions\r\n  var self = this;\r\n\r\n  // Options\r\n  this.inGraph = graph;\r\n  this.options = options || {\r\n    layout: def.LAYOUT\r\n  };\r\n  this.layout_options = this.options.graphLayout || {};\r\n\r\n  this.lineObjects = [];\r\n  this.lineIndices = [];\r\n  this.MAX_LINES = 100000;\r\n  this.textureLoader = new THREE.TextureLoader();\r\n  this.textureLoader.crossOrigin = true;\r\n  this.oldIntersect = -1;\r\n  this.selection = [];\r\n  this.fov = 60;\r\n  this.near = 1;\r\n  this.far = 5000;\r\n  this.mouseStart = new THREE.Vector3(0, 0, 0);\r\n  this.mouseEnd = new THREE.Vector3(0, 0, 0);\r\n  this.dragging = null;\r\n  this.showBox = false;\r\n  this.renderWidth = 500;\r\n  this.renderHeight = 500;\r\n  this.maxZoom = 1000;\r\n  this.paused = false;\r\n  this.mouseDown = false;\r\n  this.ee = ee({});\r\n  this.layoutInit = true;\r\n  this.labelSize = 6;\r\n  this.relativeFontSize = 1;\r\n  this.mapShowing = def.MAP;\r\n  this.mapRenderPerNumberOfFrame = def.MAP_RENDER_PER_NUMBER_OF_FRAME;\r\n  this.darkMode = true;\r\n  this.lastNode = null;\r\n  this.fakeNodes = [];\r\n  this.rightClickedNode = null;\r\n  this.doHighlightNeighbors = def.NODE_NEIGHBOR_HIGHLIGHT;\r\n  this.prevHighlights = [];\r\n  this.neighborHost = null;\r\n  this.hull = null;\r\n\r\n  require(\"./utils/utils\")(this);\r\n  require(\"./setup\")(this);\r\n  require(\"./addremove\")(this);\r\n  require(\"./highlighting\")(this);\r\n  require(\"./select\")(this);\r\n  require(\"./mouse\")(this);\r\n  require(\"./modify\")(this);\r\n  require(\"./draw\")(this);\r\n  require(\"./api\")(this);\r\n  require(\"./update\")(this);\r\n\r\n  /**\r\n   *  Starting point, run once to create scene\r\n   */\r\n  let stats = new STATS();\r\n  this.display = function() {\r\n    if (STATS_SHOW) {\r\n      stats.showPanel(0); // show fps panel\r\n      document.body.appendChild(stats.dom);\r\n    }\r\n    this.animate();\r\n  };\r\n\r\n  /**\r\n   *  Creates loop called on every animation frame\r\n   */\r\n  \r\n  let fps = 30;\r\n  // let now;\r\n  // let then = Date.now();\r\n  // let interval = 1000 / fps;\r\n  // let delta;\r\n  this.animate = function() {\r\n    if (STATS_SHOW) {\r\n      stats.begin(); // Begin stats.js panel timing\r\n    }\r\n    \r\n    self.controls.update();\r\n    self.render();\r\n\r\n    if (STATS_SHOW) {\r\n      stats.end(); // End stats.js panel timing\r\n    }\r\n    \r\n    // now = Date.now();\r\n    // delta = now - then;\r\n    // if (delta > interval) {\r\n    //   then = now;\r\n    //   self.controls.update();\r\n    //   self.render();\r\n    // }\r\n    requestAnimationFrame(self.animate);\r\n  };\r\n\r\n  /**\r\n   *  Set initial properties\r\n   */\r\n  this.init = function(aa = true) {\r\n    self.renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      antialias: aa,\r\n      preserveDrawingBuffer: true,\r\n    });\r\n    //self.renderer.setPixelRatio(window.devicePixelRatio);\r\n    //self.renderer.setPixelRatio(0.1);\r\n    self.setDisplayParams();\r\n    self.setRendererParams();\r\n\r\n    self.setupCamera();\r\n    self.setupMinimap();\r\n    self.setupGeometry();\r\n    self.setupSelect();\r\n\r\n    self.element.appendChild(self.renderer.domElement);\r\n    self.element.appendChild(self.cssRenderer.domElement);\r\n\r\n    self.canvas = document.querySelector(\"graph-container\");\r\n\r\n    self.setupLayout();\r\n\r\n    self.setupGraph();\r\n\r\n    window.addEventListener(\r\n      \"resize\",\r\n      function(e) {\r\n        e.preventDefault();\r\n        self.onWindowResize();\r\n      },\r\n      false\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Change camera on window resize\r\n   */\r\n  self.onWindowResize = function() {\r\n    self.clientRect = self.element.getBoundingClientRect();\r\n    self.width = self.clientRect.width;\r\n    self.height = self.clientRect.height;\r\n    self.minimap.width = 0.2 * self.height;\r\n    self.minimap.height = 0.2 * self.height;\r\n    self.aspect = self.width / self.height;\r\n    self.ccamera.aspect = self.aspect;\r\n    self.ccamera.updateProjectionMatrix();\r\n\r\n    self.renderer.setSize(self.width, self.height);\r\n    self.cssRenderer.setSize(self.width, self.height);\r\n  };\r\n\r\n  /**\r\n   *  Draws graphics\r\n   */\r\n  var stage = 0;\r\n  var numberOfFrameSinceMiniMapRerender = 1;\r\n  this.render = function() {\r\n    self.updateCamera();\r\n    self.updateNodes();\r\n    if (stage == 1) {\r\n      self.updateLabels();\r\n      self.updateEdges();\r\n      stage = 0;\r\n    }\r\n    stage += 1;\r\n    numberOfFrameSinceMiniMapRerender += 1;\r\n    if (self.options.layout == \"d3\") {\r\n      if (self.layoutInit == true) {\r\n        var nodes = [];\r\n        self.graph.forEachNode(function(node) {\r\n          nodes.push(node);\r\n        });\r\n        self.force.nodes(nodes);\r\n        self.force.force(\"link\", d3.forceLink(self.lineIndices));\r\n        self.force.restart();\r\n        self.force.stop();\r\n        if (self.tickToStatic && !self.paused) {\r\n          // We don't tick and pause for now\r\n          for (\r\n            var i = 0,\r\n              n = Math.ceil(\r\n                Math.log(self.force.alphaMin()) /\r\n                  Math.log(1 - self.force.alphaDecay())\r\n              );\r\n            i < n;\r\n            ++i\r\n          ) {\r\n            self.force.tick();\r\n          }\r\n          //self.pauseLayout();\r\n        }\r\n        self.layoutInit = false;\r\n      }\r\n    }\r\n    self.renderer.setViewport(0, 0, 1 * self.width, 1 * self.height);\r\n    self.renderer.setScissor(self.minimap.width, 0, 1 * self.width, 1 * self.height);\r\n    self.renderer.setScissorTest(true);\r\n    self.renderer.render(self.scene, self.ccamera);\r\n    self.cssRenderer.render(self.scene, self.ccamera);\r\n\r\n    // Render MiniMap at a lower framerate.\r\n    if (numberOfFrameSinceMiniMapRerender >= this.mapRenderPerNumberOfFrame) {\r\n      numberOfFrameSinceMiniMapRerender = 0;\r\n\r\n      if (self.mapShowing) {\r\n        self.minimap.width = 0.2 * self.height;\r\n        self.minimap.height = 0.2 * self.height;\r\n        self.renderer.setViewport(0, 0, self.minimap.width, self.minimap.height);\r\n        self.renderer.setScissor(0, 0, self.minimap.width, self.minimap.height);\r\n        self.renderer.setScissorTest(true);\r\n        self.renderer.render(self.scene, self.minimap.camera);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexports.Frame = Frame;\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\r\n *\r\n */\r\n\r\n(function() {\r\n  var Visible = 0;\r\n  var Deleted = 1;\r\n\r\n  function QuickHull() {\r\n    this.tolerance = -1;\r\n\r\n    this.faces = []; // the generated faces of the convex hull\r\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\r\n\r\n    // the vertex lists work as follows:\r\n    //\r\n    // let 'a' and 'b' be 'Face' instances\r\n    // let 'v' be points wrapped as instance of 'Vertex'\r\n    //\r\n    //     [v, v, ..., v, v, v, ...]\r\n    //      ^             ^\r\n    //      |             |\r\n    //  a.outside     b.outside\r\n    //\r\n    this.assigned = new VertexList();\r\n    this.unassigned = new VertexList();\r\n\r\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\r\n  }\r\n\r\n  Object.assign(QuickHull.prototype, {\r\n    setFromPoints: function(points) {\r\n      if (Array.isArray(points) !== true) {\r\n        console.error(\"THREE.QuickHull: Points parameter is not an array.\");\r\n      }\r\n\r\n      if (points.length < 4) {\r\n        console.error(\r\n          \"THREE.QuickHull: The algorithm needs at least four points.\"\r\n        );\r\n      }\r\n\r\n      this.makeEmpty();\r\n\r\n      for (var i = 0, l = points.length; i < l; i++) {\r\n        this.vertices.push(new VertexNode(points[i]));\r\n      }\r\n\r\n      this.compute();\r\n\r\n      return this;\r\n    },\r\n\r\n    setFromObject: function(object) {\r\n      var points = [];\r\n\r\n      object.updateMatrixWorld(true);\r\n\r\n      object.traverse(function(node) {\r\n        var i, l, point;\r\n\r\n        var geometry = node.geometry;\r\n\r\n        if (geometry !== undefined) {\r\n          if (geometry.isGeometry) {\r\n            var vertices = geometry.vertices;\r\n\r\n            for (i = 0, l = vertices.length; i < l; i++) {\r\n              point = vertices[i].clone();\r\n              point.applyMatrix4(node.matrixWorld);\r\n\r\n              points.push(point);\r\n            }\r\n          } else if (geometry.isBufferGeometry) {\r\n            var attribute = geometry.attributes.position;\r\n\r\n            if (attribute !== undefined) {\r\n              for (i = 0, l = attribute.count; i < l; i++) {\r\n                point = new THREE.Vector3();\r\n\r\n                point\r\n                  .fromBufferAttribute(attribute, i)\r\n                  .applyMatrix4(node.matrixWorld);\r\n\r\n                points.push(point);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return this.setFromPoints(points);\r\n    },\r\n\r\n    makeEmpty: function() {\r\n      this.faces = [];\r\n      this.vertices = [];\r\n\r\n      return this;\r\n    },\r\n\r\n    // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\r\n\r\n    addVertexToFace: function(vertex, face) {\r\n      vertex.face = face;\r\n\r\n      if (face.outside === null) {\r\n        this.assigned.append(vertex);\r\n      } else {\r\n        this.assigned.insertBefore(face.outside, vertex);\r\n      }\r\n\r\n      face.outside = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a vertex from the 'assigned' list of vertices and from the given face\r\n\r\n    removeVertexFromFace: function(vertex, face) {\r\n      if (vertex === face.outside) {\r\n        // fix face.outside link\r\n\r\n        if (vertex.next !== null && vertex.next.face === face) {\r\n          // face has at least 2 outside vertices, move the 'outside' reference\r\n\r\n          face.outside = vertex.next;\r\n        } else {\r\n          // vertex was the only outside vertex that face had\r\n\r\n          face.outside = null;\r\n        }\r\n      }\r\n\r\n      this.assigned.remove(vertex);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\r\n\r\n    removeAllVerticesFromFace: function(face) {\r\n      if (face.outside !== null) {\r\n        // reference to the first and last vertex of this face\r\n\r\n        var start = face.outside;\r\n        var end = face.outside;\r\n\r\n        while (end.next !== null && end.next.face === face) {\r\n          end = end.next;\r\n        }\r\n\r\n        this.assigned.removeSubList(start, end);\r\n\r\n        // fix references\r\n\r\n        start.prev = end.next = null;\r\n        face.outside = null;\r\n\r\n        return start;\r\n      }\r\n    },\r\n\r\n    // Removes all the visible vertices that 'face' is able to see\r\n\r\n    deleteFaceVertices: function(face, absorbingFace) {\r\n      var faceVertices = this.removeAllVerticesFromFace(face);\r\n\r\n      if (faceVertices !== undefined) {\r\n        if (absorbingFace === undefined) {\r\n          // mark the vertices to be reassigned to some other face\r\n\r\n          this.unassigned.appendChain(faceVertices);\r\n        } else {\r\n          // if there's an absorbing face try to assign as many vertices as possible to it\r\n\r\n          var vertex = faceVertices;\r\n\r\n          do {\r\n            // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\r\n            // will be changed by upcoming method calls\r\n\r\n            var nextVertex = vertex.next;\r\n\r\n            var distance = absorbingFace.distanceToPoint(vertex.point);\r\n\r\n            // check if 'vertex' is able to see 'absorbingFace'\r\n\r\n            if (distance > this.tolerance) {\r\n              this.addVertexToFace(vertex, absorbingFace);\r\n            } else {\r\n              this.unassigned.append(vertex);\r\n            }\r\n\r\n            // now assign next vertex\r\n\r\n            vertex = nextVertex;\r\n          } while (vertex !== null);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Reassigns as many vertices as possible from the unassigned list to the new faces\r\n\r\n    resolveUnassignedPoints: function(newFaces) {\r\n      if (this.unassigned.isEmpty() === false) {\r\n        var vertex = this.unassigned.first();\r\n\r\n        do {\r\n          // buffer 'next' reference, see .deleteFaceVertices()\r\n\r\n          var nextVertex = vertex.next;\r\n\r\n          var maxDistance = this.tolerance;\r\n\r\n          var maxFace = null;\r\n\r\n          for (var i = 0; i < newFaces.length; i++) {\r\n            var face = newFaces[i];\r\n\r\n            if (face.mark === Visible) {\r\n              var distance = face.distanceToPoint(vertex.point);\r\n\r\n              if (distance > maxDistance) {\r\n                maxDistance = distance;\r\n                maxFace = face;\r\n              }\r\n\r\n              if (maxDistance > 1000 * this.tolerance) break;\r\n            }\r\n          }\r\n\r\n          // 'maxFace' can be null e.g. if there are identical vertices\r\n\r\n          if (maxFace !== null) {\r\n            this.addVertexToFace(vertex, maxFace);\r\n          }\r\n\r\n          vertex = nextVertex;\r\n        } while (vertex !== null);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Computes the extremes of a simplex which will be the initial hull\r\n\r\n    computeExtremes: function() {\r\n      var min = new THREE.Vector3();\r\n      var max = new THREE.Vector3();\r\n\r\n      var minVertices = [];\r\n      var maxVertices = [];\r\n\r\n      var i, l, j;\r\n\r\n      // initially assume that the first vertex is the min/max\r\n\r\n      for (i = 0; i < 3; i++) {\r\n        minVertices[i] = maxVertices[i] = this.vertices[0];\r\n      }\r\n\r\n      min.copy(this.vertices[0].point);\r\n      max.copy(this.vertices[0].point);\r\n\r\n      // compute the min/max vertex on all six directions\r\n\r\n      for (i = 0, l = this.vertices.length; i < l; i++) {\r\n        var vertex = this.vertices[i];\r\n        var point = vertex.point;\r\n\r\n        // update the min coordinates\r\n\r\n        for (j = 0; j < 3; j++) {\r\n          if (point.getComponent(j) < min.getComponent(j)) {\r\n            min.setComponent(j, point.getComponent(j));\r\n            minVertices[j] = vertex;\r\n          }\r\n        }\r\n\r\n        // update the max coordinates\r\n\r\n        for (j = 0; j < 3; j++) {\r\n          if (point.getComponent(j) > max.getComponent(j)) {\r\n            max.setComponent(j, point.getComponent(j));\r\n            maxVertices[j] = vertex;\r\n          }\r\n        }\r\n      }\r\n\r\n      // use min/max vectors to compute an optimal epsilon\r\n\r\n      this.tolerance =\r\n        3 *\r\n        Number.EPSILON *\r\n        (Math.max(Math.abs(min.x), Math.abs(max.x)) +\r\n          Math.max(Math.abs(min.y), Math.abs(max.y)) +\r\n          Math.max(Math.abs(min.z), Math.abs(max.z)));\r\n\r\n      return { min: minVertices, max: maxVertices };\r\n    },\r\n\r\n    // Computes the initial simplex assigning to its faces all the points\r\n    // that are candidates to form part of the hull\r\n\r\n    computeInitialHull: (function() {\r\n      var line3, plane, closestPoint;\r\n\r\n      return function computeInitialHull() {\r\n        if (line3 === undefined) {\r\n          line3 = new THREE.Line3();\r\n          plane = new THREE.Plane();\r\n          closestPoint = new THREE.Vector3();\r\n        }\r\n\r\n        var vertex,\r\n          vertices = this.vertices;\r\n        var extremes = this.computeExtremes();\r\n        var min = extremes.min;\r\n        var max = extremes.max;\r\n\r\n        var v0, v1, v2, v3;\r\n        var i, l, j;\r\n\r\n        // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\r\n        // (max.x - min.x)\r\n        // (max.y - min.y)\r\n        // (max.z - min.z)\r\n\r\n        var distance,\r\n          maxDistance = 0;\r\n        var index = 0;\r\n\r\n        for (i = 0; i < 3; i++) {\r\n          distance =\r\n            max[i].point.getComponent(i) - min[i].point.getComponent(i);\r\n\r\n          if (distance > maxDistance) {\r\n            maxDistance = distance;\r\n            index = i;\r\n          }\r\n        }\r\n\r\n        v0 = min[index];\r\n        v1 = max[index];\r\n\r\n        // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\r\n\r\n        maxDistance = 0;\r\n        line3.set(v0.point, v1.point);\r\n\r\n        for (i = 0, l = this.vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (vertex !== v0 && vertex !== v1) {\r\n            line3.closestPointToPoint(vertex.point, true, closestPoint);\r\n\r\n            distance = closestPoint.distanceToSquared(vertex.point);\r\n\r\n            if (distance > maxDistance) {\r\n              maxDistance = distance;\r\n              v2 = vertex;\r\n            }\r\n          }\r\n        }\r\n\r\n        // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\r\n\r\n        maxDistance = 0;\r\n        plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\r\n\r\n        for (i = 0, l = this.vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\r\n            distance = Math.abs(plane.distanceToPoint(vertex.point));\r\n\r\n            if (distance > maxDistance) {\r\n              maxDistance = distance;\r\n              v3 = vertex;\r\n            }\r\n          }\r\n        }\r\n\r\n        var faces = [];\r\n\r\n        if (plane.distanceToPoint(v3.point) < 0) {\r\n          // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\r\n\r\n          faces.push(\r\n            Face.create(v0, v1, v2),\r\n            Face.create(v3, v1, v0),\r\n            Face.create(v3, v2, v1),\r\n            Face.create(v3, v0, v2)\r\n          );\r\n\r\n          // set the twin edge\r\n\r\n          for (i = 0; i < 3; i++) {\r\n            j = (i + 1) % 3;\r\n\r\n            // join face[ i ] i > 0, with the first face\r\n\r\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\r\n\r\n            // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\r\n\r\n            faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\r\n          }\r\n        } else {\r\n          // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\r\n\r\n          faces.push(\r\n            Face.create(v0, v2, v1),\r\n            Face.create(v3, v0, v1),\r\n            Face.create(v3, v1, v2),\r\n            Face.create(v3, v2, v0)\r\n          );\r\n\r\n          // set the twin edge\r\n\r\n          for (i = 0; i < 3; i++) {\r\n            j = (i + 1) % 3;\r\n\r\n            // join face[ i ] i > 0, with the first face\r\n\r\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\r\n\r\n            // join face[ i ] with face[ i + 1 ]\r\n\r\n            faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\r\n          }\r\n        }\r\n\r\n        // the initial hull is the tetrahedron\r\n\r\n        for (i = 0; i < 4; i++) {\r\n          this.faces.push(faces[i]);\r\n        }\r\n\r\n        // initial assignment of vertices to the faces of the tetrahedron\r\n\r\n        for (i = 0, l = vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (\r\n            vertex !== v0 &&\r\n            vertex !== v1 &&\r\n            vertex !== v2 &&\r\n            vertex !== v3\r\n          ) {\r\n            maxDistance = this.tolerance;\r\n            var maxFace = null;\r\n\r\n            for (j = 0; j < 4; j++) {\r\n              distance = this.faces[j].distanceToPoint(vertex.point);\r\n\r\n              if (distance > maxDistance) {\r\n                maxDistance = distance;\r\n                maxFace = this.faces[j];\r\n              }\r\n            }\r\n\r\n            if (maxFace !== null) {\r\n              this.addVertexToFace(vertex, maxFace);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      };\r\n    })(),\r\n\r\n    // Removes inactive faces\r\n\r\n    reindexFaces: function() {\r\n      var activeFaces = [];\r\n\r\n      for (var i = 0; i < this.faces.length; i++) {\r\n        var face = this.faces[i];\r\n\r\n        if (face.mark === Visible) {\r\n          activeFaces.push(face);\r\n        }\r\n      }\r\n\r\n      this.faces = activeFaces;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Finds the next vertex to create faces with the current hull\r\n\r\n    nextVertexToAdd: function() {\r\n      // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\r\n\r\n      if (this.assigned.isEmpty() === false) {\r\n        var eyeVertex,\r\n          maxDistance = 0;\r\n\r\n        // grap the first available face and start with the first visible vertex of that face\r\n\r\n        var eyeFace = this.assigned.first().face;\r\n        var vertex = eyeFace.outside;\r\n\r\n        // now calculate the farthest vertex that face can see\r\n\r\n        do {\r\n          var distance = eyeFace.distanceToPoint(vertex.point);\r\n\r\n          if (distance > maxDistance) {\r\n            maxDistance = distance;\r\n            eyeVertex = vertex;\r\n          }\r\n\r\n          vertex = vertex.next;\r\n        } while (vertex !== null && vertex.face === eyeFace);\r\n\r\n        return eyeVertex;\r\n      }\r\n    },\r\n\r\n    // Computes a chain of half edges in CCW order called the 'horizon'.\r\n    // For an edge to be part of the horizon it must join a face that can see\r\n    // 'eyePoint' and a face that cannot see 'eyePoint'.\r\n\r\n    computeHorizon: function(eyePoint, crossEdge, face, horizon) {\r\n      // moves face's vertices to the 'unassigned' vertex list\r\n\r\n      this.deleteFaceVertices(face);\r\n\r\n      face.mark = Deleted;\r\n\r\n      var edge;\r\n\r\n      if (crossEdge === null) {\r\n        edge = crossEdge = face.getEdge(0);\r\n      } else {\r\n        // start from the next edge since 'crossEdge' was already analyzed\r\n        // (actually 'crossEdge.twin' was the edge who called this method recursively)\r\n\r\n        edge = crossEdge.next;\r\n      }\r\n\r\n      do {\r\n        var twinEdge = edge.twin;\r\n        var oppositeFace = twinEdge.face;\r\n\r\n        if (oppositeFace.mark === Visible) {\r\n          if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\r\n            // the opposite face can see the vertex, so proceed with next edge\r\n\r\n            this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\r\n          } else {\r\n            // the opposite face can't see the vertex, so this edge is part of the horizon\r\n\r\n            horizon.push(edge);\r\n          }\r\n        }\r\n\r\n        edge = edge.next;\r\n      } while (edge !== crossEdge);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\r\n\r\n    addAdjoiningFace: function(eyeVertex, horizonEdge) {\r\n      // all the half edges are created in ccw order thus the face is always pointing outside the hull\r\n\r\n      var face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\r\n\r\n      this.faces.push(face);\r\n\r\n      // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\r\n\r\n      face.getEdge(-1).setTwin(horizonEdge.twin);\r\n\r\n      return face.getEdge(0); // the half edge whose vertex is the eyeVertex\r\n    },\r\n\r\n    //  Adds 'horizon.length' faces to the hull, each face will be linked with the\r\n    //  horizon opposite face and the face on the left/right\r\n\r\n    addNewFaces: function(eyeVertex, horizon) {\r\n      this.newFaces = [];\r\n\r\n      var firstSideEdge = null;\r\n      var previousSideEdge = null;\r\n\r\n      for (var i = 0; i < horizon.length; i++) {\r\n        var horizonEdge = horizon[i];\r\n\r\n        // returns the right side edge\r\n\r\n        var sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\r\n\r\n        if (firstSideEdge === null) {\r\n          firstSideEdge = sideEdge;\r\n        } else {\r\n          // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\r\n\r\n          sideEdge.next.setTwin(previousSideEdge);\r\n        }\r\n\r\n        this.newFaces.push(sideEdge.face);\r\n        previousSideEdge = sideEdge;\r\n      }\r\n\r\n      // perform final join of new faces\r\n\r\n      firstSideEdge.next.setTwin(previousSideEdge);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Adds a vertex to the hull\r\n\r\n    addVertexToHull: function(eyeVertex) {\r\n      var horizon = [];\r\n      var i, face;\r\n\r\n      this.unassigned.clear();\r\n\r\n      // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\r\n\r\n      this.removeVertexFromFace(eyeVertex, eyeVertex.face);\r\n\r\n      this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\r\n\r\n      this.addNewFaces(eyeVertex, horizon);\r\n\r\n      // reassign 'unassigned' vertices to the new faces\r\n\r\n      this.resolveUnassignedPoints(this.newFaces);\r\n\r\n      return this;\r\n    },\r\n\r\n    cleanup: function() {\r\n      this.assigned.clear();\r\n      this.unassigned.clear();\r\n      this.newFaces = [];\r\n\r\n      return this;\r\n    },\r\n\r\n    compute: function() {\r\n      var vertex;\r\n\r\n      this.computeInitialHull();\r\n\r\n      // add all available vertices gradually to the hull\r\n\r\n      while ((vertex = this.nextVertexToAdd()) !== undefined) {\r\n        this.addVertexToHull(vertex);\r\n      }\r\n\r\n      this.reindexFaces();\r\n\r\n      this.cleanup();\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  //\r\n\r\n  function Face() {\r\n    this.normal = new THREE.Vector3();\r\n    this.midpoint = new THREE.Vector3();\r\n    this.area = 0;\r\n\r\n    this.constant = 0; // signed distance from face to the origin\r\n    this.outside = null; // reference to a vertex in a vertex list this face can see\r\n    this.mark = Visible;\r\n    this.edge = null;\r\n  }\r\n\r\n  Object.assign(Face, {\r\n    create: function(a, b, c) {\r\n      var face = new Face();\r\n\r\n      var e0 = new HalfEdge(a, face);\r\n      var e1 = new HalfEdge(b, face);\r\n      var e2 = new HalfEdge(c, face);\r\n\r\n      // join edges\r\n\r\n      e0.next = e2.prev = e1;\r\n      e1.next = e0.prev = e2;\r\n      e2.next = e1.prev = e0;\r\n\r\n      // main half edge reference\r\n\r\n      face.edge = e0;\r\n\r\n      return face.compute();\r\n    }\r\n  });\r\n\r\n  Object.assign(Face.prototype, {\r\n    getEdge: function(i) {\r\n      var edge = this.edge;\r\n\r\n      while (i > 0) {\r\n        edge = edge.next;\r\n        i--;\r\n      }\r\n\r\n      while (i < 0) {\r\n        edge = edge.prev;\r\n        i++;\r\n      }\r\n\r\n      return edge;\r\n    },\r\n\r\n    compute: (function() {\r\n      var triangle;\r\n\r\n      return function compute() {\r\n        if (triangle === undefined) triangle = new THREE.Triangle();\r\n\r\n        var a = this.edge.tail();\r\n        var b = this.edge.head();\r\n        var c = this.edge.next.head();\r\n\r\n        triangle.set(a.point, b.point, c.point);\r\n\r\n        triangle.normal(this.normal);\r\n        triangle.midpoint(this.midpoint);\r\n        this.area = triangle.area();\r\n\r\n        this.constant = this.normal.dot(this.midpoint);\r\n\r\n        return this;\r\n      };\r\n    })(),\r\n\r\n    distanceToPoint: function(point) {\r\n      return this.normal.dot(point) - this.constant;\r\n    }\r\n  });\r\n\r\n  // Entity for a Doubly-Connected Edge List (DCEL).\r\n\r\n  function HalfEdge(vertex, face) {\r\n    this.vertex = vertex;\r\n    this.prev = null;\r\n    this.next = null;\r\n    this.twin = null;\r\n    this.face = face;\r\n  }\r\n\r\n  Object.assign(HalfEdge.prototype, {\r\n    head: function() {\r\n      return this.vertex;\r\n    },\r\n\r\n    tail: function() {\r\n      return this.prev ? this.prev.vertex : null;\r\n    },\r\n\r\n    length: function() {\r\n      var head = this.head();\r\n      var tail = this.tail();\r\n\r\n      if (tail !== null) {\r\n        return tail.point.distanceTo(head.point);\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    lengthSquared: function() {\r\n      var head = this.head();\r\n      var tail = this.tail();\r\n\r\n      if (tail !== null) {\r\n        return tail.point.distanceToSquared(head.point);\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    setTwin: function(edge) {\r\n      this.twin = edge;\r\n      edge.twin = this;\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  // A vertex as a double linked list node.\r\n\r\n  function VertexNode(point) {\r\n    this.point = point;\r\n    this.prev = null;\r\n    this.next = null;\r\n    this.face = null; // the face that is able to see this vertex\r\n  }\r\n\r\n  // A double linked list that contains vertex nodes.\r\n\r\n  function VertexList() {\r\n    this.head = null;\r\n    this.tail = null;\r\n  }\r\n\r\n  Object.assign(VertexList.prototype, {\r\n    first: function() {\r\n      return this.head;\r\n    },\r\n\r\n    last: function() {\r\n      return this.tail;\r\n    },\r\n\r\n    clear: function() {\r\n      this.head = this.tail = null;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Inserts a vertex before the target vertex\r\n\r\n    insertBefore: function(target, vertex) {\r\n      vertex.prev = target.prev;\r\n      vertex.next = target;\r\n\r\n      if (vertex.prev === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        vertex.prev.next = vertex;\r\n      }\r\n\r\n      target.prev = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Inserts a vertex after the target vertex\r\n\r\n    insertAfter: function(target, vertex) {\r\n      vertex.prev = target;\r\n      vertex.next = target.next;\r\n\r\n      if (vertex.next === null) {\r\n        this.tail = vertex;\r\n      } else {\r\n        vertex.next.prev = vertex;\r\n      }\r\n\r\n      target.next = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Appends a vertex to the end of the linked list\r\n\r\n    append: function(vertex) {\r\n      if (this.head === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        this.tail.next = vertex;\r\n      }\r\n\r\n      vertex.prev = this.tail;\r\n      vertex.next = null; // the tail has no subsequent vertex\r\n\r\n      this.tail = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Appends a chain of vertices where 'vertex' is the head.\r\n\r\n    appendChain: function(vertex) {\r\n      if (this.head === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        this.tail.next = vertex;\r\n      }\r\n\r\n      vertex.prev = this.tail;\r\n\r\n      // ensure that the 'tail' reference points to the last vertex of the chain\r\n\r\n      while (vertex.next !== null) {\r\n        vertex = vertex.next;\r\n      }\r\n\r\n      this.tail = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a vertex from the linked list\r\n\r\n    remove: function(vertex) {\r\n      if (vertex.prev === null) {\r\n        this.head = vertex.next;\r\n      } else {\r\n        vertex.prev.next = vertex.next;\r\n      }\r\n\r\n      if (vertex.next === null) {\r\n        this.tail = vertex.prev;\r\n      } else {\r\n        vertex.next.prev = vertex.prev;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\r\n\r\n    removeSubList: function(a, b) {\r\n      if (a.prev === null) {\r\n        this.head = b.next;\r\n      } else {\r\n        a.prev.next = b.next;\r\n      }\r\n\r\n      if (b.next === null) {\r\n        this.tail = a.prev;\r\n      } else {\r\n        b.next.prev = a.prev;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    isEmpty: function() {\r\n      return this.head === null;\r\n    }\r\n  });\r\n\r\n  // export\r\n\r\n  THREE.QuickHull = QuickHull;\r\n})();\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\n(function() {\r\n  // ConvexGeometry\r\n\r\n  function ConvexGeometry(points) {\r\n    THREE.Geometry.call(this);\r\n\r\n    this.type = \"ConvexGeometry\";\r\n\r\n    this.fromBufferGeometry(new ConvexBufferGeometry(points));\r\n    this.mergeVertices();\r\n  }\r\n\r\n  ConvexGeometry.prototype = Object.create(THREE.Geometry.prototype);\r\n  ConvexGeometry.prototype.constructor = ConvexGeometry;\r\n\r\n  // ConvexBufferGeometry\r\n\r\n  function ConvexBufferGeometry(points) {\r\n    THREE.BufferGeometry.call(this);\r\n\r\n    this.type = \"ConvexBufferGeometry\";\r\n\r\n    // buffers\r\n\r\n    var vertices = [];\r\n    var normals = [];\r\n\r\n    // execute QuickHull\r\n\r\n    if (THREE.QuickHull === undefined) {\r\n      console.error(\r\n        \"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull\"\r\n      );\r\n    }\r\n\r\n    var quickHull = new THREE.QuickHull().setFromPoints(points);\r\n\r\n    // generate vertices and normals\r\n\r\n    var faces = quickHull.faces;\r\n\r\n    for (var i = 0; i < faces.length; i++) {\r\n      var face = faces[i];\r\n      var edge = face.edge;\r\n\r\n      // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\r\n\r\n      do {\r\n        var point = edge.head().point;\r\n\r\n        vertices.push(point.x, point.y, point.z);\r\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\r\n\r\n        edge = edge.next;\r\n      } while (edge !== face.edge);\r\n    }\r\n\r\n    // build geometry\r\n\r\n    this.addAttribute(\r\n      \"position\",\r\n      new THREE.Float32BufferAttribute(vertices, 3)\r\n    );\r\n    this.addAttribute(\"normal\", new THREE.Float32BufferAttribute(normals, 3));\r\n  }\r\n\r\n  ConvexBufferGeometry.prototype = Object.create(\r\n    THREE.BufferGeometry.prototype\r\n  );\r\n  ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\r\n\r\n  // export\r\n\r\n  THREE.ConvexGeometry = ConvexGeometry;\r\n  THREE.ConvexBufferGeometry = ConvexBufferGeometry;\r\n})();\r\n","/**\r\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = require(\"three\");\r\n\r\nTHREE.CSS3DObject = function(element) {\r\n  THREE.Object3D.call(this);\r\n\r\n  this.element = element;\r\n  this.element.style.position = \"absolute\";\r\n\r\n  this.addEventListener(\"removed\", function() {\r\n    if (this.element.parentNode !== null) {\r\n      this.element.parentNode.removeChild(this.element);\r\n    }\r\n  });\r\n};\r\n\r\nTHREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\r\nTHREE.CSS3DObject.prototype.constructor = THREE.CSS3DObject;\r\n\r\nTHREE.CSS3DSprite = function(element) {\r\n  THREE.CSS3DObject.call(this, element);\r\n};\r\n\r\nTHREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\r\nTHREE.CSS3DSprite.prototype.constructor = THREE.CSS3DSprite;\r\n\r\n//\r\n\r\nTHREE.CSS3DRenderer = function() {\r\n  console.log(\"THREE.CSS3DRenderer\", THREE.REVISION);\r\n\r\n  var _width, _height;\r\n\r\n  var matrix = new THREE.Matrix4();\r\n\r\n  var cache = {\r\n    camera: { fov: 0, style: \"\" },\r\n    objects: {}\r\n  };\r\n\r\n  var domElement = document.createElement(\"div\");\r\n  domElement.style.overflow = \"hidden\";\r\n\r\n  domElement.style.WebkitTransformStyle = \"preserve-3d\";\r\n  domElement.style.MozTransformStyle = \"preserve-3d\";\r\n  domElement.style.oTransformStyle = \"preserve-3d\";\r\n  domElement.style.transformStyle = \"preserve-3d\";\r\n\r\n  this.domElement = domElement;\r\n\r\n  var cameraElement = document.createElement(\"div\");\r\n\r\n  cameraElement.style.position = \"absolute\";\r\n  cameraElement.style.left = \"50%\";\r\n  cameraElement.style.top = \"50%\";\r\n\r\n  cameraElement.style.WebkitTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.MozTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.oTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.transformStyle = \"preserve-3d\";\r\n\r\n  domElement.appendChild(cameraElement);\r\n\r\n  this.setClearColor = function() {};\r\n\r\n  // Added by Argo-lite, for optimization\r\n  this.isPaused = false;\r\n\r\n  this.getSize = function() {\r\n    return {\r\n      width: _width,\r\n      height: _height\r\n    };\r\n  };\r\n\r\n  this.setSize = function(width, height) {\r\n    _width = width;\r\n    _height = height;\r\n\r\n    domElement.style.width = width + \"px\";\r\n    domElement.style.height = height + \"px\";\r\n  };\r\n\r\n  function epsilon(value) {\r\n    return Math.abs(value) < Number.EPSILON ? 0 : value;\r\n  }\r\n\r\n  function getCameraCSSMatrix(matrix) {\r\n    var elements = matrix.elements;\r\n\r\n    return (\r\n      \"matrix3d(\" +\r\n      epsilon(elements[0]) +\r\n      \",\" +\r\n      epsilon(-elements[1]) +\r\n      \",\" +\r\n      epsilon(elements[2]) +\r\n      \",\" +\r\n      epsilon(elements[3]) +\r\n      \",\" +\r\n      epsilon(elements[4]) +\r\n      \",\" +\r\n      epsilon(-elements[5]) +\r\n      \",\" +\r\n      epsilon(elements[6]) +\r\n      \",\" +\r\n      epsilon(elements[7]) +\r\n      \",\" +\r\n      epsilon(elements[8]) +\r\n      \",\" +\r\n      epsilon(-elements[9]) +\r\n      \",\" +\r\n      epsilon(elements[10]) +\r\n      \",\" +\r\n      epsilon(elements[11]) +\r\n      \",\" +\r\n      epsilon(elements[12]) +\r\n      \",\" +\r\n      epsilon(-elements[13]) +\r\n      \",\" +\r\n      epsilon(elements[14]) +\r\n      \",\" +\r\n      epsilon(elements[15]) +\r\n      \")\"\r\n    );\r\n  }\r\n\r\n  function getObjectCSSMatrix(matrix) {\r\n    var elements = matrix.elements;\r\n\r\n    return (\r\n      \"translate3d(-50%,-50%,0) matrix3d(\" +\r\n      epsilon(elements[0]) +\r\n      \",\" +\r\n      epsilon(elements[1]) +\r\n      \",\" +\r\n      epsilon(elements[2]) +\r\n      \",\" +\r\n      epsilon(elements[3]) +\r\n      \",\" +\r\n      epsilon(-elements[4]) +\r\n      \",\" +\r\n      epsilon(-elements[5]) +\r\n      \",\" +\r\n      epsilon(-elements[6]) +\r\n      \",\" +\r\n      epsilon(-elements[7]) +\r\n      \",\" +\r\n      epsilon(elements[8]) +\r\n      \",\" +\r\n      epsilon(elements[9]) +\r\n      \",\" +\r\n      epsilon(elements[10]) +\r\n      \",\" +\r\n      epsilon(elements[11]) +\r\n      \",\" +\r\n      epsilon(elements[12]) +\r\n      \",\" +\r\n      epsilon(elements[13]) +\r\n      \",\" +\r\n      epsilon(elements[14]) +\r\n      \",\" +\r\n      epsilon(elements[15]) +\r\n      \")\"\r\n    );\r\n  }\r\n\r\n  function renderObject(object, camera) {\r\n    if (object instanceof THREE.CSS3DObject) {\r\n      var style;\r\n\r\n      if (object instanceof THREE.CSS3DSprite) {\r\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\r\n\r\n        matrix.copy(camera.matrixWorldInverse);\r\n        matrix.transpose();\r\n        matrix.copyPosition(object.matrixWorld);\r\n        matrix.scale(object.scale);\r\n\r\n        matrix.elements[3] = 0;\r\n        matrix.elements[7] = 0;\r\n        matrix.elements[11] = 0;\r\n        matrix.elements[15] = 1;\r\n\r\n        style = getObjectCSSMatrix(matrix);\r\n      } else {\r\n        style = getObjectCSSMatrix(object.matrixWorld);\r\n      }\r\n\r\n      var element = object.element;\r\n      var cachedStyle = cache.objects[object.id];\r\n\r\n      if (cachedStyle === undefined || cachedStyle !== style) {\r\n        element.style.WebkitTransform = style;\r\n        element.style.MozTransform = style;\r\n        element.style.oTransform = style;\r\n        element.style.transform = style;\r\n\r\n        cache.objects[object.id] = style;\r\n      }\r\n\r\n      if (element.parentNode !== cameraElement) {\r\n        cameraElement.appendChild(element);\r\n      }\r\n    }\r\n\r\n    for (var i = 0, l = object.children.length; i < l; i++) {\r\n      renderObject(object.children[i], camera);\r\n    }\r\n  }\r\n\r\n  this.render = function(scene, camera) {\r\n    if (this.isPaused) {\r\n      return;\r\n    }\r\n    var fov =\r\n      (0.5 / Math.tan(THREE.Math.degToRad(camera.getEffectiveFOV() * 0.5))) *\r\n      _height;\r\n\r\n    if (cache.camera.fov !== fov) {\r\n      domElement.style.WebkitPerspective = fov + \"px\";\r\n      domElement.style.MozPerspective = fov + \"px\";\r\n      domElement.style.oPerspective = fov + \"px\";\r\n      domElement.style.perspective = fov + \"px\";\r\n\r\n      cache.camera.fov = fov;\r\n    }\r\n\r\n    scene.updateMatrixWorld();\r\n\r\n    if (camera.parent === null) camera.updateMatrixWorld();\r\n\r\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\r\n\r\n    var style =\r\n      \"translateZ(\" +\r\n      fov +\r\n      \"px)\" +\r\n      getCameraCSSMatrix(camera.matrixWorldInverse);\r\n\r\n    if (cache.camera.style !== style) {\r\n      cameraElement.style.WebkitTransform = style;\r\n      cameraElement.style.MozTransform = style;\r\n      cameraElement.style.oTransform = style;\r\n      cameraElement.style.transform = style;\r\n\r\n      cache.camera.style = style;\r\n    }\r\n\r\n    renderObject(scene, camera);\r\n  };\r\n};\r\n","module.exports = function(THREE) {\r\n  /**\r\n   * @author qiao / https://github.com/qiao\r\n   * @author mrdoob / http://mrdoob.com\r\n   * @author alteredq / http://alteredqualia.com/\r\n   * @author WestLangley / http://github.com/WestLangley\r\n   * @author erich666 / http://erichaines.com\r\n   */\r\n\r\n  // This set of controls performs orbiting, dollying (zooming), and panning.\r\n  // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n  //\r\n  //    Orbit - left mouse / touch: one finger move\r\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\r\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\r\n\r\n  function OrbitControls(object, domElement) {\r\n    this.object = object;\r\n\r\n    this.domElement = domElement !== undefined ? domElement : document;\r\n\r\n    // Set to false to disable this control\r\n    this.enabled = true;\r\n\r\n    // \"target\" sets the location of focus, where the object orbits around\r\n    this.target = new THREE.Vector3();\r\n\r\n    // How far you can dolly in and out ( PerspectiveCamera only )\r\n    this.minDistance = 0;\r\n    this.maxDistance = Infinity;\r\n\r\n    // How far you can zoom in and out ( OrthographicCamera only )\r\n    this.minZoom = 0;\r\n    this.maxZoom = Infinity;\r\n\r\n    // How far you can orbit vertically, upper and lower limits.\r\n    // Range is 0 to Math.PI radians.\r\n    this.minPolarAngle = 0; // radians\r\n    this.maxPolarAngle = Math.PI; // radians\r\n\r\n    // How far you can orbit horizontally, upper and lower limits.\r\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\r\n    this.minAzimuthAngle = -Infinity; // radians\r\n    this.maxAzimuthAngle = Infinity; // radians\r\n\r\n    // Set to true to enable damping (inertia)\r\n    // If damping is enabled, you must call controls.update() in your animation loop\r\n    this.enableDamping = false;\r\n    this.dampingFactor = 0.25;\r\n\r\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n    // Set to false to disable zooming\r\n    this.enableZoom = true;\r\n    this.zoomSpeed = 1.0;\r\n\r\n    // Set to false to disable rotating\r\n    this.enableRotate = true;\r\n    this.rotateSpeed = 1.0;\r\n\r\n    // Set to false to disable panning\r\n    this.enablePan = true;\r\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\r\n\r\n    // Set to true to automatically rotate around the target\r\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n    this.autoRotate = false;\r\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\r\n\r\n    // Set to false to disable use of the keys\r\n    this.enableKeys = true;\r\n\r\n    // The four arrow keys\r\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, SPACE: 32 };\r\n\r\n    // Mouse buttons\r\n    this.mouseButtons = {\r\n      ORBIT: THREE.MOUSE.LEFT,\r\n      ZOOM: THREE.MOUSE.MIDDLE,\r\n      PAN: THREE.MOUSE.RIGHT\r\n    };\r\n\r\n    // for reset\r\n    this.target0 = this.target.clone();\r\n    this.position0 = this.object.position.clone();\r\n    this.zoom0 = this.object.zoom;\r\n\r\n    // for space panning\r\n    this.spacePan = false;\r\n    this.bothPan = false;\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    this.getPolarAngle = function() {\r\n      return spherical.phi;\r\n    };\r\n\r\n    this.getAzimuthalAngle = function() {\r\n      return spherical.theta;\r\n    };\r\n\r\n    this.reset = function() {\r\n      scope.target.copy(scope.target0);\r\n      scope.object.position.copy(scope.position0);\r\n      scope.object.zoom = scope.zoom0;\r\n\r\n      scope.object.updateProjectionMatrix();\r\n      scope.dispatchEvent(changeEvent);\r\n\r\n      scope.update();\r\n\r\n      state = STATE.NONE;\r\n    };\r\n\r\n    // this method is exposed, but perhaps it would be better if we can make it private...\r\n    this.update = (function() {\r\n      var offset = new THREE.Vector3();\r\n\r\n      // so camera.up is the orbit axis\r\n      var quat = new THREE.Quaternion().setFromUnitVectors(\r\n        object.up,\r\n        new THREE.Vector3(0, 1, 0)\r\n      );\r\n      var quatInverse = quat.clone().inverse();\r\n\r\n      var lastPosition = new THREE.Vector3();\r\n      var lastQuaternion = new THREE.Quaternion();\r\n\r\n      return function update() {\r\n        var position = scope.object.position;\r\n\r\n        offset.copy(position).sub(scope.target);\r\n\r\n        // rotate offset to \"y-axis-is-up\" space\r\n        offset.applyQuaternion(quat);\r\n\r\n        // angle from z-axis around y-axis\r\n        spherical.setFromVector3(offset);\r\n\r\n        if (scope.autoRotate && state === STATE.NONE) {\r\n          rotateLeft(getAutoRotationAngle());\r\n        }\r\n\r\n        spherical.theta += sphericalDelta.theta;\r\n        spherical.phi += sphericalDelta.phi;\r\n\r\n        // restrict theta to be between desired limits\r\n        spherical.theta = Math.max(\r\n          scope.minAzimuthAngle,\r\n          Math.min(scope.maxAzimuthAngle, spherical.theta)\r\n        );\r\n\r\n        // restrict phi to be between desired limits\r\n        spherical.phi = Math.max(\r\n          scope.minPolarAngle,\r\n          Math.min(scope.maxPolarAngle, spherical.phi)\r\n        );\r\n\r\n        spherical.makeSafe();\r\n\r\n        spherical.radius *= scale;\r\n\r\n        // restrict radius to be between desired limits\r\n        spherical.radius = Math.max(\r\n          scope.minDistance,\r\n          Math.min(scope.maxDistance, spherical.radius)\r\n        );\r\n\r\n        // move target to panned location\r\n        scope.target.add(panOffset);\r\n\r\n        offset.setFromSpherical(spherical);\r\n\r\n        // rotate offset back to \"camera-up-vector-is-up\" space\r\n        offset.applyQuaternion(quatInverse);\r\n\r\n        position.copy(scope.target).add(offset);\r\n\r\n        scope.object.lookAt(scope.target);\r\n\r\n        if (scope.enableDamping === true) {\r\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\r\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\r\n        } else {\r\n          sphericalDelta.set(0, 0, 0);\r\n        }\r\n\r\n        scale = 1;\r\n        panOffset.set(0, 0, 0);\r\n\r\n        // update condition is:\r\n        // min(camera displacement, camera rotation in radians)^2 > EPS\r\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n        if (\r\n          zoomChanged ||\r\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\r\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\r\n        ) {\r\n          scope.dispatchEvent(changeEvent);\r\n\r\n          lastPosition.copy(scope.object.position);\r\n          lastQuaternion.copy(scope.object.quaternion);\r\n          zoomChanged = false;\r\n\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      };\r\n    })();\r\n\r\n    this.dispose = function() {\r\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\r\n      scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\r\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\r\n\r\n      scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\r\n      scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\r\n      scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\r\n\r\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\r\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n      window.removeEventListener(\"keydown\", onKeyDown, false);\r\n\r\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n    };\r\n\r\n    //\r\n    // internals\r\n    //\r\n\r\n    var scope = this;\r\n\r\n    var changeEvent = { type: \"change\" };\r\n    var startEvent = { type: \"start\" };\r\n    var endEvent = { type: \"end\" };\r\n\r\n    var STATE = {\r\n      NONE: -1,\r\n      ROTATE: 0,\r\n      DOLLY: 1,\r\n      PAN: 2,\r\n      TOUCH_ROTATE: 3,\r\n      TOUCH_DOLLY: 4,\r\n      TOUCH_PAN: 5\r\n    };\r\n\r\n    var state = STATE.NONE;\r\n\r\n    var EPS = 0.000001;\r\n\r\n    // current position in spherical coordinates\r\n    var spherical = new THREE.Spherical();\r\n    var sphericalDelta = new THREE.Spherical();\r\n\r\n    var scale = 1;\r\n    var panOffset = new THREE.Vector3();\r\n    var zoomChanged = false;\r\n\r\n    var rotateStart = new THREE.Vector2();\r\n    var rotateEnd = new THREE.Vector2();\r\n    var rotateDelta = new THREE.Vector2();\r\n\r\n    var panStart = new THREE.Vector2();\r\n    var panEnd = new THREE.Vector2();\r\n    var panDelta = new THREE.Vector2();\r\n\r\n    var dollyStart = new THREE.Vector2();\r\n    var dollyEnd = new THREE.Vector2();\r\n    var dollyDelta = new THREE.Vector2();\r\n\r\n    function getAutoRotationAngle() {\r\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\r\n    }\r\n\r\n    function getZoomScale() {\r\n      return Math.pow(0.95, scope.zoomSpeed);\r\n    }\r\n\r\n    function rotateLeft(angle) {\r\n      sphericalDelta.theta -= angle;\r\n    }\r\n\r\n    function rotateUp(angle) {\r\n      sphericalDelta.phi -= angle;\r\n    }\r\n\r\n    var panLeft = (function() {\r\n      var v = new THREE.Vector3();\r\n\r\n      return function panLeft(distance, objectMatrix) {\r\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\r\n        v.multiplyScalar(-distance);\r\n\r\n        panOffset.add(v);\r\n      };\r\n    })();\r\n\r\n    var panUp = (function() {\r\n      var v = new THREE.Vector3();\r\n\r\n      return function panUp(distance, objectMatrix) {\r\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\r\n        v.multiplyScalar(distance);\r\n\r\n        panOffset.add(v);\r\n      };\r\n    })();\r\n\r\n    // deltaX and deltaY are in pixels; right and down are positive\r\n    var pan = (function() {\r\n      var offset = new THREE.Vector3();\r\n\r\n      return function pan(deltaX, deltaY) {\r\n        var element =\r\n          scope.domElement === document\r\n            ? scope.domElement.body\r\n            : scope.domElement;\r\n\r\n        if (scope.object instanceof THREE.PerspectiveCamera) {\r\n          // perspective\r\n          var position = scope.object.position;\r\n          offset.copy(position).sub(scope.target);\r\n          var targetDistance = offset.length();\r\n\r\n          // half of the fov is center to top of screen\r\n          targetDistance *= Math.tan(\r\n            ((scope.object.fov / 2) * Math.PI) / 180.0\r\n          );\r\n\r\n          // we actually don't use screenWidth, since perspective camera is fixed to screen height\r\n          panLeft(\r\n            (2 * deltaX * targetDistance) / element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n          panUp(\r\n            (2 * deltaY * targetDistance) / element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n          // orthographic\r\n          panLeft(\r\n            (deltaX * (scope.object.right - scope.object.left)) /\r\n              scope.object.zoom /\r\n              element.clientWidth,\r\n            scope.object.matrix\r\n          );\r\n          panUp(\r\n            (deltaY * (scope.object.top - scope.object.bottom)) /\r\n              scope.object.zoom /\r\n              element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n        } else {\r\n          // camera neither orthographic nor perspective\r\n          console.warn(\r\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\r\n          );\r\n          scope.enablePan = false;\r\n        }\r\n      };\r\n    })();\r\n\r\n    // Expose panning for external usage\r\n    this.pan = pan;\r\n\r\n    function dollyIn(dollyScale) {\r\n      if (scope.object instanceof THREE.PerspectiveCamera) {\r\n        scale /= dollyScale;\r\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n        scope.object.zoom = Math.max(\r\n          scope.minZoom,\r\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\r\n        );\r\n        scope.object.updateProjectionMatrix();\r\n        zoomChanged = true;\r\n      } else {\r\n        console.warn(\r\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\r\n        );\r\n        scope.enableZoom = false;\r\n      }\r\n    }\r\n\r\n    function dollyOut(dollyScale) {\r\n      if (scope.object instanceof THREE.PerspectiveCamera) {\r\n        scale *= dollyScale;\r\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n        scope.object.zoom = Math.max(\r\n          scope.minZoom,\r\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\r\n        );\r\n        scope.object.updateProjectionMatrix();\r\n        zoomChanged = true;\r\n      } else {\r\n        console.warn(\r\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\r\n        );\r\n        scope.enableZoom = false;\r\n      }\r\n    }\r\n\r\n    //\r\n    // event callbacks - update the object state\r\n    //\r\n\r\n    function handleMouseDownRotate(event) {\r\n      //console.log( 'handleMouseDownRotate' );\r\n\r\n      rotateStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseDownDolly(event) {\r\n      //console.log( 'handleMouseDownDolly' );\r\n\r\n      dollyStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseDownPan(event) {\r\n      //console.log( 'handleMouseDownPan' );\r\n\r\n      panStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseMoveRotate(event) {\r\n      //console.log( 'handleMouseMoveRotate' );\r\n\r\n      rotateEnd.set(event.clientX, event.clientY);\r\n      rotateDelta.subVectors(rotateEnd, rotateStart);\r\n\r\n      var element =\r\n        scope.domElement === document\r\n          ? scope.domElement.body\r\n          : scope.domElement;\r\n\r\n      // rotating across whole screen goes 360 degrees around\r\n      rotateLeft(\r\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\r\n      rotateUp(\r\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      rotateStart.copy(rotateEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseMoveDolly(event) {\r\n      //console.log( 'handleMouseMoveDolly' );\r\n\r\n      dollyEnd.set(event.clientX, event.clientY);\r\n\r\n      dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n      if (dollyDelta.y > 0) {\r\n        dollyIn(getZoomScale());\r\n      } else if (dollyDelta.y < 0) {\r\n        dollyOut(getZoomScale());\r\n      }\r\n\r\n      dollyStart.copy(dollyEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseMovePan(event) {\r\n      //console.log( 'handleMouseMovePan' );\r\n\r\n      panEnd.set(event.clientX, event.clientY);\r\n\r\n      panDelta.subVectors(panEnd, panStart);\r\n\r\n      pan(panDelta.x, panDelta.y);\r\n\r\n      panStart.copy(panEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseUp(event) {\r\n      //console.log( 'handleMouseUp' );\r\n    }\r\n\r\n    function handleMouseWheel(event) {\r\n      //console.log( 'handleMouseWheel' );\r\n\r\n      if (event.deltaY < 0) {\r\n        dollyOut(getZoomScale());\r\n      } else if (event.deltaY > 0) {\r\n        dollyIn(getZoomScale());\r\n      }\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleKeyUp(event) {\r\n      switch (event.keyCode) {\r\n        case scope.keys.SPACE:\r\n          if (scope.spacePan == true) {\r\n            scope.spacePanStart = false;\r\n            state = STATE.NONE;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    function handleKeyDown(event) {\r\n      //console.log( 'handleKeyDown' );\r\n\r\n      switch (event.keyCode) {\r\n        case scope.keys.UP:\r\n          pan(0, scope.keyPanSpeed);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.BOTTOM:\r\n          pan(0, -scope.keyPanSpeed);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.LEFT:\r\n          pan(scope.keyPanSpeed, 0);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.RIGHT:\r\n          pan(-scope.keyPanSpeed, 0);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.SPACE:\r\n          if (scope.spacePan == true) {\r\n            scope.spacePanStart = true;\r\n            state = STATE.PAN;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    function handleTouchStartRotate(event) {\r\n      //console.log( 'handleTouchStartRotate' );\r\n\r\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    }\r\n\r\n    function handleTouchStartDolly(event) {\r\n      //console.log( 'handleTouchStartDolly' );\r\n\r\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      dollyStart.set(0, distance);\r\n    }\r\n\r\n    function handleTouchStartPan(event) {\r\n      //console.log( 'handleTouchStartPan' );\r\n\r\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    }\r\n\r\n    function handleTouchMoveRotate(event) {\r\n      //console.log( 'handleTouchMoveRotate' );\r\n\r\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n      rotateDelta.subVectors(rotateEnd, rotateStart);\r\n\r\n      var element =\r\n        scope.domElement === document\r\n          ? scope.domElement.body\r\n          : scope.domElement;\r\n\r\n      // rotating across whole screen goes 360 degrees around\r\n      rotateLeft(\r\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\r\n      rotateUp(\r\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      rotateStart.copy(rotateEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchMoveDolly(event) {\r\n      //console.log( 'handleTouchMoveDolly' );\r\n\r\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      dollyEnd.set(0, distance);\r\n\r\n      dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n      if (dollyDelta.y > 0) {\r\n        dollyOut(getZoomScale());\r\n      } else if (dollyDelta.y < 0) {\r\n        dollyIn(getZoomScale());\r\n      }\r\n\r\n      dollyStart.copy(dollyEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchMovePan(event) {\r\n      //console.log( 'handleTouchMovePan' );\r\n\r\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n\r\n      panDelta.subVectors(panEnd, panStart);\r\n\r\n      pan(panDelta.x, panDelta.y);\r\n\r\n      panStart.copy(panEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchEnd(event) {\r\n      //console.log( 'handleTouchEnd' );\r\n    }\r\n\r\n    //\r\n    // event handlers - FSM: listen for events and reset state\r\n    //\r\n\r\n    function onMouseDown(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n\r\n      if (event.button === scope.mouseButtons.ORBIT) {\r\n        if (scope.enableRotate === false) return;\r\n\r\n        handleMouseDownRotate(event);\r\n\r\n        state = STATE.ROTATE;\r\n      } else if (event.button === scope.mouseButtons.ZOOM) {\r\n        if (scope.enableZoom === false) return;\r\n\r\n        handleMouseDownDolly(event);\r\n\r\n        state = STATE.DOLLY;\r\n      } else if (event.button === scope.mouseButtons.PAN) {\r\n        if (scope.enablePan === false) return;\r\n\r\n        if (!scope.spacePan || scope.bothPan) {\r\n          handleMouseDownPan(event);\r\n\r\n          state = STATE.PAN;\r\n        }\r\n      }\r\n\r\n      if (state !== STATE.NONE) {\r\n        document.addEventListener(\"mousemove\", onMouseMove, false);\r\n        document.addEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n        scope.dispatchEvent(startEvent);\r\n      }\r\n    }\r\n\r\n    function onMouseMove(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n\r\n      if (state === STATE.ROTATE) {\r\n        if (scope.enableRotate === false) return;\r\n\r\n        handleMouseMoveRotate(event);\r\n      } else if (state === STATE.DOLLY) {\r\n        if (scope.enableZoom === false) return;\r\n\r\n        handleMouseMoveDolly(event);\r\n      } else if (state === STATE.PAN) {\r\n        if (scope.enablePan === false) return;\r\n\r\n        if (scope.spacePan == true) {\r\n          if (scope.spacePanStart == true) {\r\n            handleMouseDownPan(event);\r\n            scope.spacePanStart = false;\r\n          }\r\n        }\r\n\r\n        handleMouseMovePan(event);\r\n      }\r\n    }\r\n\r\n    function onMouseUp(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      handleMouseUp(event);\r\n\r\n      //document.removeEventListener( 'mousemove', onMouseMove, false );\r\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n      scope.dispatchEvent(endEvent);\r\n\r\n      state = STATE.NONE;\r\n    }\r\n\r\n    function onMouseWheel(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableZoom === false ||\r\n        (state !== STATE.NONE && state !== STATE.ROTATE)\r\n      )\r\n        return;\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      handleMouseWheel(event);\r\n\r\n      scope.dispatchEvent(startEvent); // not sure why these are here...\r\n      scope.dispatchEvent(endEvent);\r\n    }\r\n\r\n    function onKeyDown(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableKeys === false ||\r\n        scope.enablePan === false\r\n      )\r\n        return;\r\n\r\n      document.addEventListener(\"mousemove\", onMouseMove, false);\r\n\r\n      handleKeyDown(event);\r\n    }\r\n\r\n    function onKeyUp(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableKeys === false ||\r\n        scope.enablePan === false\r\n      )\r\n        return;\r\n\r\n      handleKeyUp(event);\r\n    }\r\n\r\n    function onTouchStart(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      switch (event.touches.length) {\r\n        case 1: // one-fingered touch: rotate\r\n          if (scope.enableRotate === false) return;\r\n\r\n          handleTouchStartRotate(event);\r\n\r\n          state = STATE.TOUCH_ROTATE;\r\n\r\n          break;\r\n\r\n        case 2: // two-fingered touch: dolly\r\n          if (scope.enableZoom === false) return;\r\n\r\n          handleTouchStartDolly(event);\r\n\r\n          state = STATE.TOUCH_DOLLY;\r\n\r\n          break;\r\n\r\n        case 3: // three-fingered touch: pan\r\n          if (scope.enablePan === false) return;\r\n\r\n          handleTouchStartPan(event);\r\n\r\n          state = STATE.TOUCH_PAN;\r\n\r\n          break;\r\n\r\n        default:\r\n          state = STATE.NONE;\r\n      }\r\n\r\n      if (state !== STATE.NONE) {\r\n        scope.dispatchEvent(startEvent);\r\n      }\r\n    }\r\n\r\n    function onTouchMove(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      switch (event.touches.length) {\r\n        case 1: // one-fingered touch: rotate\r\n          if (scope.enableRotate === false) return;\r\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\r\n\r\n          handleTouchMoveRotate(event);\r\n\r\n          break;\r\n\r\n        case 2: // two-fingered touch: dolly\r\n          if (scope.enableZoom === false) return;\r\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\r\n\r\n          handleTouchMoveDolly(event);\r\n\r\n          break;\r\n\r\n        case 3: // three-fingered touch: pan\r\n          if (scope.enablePan === false) return;\r\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\r\n\r\n          handleTouchMovePan(event);\r\n\r\n          break;\r\n\r\n        default:\r\n          state = STATE.NONE;\r\n      }\r\n    }\r\n\r\n    function onTouchEnd(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      handleTouchEnd(event);\r\n\r\n      scope.dispatchEvent(endEvent);\r\n\r\n      state = STATE.NONE;\r\n    }\r\n\r\n    function onContextMenu(event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    //\r\n\r\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\r\n\r\n    scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\r\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\r\n\r\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\r\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\r\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\r\n\r\n    window.addEventListener(\"keydown\", onKeyDown, false);\r\n    window.addEventListener(\"keyup\", onKeyUp, false);\r\n\r\n    // force an update at start\r\n\r\n    this.update();\r\n  }\r\n\r\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\r\n  OrbitControls.prototype.constructor = OrbitControls;\r\n\r\n  Object.defineProperties(OrbitControls.prototype, {\r\n    center: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .center has been renamed to .target\"\r\n        );\r\n        return this.target;\r\n      }\r\n    },\r\n\r\n    // backward compatibility\r\n\r\n    noZoom: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\r\n        );\r\n        return !this.enableZoom;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\r\n        );\r\n        this.enableZoom = !value;\r\n      }\r\n    },\r\n\r\n    noRotate: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\r\n        );\r\n        return !this.enableRotate;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\r\n        );\r\n        this.enableRotate = !value;\r\n      }\r\n    },\r\n\r\n    noPan: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\r\n        );\r\n        return !this.enablePan;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\r\n        );\r\n        this.enablePan = !value;\r\n      }\r\n    },\r\n\r\n    noKeys: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\r\n        );\r\n        return !this.enableKeys;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\r\n        );\r\n        this.enableKeys = !value;\r\n      }\r\n    },\r\n\r\n    staticMoving: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\r\n        );\r\n        return !this.enableDamping;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\r\n        );\r\n        this.enableDamping = !value;\r\n      }\r\n    },\r\n\r\n    dynamicDampingFactor: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\r\n        );\r\n        return this.dampingFactor;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\r\n        );\r\n        this.dampingFactor = value;\r\n      }\r\n    }\r\n  });\r\n\r\n  return OrbitControls;\r\n};\r\n","var def = require(\"../imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Calculates coordinates of mouse on canvas adjusted for padding\r\n   * @param {*} event\r\n   * @param {*} currentElement\r\n   */\r\n  self.relMouseCoords = function(event, currentElement) {\r\n    var totalOffsetX = 0;\r\n    var totalOffsetY = 0;\r\n    var canvasX = 0;\r\n    var canvasY = 0;\r\n\r\n    do {\r\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\r\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\r\n    } while ((currentElement = currentElement.offsetParent));\r\n\r\n    canvasX = event.pageX - totalOffsetX;\r\n    canvasY = event.pageY - totalOffsetY;\r\n\r\n    return { x: canvasX, y: canvasY };\r\n  };\r\n\r\n  /**\r\n   * Add metadata to node\r\n   * @param {*} node\r\n   */\r\n  self.prepNode = function(node) {\r\n    let nodeToAdd = node;\r\n    if (!node.data) {\r\n      node.data = {};\r\n    }\r\n    nodeToAdd.renderData = {\r\n      label: node.data.label || \"No Label\",\r\n      color: node.data.color || def.NODE_COLOR,\r\n      hcolor: node.data.hcolor || def.NODE_HIGHLIGHT,\r\n      shape: node.data.shape || def.NODE_SHAPE,\r\n      linecolor: new THREE.Color(0.5, 0.5, 0.5),\r\n      numYeast: Math.ceil(Math.random() * 8),\r\n      size: node.data.size,\r\n      tsize: node.data.tsize || def.TEXT_SIZE,\r\n      x: 0,\r\n      y: 0,\r\n      vx: 0,\r\n      vy: 0\r\n    };\r\n    return nodeToAdd;\r\n  };\r\n\r\n  /**\r\n   * Creates a generic rectangle shape to use for selection and boundaries\r\n   */\r\n  self.make1x1Rect = function() {\r\n    var rectShape = new THREE.Shape();\r\n    rectShape.moveTo(0, 0);\r\n    rectShape.lineTo(0, 1);\r\n    rectShape.lineTo(1, 1);\r\n    rectShape.lineTo(1, 0);\r\n    rectShape.lineTo(0, 0);\r\n    rectShape.lineTo(0, 1);\r\n    return new THREE.ShapeGeometry(rectShape);\r\n  };\r\n\r\n  /**\r\n   * Creates a centered 2x2 Rectangle\r\n   */\r\n  self.make2x2Rect = function() {\r\n    var rectShape = new THREE.Shape();\r\n    rectShape.moveTo(-1, -1);\r\n    rectShape.lineTo(-1, 1);\r\n    rectShape.lineTo(1, 1);\r\n    rectShape.lineTo(1, -1);\r\n    rectShape.lineTo(-1, -1);\r\n    return new THREE.ShapeGeometry(rectShape);\r\n  };\r\n\r\n  /**\r\n   *  find radius of circle given the volume\r\n   * @param {*} volume\r\n   */\r\n  self.volToRadius = function(volume) {\r\n    return Math.pow((volume / Math.PI) * (3.0 / 4.0), 1.0 / 3.0);\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Creates or converts ngraph or d3 graph\r\n   */\r\n  self.setupGraph = function() {\r\n    var createNGraph = require(\"ngraph.graph\");\r\n    self.graph = createNGraph();\r\n    if (self.inGraph) {\r\n      self.updateGraph(self.inGraph);\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Create layout using d3\r\n   */\r\n  self.setupLayout = function() {\r\n    if (self.options.layout == \"ngraph\") {\r\n      self.setupNgraphLayout();\r\n    } else if (self.options.layout == \"d3\") {\r\n      self.setupD3Layout();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set graph layout to ngraph\r\n   */\r\n  self.setupNgraphLayout = function() {\r\n    self.force = require(\"ngraph.forcelayout\")(self.graph);\r\n  };\r\n\r\n  /**\r\n   * Set graph layout to D3 Force Directed and set decay parameters\r\n   */\r\n  self.setupD3Layout = function() {\r\n    self.force = d3\r\n      .forceSimulation()\r\n      .force(\"charge\", d3.forceManyBody().strength(-1))\r\n      .force(\"link\", d3.forceLink())\r\n      .force(\"y\", d3.forceY(0).strength(0.001))\r\n      .force(\"x\", d3.forceX(0).strength(0.001))\r\n      .stop();\r\n\r\n    // set alpha decay to be lower than the default 0.0228\r\n    // so force layout does not prematurely stop\r\n    self.force.alphaDecay(0.005);\r\n\r\n    // set velocity decay to be lower than the default 0.4\r\n    // so nodes move to their final locations\r\n    self.force.velocityDecay(0.1);\r\n  };\r\n\r\n  self.setDisplayParams = function() {\r\n    self.element = document.getElementById(\"graph-container\");\r\n    self.clientRect = self.element.getBoundingClientRect();\r\n    self.width = self.clientRect.width;\r\n    self.height = self.clientRect.height;\r\n    self.aspect = self.width / self.height;\r\n    self.resolution = new THREE.Vector2(self.width, self.height);\r\n  };\r\n\r\n  self.setRendererParams = function() {\r\n    self.renderer.setSize(self.width, self.height);\r\n    self.cssRenderer = new THREE.CSS3DRenderer();\r\n    self.cssRenderer.setSize(self.width, self.height);\r\n    self.cssRenderer.domElement.style.position = \"absolute\";\r\n    self.cssRenderer.domElement.style.top = 0;\r\n    self.renderer.setPixelRatio(window.devicePixelRatio);\r\n  };\r\n\r\n  /**\r\n   *  Create initial camera and parameters\r\n   */\r\n  self.setupCamera = function() {\r\n    self.ccamera = new THREE.PerspectiveCamera(\r\n      self.fov,\r\n      self.width / self.height,\r\n      self.near,\r\n      self.far\r\n    );\r\n    self.ccamera.position.z = 200;\r\n    var controls = new OrbitControls(self.ccamera, self.element);\r\n    controls.spacePan = true; // Space bar panning\r\n    controls.bothPan = true; // Space bar and right click panning\r\n    controls.minDistance = 10;\r\n    controls.maxDistance = self.renderWidth * 2;\r\n    controls.target.set(0, 0, 0);\r\n    controls.enableRotate = false;\r\n    self.controls = controls;\r\n  };\r\n\r\n  /**\r\n   *  Create minimap\r\n   */\r\n  self.setupMinimap = function() {\r\n    self.minimap = {};\r\n    self.minimap.camera = new THREE.PerspectiveCamera(\r\n      self.fov,\r\n      1,\r\n      self.near,\r\n      self.far\r\n    );\r\n    self.minimap.camera.position.z = self.renderWidth * 2;\r\n\r\n    (self.oldCoords = {\r\n      x: null,\r\n      y: null,\r\n      z: null\r\n    }),\r\n      /**\r\n       * Pan the ccamera according to mouse position on screen (should be called only when mouse is on minimap)\r\n       * @param coordX mouse position on screen returned by relMouseCoords\r\n       * @param coordY mouse position on screen returned by relMouseCoords\r\n       */\r\n      (self.minimap.panToMousePosition = function(coordX, coordY) {\r\n        // ensures that the camera position is updated from the last pan.\r\n        if (\r\n          self.ccamera.position.x == self.oldCoords.x &&\r\n          self.ccamera.position.y == self.oldCoords.y &&\r\n          self.ccamera.position.z == self.oldCoords.z\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        self.oldCoords.x = self.ccamera.position.x;\r\n        self.oldCoords.y = self.ccamera.position.y;\r\n        self.oldCoords.z = self.ccamera.position.z;\r\n\r\n        // 850 is an approximation\r\n        const coefficient = (self.height - 200) / self.ccamera.position.z;\r\n\r\n        self.controls.pan(\r\n          ((coordX / self.minimap.width) * 2000 -\r\n            1000 -\r\n            self.ccamera.position.x) *\r\n            -coefficient,\r\n          (((self.height - coordY) / self.minimap.height) * 2000 -\r\n            1000 -\r\n            self.ccamera.position.y) *\r\n            coefficient\r\n        );\r\n      });\r\n  };\r\n\r\n  /**\r\n   *  Create initial scene geometry and attributes\r\n   */\r\n  self.setupGeometry = function() {\r\n    self.scene = new THREE.Scene();\r\n\r\n    self.points = new THREE.BufferGeometry();\r\n    self.nodes = new THREE.Group();\r\n    self.scene.add(self.nodes);\r\n\r\n    if (def.LINES == \"fancy\") {\r\n      self.setupFancyEdges();\r\n    } else {\r\n      self.setUpSimpleEdges();\r\n    }\r\n\r\n    var rect = self.make1x1Rect();\r\n\r\n    self.setupSelectionBox(rect);\r\n    self.setupBoundaries(rect);\r\n    self.setupViewPort(rect);\r\n  };\r\n\r\n  /**\r\n   * Setup data structures for fancy edges\r\n   */\r\n  self.setupFancyEdges = function() {\r\n    self.edges = [];\r\n    self.edgeCount = 0;\r\n  };\r\n\r\n  /**\r\n   * Sets up data structures for simple edges\r\n   */\r\n  self.setUpSimpleEdges = function() {\r\n    self.edges = new THREE.BufferGeometry();\r\n    var material = new THREE.LineBasicMaterial({\r\n      linewidth: 2,\r\n      color: 0xffffff,\r\n      vertexColors: THREE.VertexColors,\r\n      shading: THREE.FlatShading\r\n    });\r\n    self.line = new THREE.LineSegments(self.edges, material);\r\n    self.line.frustumCulled = false;\r\n    self.scene.add(self.line);\r\n\r\n    var positions = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n    var colors = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n\r\n    self.edges.addAttribute(\"position\", positions);\r\n    self.edges.addAttribute(\"color\", colors);\r\n    self.drawCount = 0;\r\n  };\r\n\r\n  /**\r\n   * Adds box to screen that is displayed when selecting groups of nodes\r\n   */\r\n  self.setupSelectionBox = function(rect) {\r\n    self.selectBox = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x3399aa })\r\n    );\r\n    self.selectBox.visible = false;\r\n    self.scene.add(self.selectBox);\r\n  };\r\n\r\n  /**\r\n   * Sets boundaries for max edges of graph\r\n   */\r\n  self.setupBoundaries = function(rect) {\r\n    self.boundaries = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x999999 })\r\n    );\r\n    self.scene.add(self.boundaries);\r\n    self.setBoundarySize(self.renderWidth * 2);\r\n  };\r\n\r\n  /**\r\n   * Sets viewport to match size of display\r\n   */\r\n  self.setupViewPort = function(rect) {\r\n    self.viewPort = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: self.darkMode? 0xffffff : 0x000000})\r\n    );\r\n    self.scene.add(self.viewPort);\r\n    self.setViewPortSize(self.ccamera);\r\n  };\r\n\r\n  /**\r\n   *  Creates listeners and events for selecting nodes\r\n   */\r\n  self.setupSelect = function() {\r\n    self.points.addAttribute(\r\n      \"position\",\r\n      new THREE.BufferAttribute(new Float32Array(20 * 3), 3)\r\n    );\r\n    self.points.computeBoundingSphere();\r\n    self.nodeCount = 0;\r\n    var mouseHandler = function(callback) {\r\n      return function(event) {\r\n        var coords = self.relMouseCoords(event, this);\r\n        var mouseX = (coords.x / self.width) * 2 - 1;\r\n        var mouseY = 1 - (coords.y / self.height) * 2;\r\n        var mousePosition = new THREE.Vector3(mouseX, mouseY, 1);\r\n        mousePosition.unproject(self.ccamera);\r\n        var dir = mousePosition.sub(self.ccamera.position).clone();\r\n        mousePosition.normalize();\r\n        // Determine whether mouse is on minimap\r\n        self.isMouseCoordinatesOnMinimap =\r\n          coords.x <= self.minimap.width &&\r\n          self.height - coords.y <= self.minimap.height;\r\n        if (self.isMouseCoordinatesOnMinimap) {\r\n          self.minimap.mouseX = coords.x;\r\n          self.minimap.mouseY = coords.y;\r\n        }\r\n\r\n        // Determine intersects\r\n        var raycaster = new THREE.Raycaster(\r\n          self.ccamera.position,\r\n          mousePosition\r\n        );\r\n\r\n        // Find real location of mouse\r\n        var distance = -self.ccamera.position.z / dir.z;\r\n        var pos = self.ccamera.position\r\n          .clone()\r\n          .add(dir.multiplyScalar(distance));\r\n\r\n        if (callback == self.onRightClick && event.which != 3) {\r\n          return;\r\n        }\r\n\r\n        if (\r\n          callback == self.onRightClick &&\r\n          event.target.getAttribute(\"contenteditable\")\r\n        ) {\r\n          event.target.focus();\r\n        } else {\r\n          event.preventDefault();\r\n          if (callback == self.onRightClick) {\r\n            self.onRightClickCoords(event);\r\n          }\r\n          self.callMouseHandler(raycaster, pos, callback);\r\n        }\r\n      };\r\n    };\r\n\r\n    //Add listeners to web page\r\n    self.setupMouseHandlers(mouseHandler);\r\n  };\r\n\r\n  /**\r\n   * Checks if a node has been clicked, and calls the appropriate mouse handler function\r\n   */\r\n  self.callMouseHandler = function(raycaster, pos, callback) {\r\n    var intersects = raycaster.intersectObjects(self.nodes.children);\r\n    if (intersects.length) {\r\n      // If a node has been clicked\r\n      var nodeIndex = intersects[0].object.index;\r\n      self.oldIntersect = nodeIndex;\r\n      callback(\r\n        self.graph.getNode(nodeIndex),\r\n        pos.x,\r\n        pos.y,\r\n        event.button,\r\n        event.ctrlKey\r\n      );\r\n    } else {\r\n      callback(null, pos.x, pos.y, event.button, event.ctrlKey);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add Mouse Event Listeners to page\r\n   */\r\n  self.setupMouseHandlers = function(mouseHandler) {\r\n    self.element.addEventListener(\r\n      \"mousemove\",\r\n      mouseHandler(self.onMouseMove),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mousedown\",\r\n      mouseHandler(self.onMouseDown),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mouseup\",\r\n      mouseHandler(self.onMouseUp),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mouseup\",\r\n      mouseHandler(self.onRightClick),\r\n      false\r\n    );\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  self.addNode = function(node) {\r\n    self.graph.addNode(node.id, node.data);\r\n    var graphNode = self.graph.getNode(node.id);\r\n    graphNode.x = node.x;\r\n    graphNode.y = node.y;\r\n    graphNode.fx = node.fx;\r\n    graphNode.fy = node.fy;\r\n    graphNode.pinnedx = node.fx != undefined;\r\n    graphNode.pinnedy = node.fy != undefined;\r\n    self.prepNode(graphNode);\r\n    self.drawNode(graphNode);\r\n    graphNode.links = [];\r\n    self.layoutInit = true;\r\n    return graphNode;\r\n  };\r\n\r\n  self.removeNode = function(node) {\r\n    if (!node || !node.id) {\r\n      return;\r\n    }\r\n    self.removeGraphEdges(node);\r\n    self.undrawEdges(node);\r\n    self.nodes.remove(node.renderData.draw_object);\r\n    self.graph.removeNode(node.id);\r\n    self.undrawNode(node);\r\n    self.nodeCount -= 1;\r\n  };\r\n\r\n  self.removeGraphEdges = function(node) {\r\n    var nodeLinks = self.graph.getLinks(node.id);\r\n    if (nodeLinks) {\r\n      nodeLinks.forEach(function(edge) {\r\n        self.graph.removeLink(edge);\r\n      });\r\n    }\r\n  };\r\n\r\n  self.undrawNode = function(node) {\r\n    var nodes = self.force.nodes();\r\n    if (nodes) {\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].id == node.id) {\r\n          self.scene.remove(nodes[i].renderData.draw_object);\r\n          nodes[i].renderData.textHolder.children[0].element.hidden = true;\r\n          nodes.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  self.undrawEdges = function(node) {\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n    var killed = 0;\r\n    for (var i = 0; i - killed < self.lineIndices.length; i++) {\r\n      if (\r\n        self.lineIndices[i - killed].source.id == node.id ||\r\n        self.lineIndices[i - killed].target.id == node.id\r\n      ) {\r\n        for (var j = i - killed; j < self.lineIndices.length; j++) {\r\n          var k = j + 1;\r\n          if (k == self.lineIndices.length) {\r\n            positions[j * 6] = 0;\r\n            positions[j * 6 + 1] = 0;\r\n            positions[j * 6 + 3] = 0;\r\n            positions[j * 6 + 4] = 0;\r\n            colors[j * 6] = 255;\r\n            colors[j * 6 + 1] = 160;\r\n            colors[j * 6 + 2] = 80;\r\n            colors[j * 6 + 3] = 255;\r\n            colors[j * 6 + 4] = 160;\r\n            colors[j * 6 + 5] = 80;\r\n          } else {\r\n            self.lineIndices[j] = self.lineIndices[k];\r\n            self.lineObjects[j * 2] = self.lineObjects[k * 2];\r\n            self.lineObjects[j * 2 + 1] = self.lineObjects[k * 2 + 1];\r\n            positions[j * 6] = positions[k * 6];\r\n            positions[j * 6 + 1] = positions[k * 6 + 1];\r\n            positions[j * 6 + 3] = positions[k * 6 + 3];\r\n            positions[j * 6 + 4] = positions[k * 6 + 4];\r\n            colors[j * 6] = colors[k * 6];\r\n            colors[j * 6 + 1] = colors[k * 6 + 1];\r\n            colors[j * 6 + 2] = colors[k * 6 + 2];\r\n            colors[j * 6 + 3] = colors[k * 6 + 3];\r\n            colors[j * 6 + 4] = colors[k * 6 + 4];\r\n            colors[j * 6 + 5] = colors[k * 6 + 5];\r\n          }\r\n        }\r\n        self.lineIndices.pop();\r\n        self.lineObjects.pop();\r\n        self.lineObjects.pop();\r\n        self.drawCount -= 2;\r\n        killed += 1;\r\n      }\r\n    }\r\n    console.log(\"Deleted \" + killed.toString() + \" edges\");\r\n  };\r\n\r\n  self.getNode = function(node_id) {\r\n    return self.graph.getNode(node_id);\r\n  };\r\n\r\n  self.addEdge = function(source, target, visible = true) {\r\n    self.graph.addLink(source.id, target.id);\r\n    self.drawEdge(self.getNode(source.id), self.getNode(target.id), visible);\r\n  };\r\n\r\n  self.addNeighbors = function(node, neighbors) {\r\n    for (var i = 0; i < neighbors.length; i++) {\r\n      var newNode = neighbors[i];\r\n      self.addNode(newNode);\r\n      self.addEdge(node.id, newNode.id);\r\n    }\r\n  };\r\n\r\n  self.addNeighbors2 = function(node) {\r\n    self.removeFakes();\r\n    self.neighborHost = node;\r\n    node.pinnedx = true;\r\n    node.pinnedy = true;\r\n    var id = node.id;\r\n    var points = [];\r\n    for (var i = 0; i < 5; i++) {\r\n      id += 10000;\r\n      var newNode = $.extend(true, {}, node);\r\n      newNode.id = id;\r\n      newNode.data.label = i;\r\n      newNode.fx = node.x;\r\n      newNode.fy = node.y;\r\n      newNode.data.shape = node.renderData.shape;\r\n      self.fakeNodes.push(self.addNode(newNode));\r\n      self.addEdge(self.graph.getNode(node.id), self.graph.getNode(newNode.id));\r\n    }\r\n    self.lastNode = self.graph.getNode(id);\r\n  };\r\n\r\n  self.removeFakes = function(node = null) {\r\n    if (self.fakeNodes.length >= 3) {\r\n      for (var i = 0; i < 5; i++) {\r\n        if (i != node) {\r\n          self.removeNode(self.fakeNodes[i]);\r\n        }\r\n        self.fakeNodes[i].pinnedx = false;\r\n        self.fakeNodes[i].pinnedy = false;\r\n      }\r\n      self.fakeNodes = [];\r\n    }\r\n    if (self.neighborHost) {\r\n      self.neighborHost.pinnedx = false;\r\n      self.neighborHost.pinnedy = false;\r\n      self.neighborHost = null;\r\n    }\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Change color of node edges\r\n   */\r\n  self.highlightNode = function(node, toggle, color = def.NODE_HIGHLIGHT) {\r\n    if (toggle) {\r\n      node.renderData.draw_object.children[0].material.color.setHex(color);\r\n      node.renderData.draw_object.children[0].visible = true;\r\n    } else {\r\n      node.renderData.draw_object.children[0].material.color.set(\r\n        node.renderData.hcolor\r\n      );\r\n      node.renderData.draw_object.children[0].visible = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Highlight edges from and to a node and hide others\r\n   */\r\n  self.highlightEdges = function(node, toggle) {\r\n    const froms = [];\r\n    const tos = [];\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      for (var j = 0; j < self.selection[i].links.length; j++) {\r\n        froms.push(self.selection[i].links[j].fromId);\r\n        tos.push(self.selection[i].links[j].toId);\r\n      }\r\n    }\r\n    if (toggle) {\r\n      for (var i = 0; i < node.links.length; i++) {\r\n        froms.push(node.links[i].fromId);\r\n        tos.push(node.links[i].toId);\r\n      }\r\n      self.highlightNeighbors(node, froms, tos);\r\n    } else {\r\n      self.highlightNeighbors(node, froms, tos);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Highlight adjacent nodes\r\n   * \r\n   * Also highlights edges.\r\n   */\r\n  self.highlightNeighbors = function(node, froms, tos) {\r\n    self.graph.forEachNode(n => {\r\n      if (self.selection.indexOf(n) != -1 || n == node) {\r\n        // If the node is selected or the node is the node to be highlighted\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n, 0.5, 0.5);\r\n        for (var i = 0; i < n.linkObjs.length; i++) {\r\n          n.linkObjs[i].linecolor = n.renderData.linecolor;\r\n        }\r\n      } else if (\r\n        self.doHighlightNeighbors &&\r\n        (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1)\r\n      ) {\r\n        // If the node is not selected or highlighted and\r\n        // if the node is present in either froms or tos arrays\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n, 0.3, 0.9);\r\n      } else if (\r\n        !self.prevHighlights ||\r\n        self.prevHighlights.indexOf(n.id) == -1\r\n      ) {\r\n        self.colorNodeOpacity(n, 0.5);\r\n        self.colorNodeEdge(n, 0.3, 0.9);\r\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   *  Change color of node edges\r\n   */\r\n  self.colorNodeEdge = function(node, dc, c) {\r\n    node.renderData.linecolor.r = self.darkMode ? dc : c;\r\n    node.renderData.linecolor.g = self.darkMode ? dc : c;\r\n    node.renderData.linecolor.b = self.darkMode ? dc : c;\r\n  };\r\n\r\n  /**\r\n   *  Change node opacity\r\n   */\r\n  self.colorNodeOpacity = function(node, op) {\r\n    node.renderData.draw_object.material.opacity = op;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  self.selectNode = function(node) {\r\n    self.dragging = node;\r\n    self.selection = [node];\r\n    node.renderData.isSelected = true;\r\n    self.updateSelection(self.mouseX, self.mouseY);\r\n  };\r\n\r\n  /**\r\n   * Deselect nodes in selection list\r\n   */\r\n  self.clearSelection = function() {\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      self.selection[i].renderData.isSelected = false;\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        self.selection[i].renderData.draw_object.children[0].visible = false;\r\n      } else {\r\n        self.selection[i].renderData.draw_object.material.color.set(\r\n          new THREE.Color(self.selection[i].renderData.color)\r\n        );\r\n      }\r\n      self.selection[i].renderData.textHolder.children[0].element.hideme = true;\r\n    }\r\n    self.selection = [];\r\n  };\r\n\r\n  /**\r\n   *  Update positions of all objects in self.selection\r\n   *  based on diff between mouse position and self.dragging position\r\n   */\r\n  self.updateSelection = function(mouseX, mouseY) {\r\n    if (self.dragging) {\r\n      var diffx = mouseX - self.dragging.x;\r\n      var diffy = mouseY - self.dragging.y;\r\n    }\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      if (self.dragging) {\r\n        self.selection[i].x += diffx;\r\n        self.selection[i].y += diffy;\r\n        self.selection[i].fx = self.selection[i].x;\r\n        self.selection[i].fy = self.selection[i].y;\r\n        self.selection[i].pinnedx = true;\r\n        self.selection[i].pinnedy = true;\r\n      }\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        self.selection[i].renderData.draw_object.children[0].visible = true;\r\n      } else {\r\n        self.selection[i].renderData.draw_object.material.color.set(\r\n          new THREE.Color(self.selection[i].renderData.hcolor)\r\n        );\r\n      }\r\n      self.selection[\r\n        i\r\n      ].renderData.textHolder.children[0].element.hideme = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Find any objects within the current box selection and add it to self.selection\r\n   */\r\n  self.checkSelection = function(mouseX, mouseY) {\r\n    if (!self.dragging) {\r\n      self.mouseEnd = new THREE.Vector3(mouseX, mouseY, 0);\r\n      if (self.mouseStart.x < self.mouseEnd.x) {\r\n        var left = self.mouseStart;\r\n        var right = self.mouseEnd;\r\n      } else {\r\n        var left = self.mouseEnd;\r\n        var right = self.mouseStart;\r\n      }\r\n\r\n      self.graph.forEachNode(function(node) {\r\n        let npos;\r\n        if (self.options.layout == \"ngraph\") {\r\n          npos = self.force.getNodePosition(node.id);\r\n        } else if (self.options.layout == \"d3\") {\r\n          npos = node;\r\n        }\r\n        if (self.insideBox(left, right, npos.x, npos.y)) {\r\n          self.selection.push(node);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  returns true if pos is in box with top left l and bottom right r\r\n   */\r\n  self.insideBox = function(l, r, posx, posy) {\r\n    return (\r\n      posx < r.x &&\r\n      posx > l.x &&\r\n      ((posy > r.y && posy < l.y) || (posy < r.y && posy > l.y))\r\n    );\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Mouse move event that selections nodes in selection box\r\n   */\r\n  self.onMouseMove = function(selection, mouseX, mouseY, button, ctrl) {\r\n    // check if left button is not down\r\n    self.mouseX = mouseX;\r\n    self.mouseY = mouseY;\r\n\r\n    if (self.leftMouseDown && self.mouseDown) {\r\n      // left-clicked empty space (i.e., not clicking a node)\r\n      if (!self.dragging && self.selection.indexOf(selection) == -1 && !ctrl) {\r\n        self.clearSelection();\r\n      }\r\n\r\n      if (!self.dragging) {\r\n        // add nodes enclosed by selection box into node selection\r\n        self.checkSelection(mouseX, mouseY);\r\n      }\r\n    }\r\n\r\n    if (self.selection.length > 0) {\r\n      // reactivate (in D3's terminology: reheat) the force layout\r\n      if (self.dragging) {\r\n        self.force.alpha(1);\r\n      }\r\n      // update position of nodes in selection\r\n      self.updateSelection(mouseX, mouseY);\r\n    }\r\n\r\n    if (!self.mouseDown) {\r\n      self.onHover(selection);\r\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\r\n    } else {\r\n      // if mouse is in minimap, do nothing else\r\n      if (self.isMouseCoordinatesOnMinimap) {\r\n        self.minimap.panToMousePosition(\r\n          self.minimap.mouseX,\r\n          self.minimap.mouseY\r\n        );\r\n        return;\r\n      }\r\n\r\n      // update selection box size/position\r\n      if (self.leftMouseDown && !self.dragging) {\r\n        if (self.showBox) {\r\n          self.selectBox.visible = true;\r\n          self.showBox = false;\r\n        }\r\n        self.selectBox.position.x = mouseX;\r\n        self.selectBox.position.y = mouseY;\r\n        var diffx = self.mouseStart.x - mouseX;\r\n        var diffy = self.mouseStart.y - mouseY;\r\n        self.selectBox.scale.set(diffx, diffy, 1);\r\n      } else {\r\n        self.selectBox.visible = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mouse hover over node event that highlights the node and neighbors at mouse position\r\n   */\r\n  self.onHover = function(node) {\r\n    if (self.lastHover && self.selection.indexOf(self.lastHover) == -1) {\r\n      self.highlightNode(self.lastHover, false);\r\n      self.lastHover.renderData.textHolder.children[0].element.hideme = true;\r\n      self.highlightEdges(node, false);\r\n    }\r\n    self.lastHover = node;\r\n    if (node) {\r\n      self.highlightNode(node, true);\r\n      node.renderData.textHolder.children[0].element.hideme = false;\r\n      self.highlightEdges(node, true);\r\n    } else if (self.selection.length == 0) {\r\n      self.graph.forEachNode(n => {\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n, 0.5, 0.5);\r\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n      });\r\n    }\r\n    if (self.prevHighlights != undefined) {\r\n      for (var i = 0; i < self.prevHighlights.length; i++) {\r\n        self.colorNodeOpacity(self.prevHighlights[i], 1);\r\n        self.highlightNode(self.prevHighlights[i], true, def.SEARCH_HIGHLIGHT);\r\n      }\r\n    }\r\n  };\r\n\r\n  // vars to get time at mouse press and time at mouse release\r\n  var startTime = 0;\r\n  var endTime = 0;\r\n  /**\r\n   * Mouse down event to start a selection box or start dragging a node\r\n   */\r\n  self.onMouseDown = function(selection, mouseX, mouseY, button, ctrl) {\r\n    // if mouse is in minimap, do nothing else\r\n    if (self.isMouseCoordinatesOnMinimap) {\r\n      self.mouseDown = true;\r\n      self.minimap.panToMousePosition(self.minimap.mouseX, self.minimap.mouseY);\r\n      return;\r\n    }\r\n    startTime = Date.now();\r\n    self.leftMouseDown = button == 0;\r\n    // left or right mouse button\r\n    if (button == 0 || button == 2) {\r\n      self.mouseDown = true;\r\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\r\n      if (button == 0 && !self.dragging) {\r\n        self.showBox = true;\r\n      }\r\n      if (self.selection.indexOf(selection) == -1 && !ctrl) {\r\n        for (var i = 0; i < self.selection.length; i++) {\r\n          self.selection[i].renderData.isSelected = false;\r\n          if (!def.NODE_NO_HIGHLIGHT) {\r\n            self.selection[\r\n              i\r\n            ].renderData.draw_object.children[0].visible = false;\r\n          } else {\r\n            self.selection[i].renderData.draw_object.material.color.set(\r\n              new THREE.Color(self.selection[i].renderData.color)\r\n            );\r\n          }\r\n          self.selection[\r\n            i\r\n          ].renderData.textHolder.children[0].element.hideme = true;\r\n        }\r\n        self.selection = [];\r\n      }\r\n      if (selection) {\r\n        self.dragging = selection;\r\n        if (!selection.renderData.isSelected) {\r\n          if (self.selection.indexOf(selection) == -1) {\r\n            self.selection.push(selection);\r\n          }\r\n          selection.renderData.isSelected = true;\r\n          self.updateSelection(mouseX, mouseY);\r\n        } else if (ctrl) {\r\n          self.selection.splice(self.selection.indexOf(selection), 1);\r\n          selection.renderData.isSelected = false;\r\n          if (!def.NODE_NO_HIGHLIGHT) {\r\n            selection.renderData.draw_object.children[0].visible = false;\r\n          } else {\r\n            selection.renderData.draw_object.material.color.set(\r\n              new THREE.Color(self.selection[i].renderData.color)\r\n            );\r\n          }\r\n          selection.renderData.textHolder.children[0].element.hideme = true;\r\n          self.dragging = null;\r\n        }\r\n      } else {\r\n        if (self.newNodeIds) {\r\n          self.highlightNodeIds([], true);\r\n          self.newNodeIds = undefined;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mouse up event that closes selection flags and emits selection to Argo\r\n   */\r\n  self.onMouseUp = function(selection, mouseX, mouseY, button) {\r\n    endTime = Date.now();\r\n    self.mouseDown = false;\r\n    // Left or right mouse button\r\n    if (button == 0 || button == 2) {\r\n      self.showBox = false;\r\n      self.dragging = null;\r\n      self.selectBox.visible = false;\r\n\r\n      self.ee.emit(\"select-nodes\", self.selection);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Right click event to save right clicked node\r\n   */\r\n  self.onRightClick = function(selection) {\r\n    if (selection) {\r\n      self.rightClickedNode = selection;\r\n    }\r\n    if (self.neighborHost) {\r\n      var n = self.fakeNodes.indexOf(selection);\r\n      if (n != -1) {\r\n        self.removeFakes(n);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Right click event that emits context menu event to Argo\r\n   */\r\n  self.onRightClickCoords = function(event) {\r\n    // Don't show menu if dragging camera\r\n    if (endTime - startTime < 200) {\r\n      self.ee.emit(\"right-click\", {\r\n        pageX: event.pageX,\r\n        pageY: event.pageY\r\n      });\r\n    }\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Set all nodes to a size\r\n   */\r\n  self.setUniformNodeSize = function(s) {\r\n    self.graph.forEachNode(function(node) {\r\n      node.renderData.draw_object.scale.set(s, s, 1);\r\n      var hsize = 1 + def.HIGHLIGHT_SIZE / s;\r\n      node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a size based on a value in the node's data\r\n   */\r\n  self.setNodeDataSize = function(dataValue) {\r\n    self.graph.forEachNode(function(node) {\r\n      dataVal = node.renderData[dataValue];\r\n      if (!dataVal) {\r\n        console.log(\"Data value does not exist\");\r\n      } else {\r\n        dataVal = Math.log(dataVal + 1);\r\n        node.renderData.draw_object.scale.set(dataVal, dataVal, 1);\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / dataVal;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a color\r\n   */\r\n  self.setUniformNodeColor = function(hsvDegree) {\r\n    self.graph.forEachNode(function(node) {\r\n      node.renderData.draw_object.material.color.set(\r\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 43%)\")\r\n      );\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        node.renderData.draw_object.children[0].material.color.set(\r\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a color based on a value in the node's data\r\n   */\r\n  self.setNodeDataColor = function(dataValue) {\r\n    var i = 0;\r\n    values = [];\r\n    min = null;\r\n    max = null;\r\n\r\n    self.graph.forEachNode(function(node) {\r\n      if ((dataVal = node.renderData[dataValue])) {\r\n        if (min == null) min = dataVal;\r\n        if (max == null) max = dataVal;\r\n        if (dataVal < min) min = dataVal;\r\n        else if (dataVal > max) max = dataVal;\r\n        values[i] = dataVal;\r\n        i += 1;\r\n      } else {\r\n        values[i] = -1;\r\n      }\r\n    });\r\n\r\n    i = 0;\r\n    self.graph.forEachNode(function(node) {\r\n      var hsvDegree;\r\n      if (values[i] == -1) {\r\n        hsvDegree = 0;\r\n      } else {\r\n        values[i] = (values[i] - min) / (max - min);\r\n        hsvDegree = values[i] * 120;\r\n      }\r\n      node.renderData.draw_object.material.color.set(\r\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 48%)\")\r\n      );\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        node.renderData.draw_object.children[0].material.color.set(\r\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\r\n        );\r\n      }\r\n      i++;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Map a node attribute based on some mapping function\r\n   */\r\n  self.mapNodeAttributes = function(mapping, nodes = null) {\r\n    let val;\r\n    if (mapping[0] == \"degree\") {\r\n      val = node => (node.links ? node.links.length + 2 : 2);\r\n    } else if (mapping[0] == \"scalex\") {\r\n      val = node => node.renderData.draw_object.scale.x;\r\n    } else {\r\n      val = node => mapping[0];\r\n    }\r\n\r\n    let mod;\r\n    if (mapping[1] == \"volume\") {\r\n      mod = val => self.volToRadius(val);\r\n    } else if (mapping[1] == \"mult\") {\r\n      mod = val => val * mapping[3](val);\r\n    } else if (mapping[1] == \"add\") {\r\n      mod = val => val + mapping[3](val);\r\n    } else if (mapping[1] == \"log\") {\r\n      mod = val => Math.log(val);\r\n    } else {\r\n      mod = val => val;\r\n    }\r\n\r\n    let attr;\r\n    if (mapping[2] == \"scalexy\") {\r\n      attr = (node, val) => {\r\n        node.renderData.draw_object.scale.set(val, val, 1);\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / val;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      };\r\n    } else if (mapping[2] == \"edgeColorRed\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.r = 1;\r\n        node.renderData.linecolor.b = 1 - val / 5;\r\n        node.renderData.linecolor.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"edgeColorBlue\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.b = 1;\r\n        node.renderData.linecolor.r = 1 - val / 5;\r\n        node.renderData.linecolor.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"edgeColorGreen\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.g = 1;\r\n        node.renderData.linecolor.b = 1 - val / 5;\r\n        node.renderData.linecolor.r = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"nodeColorBlue\") {\r\n      attr = (node, val) => {\r\n        node.renderData.draw_object.material.color.b = 1;\r\n        node.renderData.draw_object.material.color.r = 1 - val / 5;\r\n        node.renderData.draw_object.material.color.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"pinned\") {\r\n      attr = (node, val) => {\r\n        node.pinnedx = val;\r\n        node.pinnedy = val;\r\n      };\r\n    } else if (mapping[2] == \"labelSize\") {\r\n      attr = (node, val) => {\r\n        self.changeLabelFontSize(node, val);\r\n      };\r\n    } else if (mapping[2] == \"labelLength\") {\r\n      attr = (node, val) => {\r\n        self.changeLabelLength(node, val);\r\n      };\r\n    }\r\n\r\n    self.changeNodes(val, mod, attr, nodes);\r\n  };\r\n\r\n  /**\r\n   *  get attribute from node using function val\r\n   *  modify result with function mode\r\n   *  set node attribute with attr\r\n   */\r\n  self.changeNode = function(val, mod, attr, node) {\r\n    var v = val(node);\r\n    if (v != undefined) {\r\n      var r = mod(v);\r\n      if (r != undefined) {\r\n        attr(node, r);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  perform changeNode on many nodes\r\n   */\r\n  self.changeNodes = function(val, mod, attr, nodes = null) {\r\n    if (nodes == null) {\r\n      self.graph.forEachNode(function(node) {\r\n        self.changeNode(val, mod, attr, node);\r\n      });\r\n    } else {\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        self.changeNode(val, mod, attr, nodes[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Limit label size by (estimated) characters\r\n   * This is only accurate if the label is monospaced\r\n   */\r\n  self.changeLabelLength = function(node, numChars) {\r\n    node.renderData.textHolder.children[0].element.children[0].style.width =\r\n      numChars.toString() + \"ch\";\r\n  };\r\n\r\n  /**\r\n   * Limit label size by (estimated) characters\r\n   * This is only accurate if the label is monospaced\r\n   */\r\n  self.changeLabelFontSize = function(node, size, relativeSize = 1) {\r\n    size = size * relativeSize;\r\n    node.renderData.textHolder.children[0].element.children[0].style.fontSize =\r\n      size.toString() + \"rem\";\r\n  };\r\n\r\n  /**\r\n   * Change boundary size\r\n   */\r\n  self.setBoundarySize = function(size) {\r\n    self.renderWidth = size;\r\n    self.renderHeight = size;\r\n    self.boundaries.scale.set(size * 2, size * 2, 1);\r\n    self.boundaries.position.x = -size;\r\n    self.boundaries.position.y = -size;\r\n    self.controls.maxDistance = size * 2;\r\n    self.minimap.camera.position.z = self.renderWidth * 2;\r\n  };\r\n\r\n  /**\r\n   * Change viewport size\r\n   */\r\n  self.setViewPortSize = function(camera) {\r\n    var distance = self.ccamera.position.z;\r\n    var height =\r\n      Math.tan(((camera.fov * Math.PI) / 180) * 0.5) * distance * 2 + 5;\r\n    var width = height * camera.aspect + 5;\r\n    self.viewPort.scale.set(width, height, 1);\r\n    self.viewPort.position.x = camera.position.x - width / 2;\r\n    self.viewPort.position.y = camera.position.y - height / 2;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Create highlight mesh\r\n   */\r\n  self.createHighlightMesh = function(node, texture) {\r\n    var shape =\r\n      node.renderData.hshape || node.renderData.shape || def.NODE_HSHAPE;\r\n    if (shape == \"square\") {\r\n      var hgeometry = self.make2x2Rect();\r\n    } else {\r\n      var hgeometry = new THREE.CircleGeometry(1, 32);\r\n    }\r\n\r\n    return self.createHighlightDrawObject(hgeometry, node, texture);\r\n  };\r\n\r\n  /**\r\n   * Sets the material, color, visibility, and size of the highlight drawing for a node.\r\n   */\r\n  self.createHighlightDrawObject = function(hgeometry, node, texture) {\r\n    var size = self.getNodeSize(node);\r\n    var hsize = def.HIGHLIGHT_SIZE;\r\n\r\n    texture = def.NODE_NO_HTEX ? null : texture;\r\n    var color = def.NODE_NO_HCOLOR\r\n      ? null\r\n      : parseInt(node.renderData.hcolor || def.NODE_HIGHLIGHT);\r\n    var hmaterial = new THREE.MeshBasicMaterial({ color: color, map: texture });\r\n    hmaterial.transparent = true;\r\n    var highlight = new THREE.Mesh(hgeometry, hmaterial);\r\n    highlight.visible = true;\r\n    highlight.scale.set(1 + hsize / size, 1 + hsize / size, 1);\r\n    highlight.position.z = -0.01;\r\n    return highlight;\r\n  };\r\n\r\n  /**\r\n   *  Create node mesh\r\n   */\r\n  self.createNodeMesh = function(node, texture) {\r\n    var shape = node.renderData.shape || def.NODE_SHAPE;\r\n    if (shape == \"square\") {\r\n      var geometry = self.make2x2Rect();\r\n    } else {\r\n      var geometry = new THREE.CircleGeometry(1, 32);\r\n    }\r\n    return self.createNodeDrawObject(geometry, node, texture);\r\n  };\r\n\r\n  /**\r\n   * Create mesh to visual show pinning\r\n   */\r\n  self.createPinMesh = function(size) {\r\n    var geometry = self.make2x2Rect();\r\n    var color = new THREE.Color(def.PIN_COLOR);\r\n    var material = new THREE.MeshBasicMaterial({ color: color });\r\n    var pinMesh = new THREE.Mesh(geometry, material);\r\n    pinMesh.scale.set(0.1, 0.1, 1);\r\n    pinMesh.position.z = 0.01;\r\n    pinMesh.visible = false;\r\n    return pinMesh;\r\n  };\r\n\r\n  /**\r\n   * Create the drawing information for a node\r\n   */\r\n  self.createNodeDrawObject = function(geometry, node, texture) {\r\n    var size = self.getNodeSize(node);\r\n\r\n    texture = def.NODE_NO_TEX ? null : texture;\r\n    var color = def.NODE_NO_COLOR\r\n      ? null\r\n      : new THREE.Color(node.renderData.color || def.NODE_COLOR);\r\n    var material = new THREE.MeshBasicMaterial({ color: color, map: texture });\r\n    material.transparent = true;\r\n    var draw_object = new THREE.Mesh(geometry, material);\r\n    draw_object.scale.set(size, size, 1);\r\n    return draw_object;\r\n  };\r\n\r\n  /**\r\n   * Get the size of a node if it exists, otherwise get it from the render data.\r\n   */\r\n  self.getNodeSize = function(node) {\r\n    var size;\r\n    if (node.renderData.size != undefined) size = node.renderData.size;\r\n    else size = node.renderData[\"size\"];\r\n    return size;\r\n  };\r\n\r\n  self.createNodeLabel = function(node) {\r\n    var material = new THREE.MeshBasicMaterial({\r\n      color: 0x000000,\r\n      wireframe: true,\r\n      wireframeLinewidth: 1,\r\n      side: THREE.DoubleSide\r\n    });\r\n    var geometry = new THREE.PlaneGeometry(1000, 200);\r\n    var textMesh = self.createAndSetupLabelTextMesh(geometry, material);\r\n    var label = self.createAndSetupLabelDiv(node, textMesh);\r\n    var textHolder = self.createAndSetupTextHolder(label, textMesh);\r\n    node.renderData.textHolder = textHolder;\r\n    self.scene.add(textHolder);\r\n  };\r\n\r\n  self.createAndSetupLabelTextMesh = function(geometry, material) {\r\n    var textMesh = new THREE.Mesh(geometry, material);\r\n    textMesh.scale.set(def.TEXT_SIZE, def.TEXT_SIZE, 1);\r\n    var bbox = new THREE.Box3().setFromObject(textMesh);\r\n    textMesh.position.x += (bbox.max.x - bbox.min.x) * def.TEXT_X_OFFSET;\r\n    textMesh.position.y -= (bbox.max.y - bbox.min.y) * def.TEXT_Y_OFFSET;\r\n    textMesh.visible = def.TEXT_WIREFRAME;\r\n    return textMesh;\r\n  };\r\n\r\n  self.createAndSetupLabelDiv = function(node, textMesh) {\r\n    var label = self.createLabelDiv(node);\r\n    label.element.hidden = true;\r\n    label.position.copy(textMesh.position);\r\n    label.scale.copy(textMesh.scale);\r\n    return label;\r\n  };\r\n\r\n  self.createAndSetupTextHolder = function(label, textMesh) {\r\n    var textHolder = new THREE.Object3D();\r\n    textHolder.add(label);\r\n    textHolder.add(textMesh);\r\n    return textHolder;\r\n  };\r\n\r\n  /**\r\n   *  Create label div\r\n   */\r\n  self.createLabelDiv = function(node) {\r\n    // Create canvas to draw text label onto sprite image\r\n    var element = self.createLabelDivElement();\r\n    var content = document.createTextNode(node.renderData.label);\r\n    var textElement = self.createLabelTextElement();\r\n    textElement.appendChild(content);\r\n    element.appendChild(textElement);\r\n    var labelObj = new THREE.CSS3DObject(element);\r\n    return labelObj;\r\n  };\r\n\r\n  /**\r\n   * Creates the Label Div Element for a node's label\r\n   */\r\n  self.createLabelDivElement = function() {\r\n    var element = document.createElement(\"div\");\r\n    element.style.width = \"1000px\";\r\n    element.style.height = \"200px\";\r\n    element.style.backgroundColor = def.TEXT_BACK_COLOR;\r\n    element.style.opacity = def.TEXT_OPACITY;\r\n    return element;\r\n  };\r\n\r\n  /**\r\n   * Creates the text element to add to the label div for a node.\r\n   */\r\n  self.createLabelTextElement = function() {\r\n    var textElement = document.createElement(\"div\");\r\n    textElement.style.width = \"1000px\";\r\n    textElement.style.height = \"2ch\";\r\n    textElement.style.fontSize = \"96px\";\r\n    textElement.style.textOverflow = \"ellipsis\";\r\n    textElement.style.overflow = \"hidden\";\r\n    textElement.style.userSelect = \"all\";\r\n    textElement.style.whiteSpace = \"nowrap\";\r\n    //textElement.setAttribute('contenteditable', 'true');\r\n    return textElement;\r\n  };\r\n\r\n  /**\r\n   * Instantiates, sets highlight for, and sets position for the actual THREE\r\n   * drawing of a node\r\n   */\r\n  self.setupNodeDrawObject = function(node, htexture, texture) {\r\n    var draw_object = self.createNodeMesh(node, texture);\r\n\r\n    // Create highlight\r\n    if (!def.NODE_NO_HIGHLIGHT) {\r\n      var highlight = self.createHighlightMesh(node, htexture);\r\n      draw_object.add(highlight);\r\n    }\r\n\r\n    var pinMesh = self.createPinMesh();\r\n    draw_object.add(pinMesh);\r\n\r\n    draw_object.position.x = node.renderData.x;\r\n    draw_object.position.y = node.renderData.y;\r\n    draw_object.index = node.id;\r\n    draw_object.name = node.id;\r\n    node.renderData.draw_object = draw_object;\r\n\r\n    return draw_object;\r\n  };\r\n\r\n  /**\r\n   *  Create a node object and add it to the scene.\r\n   */\r\n  self.drawNode = function(node) {\r\n    function onHTextureLoad(node, htexture) {\r\n      // Load node texture\r\n      self.textureLoader.load(\r\n        node.renderData.image || def.NODE_TEXTURE,\r\n        onTextureLoad.bind(null, node, htexture)\r\n      );\r\n    }\r\n\r\n    function onTextureLoad(node, htexture, texture) {\r\n      // Create mesh for node\r\n      var draw_object = self.setupNodeDrawObject(node, htexture, texture);\r\n\r\n      // Create div for label\r\n      self.createNodeLabel(node);\r\n\r\n      self.nodeCount += 1;\r\n      self.nodes.add(draw_object);\r\n    }\r\n\r\n    if (def.NODE_NO_HTEX && def.NODE_NO_TEX) {\r\n      onTextureLoad(node, null, null);\r\n    } else {\r\n      // Load highlight texture\r\n      self.textureLoader.load(\r\n        node.renderData.himage || def.NODE_HTEXTURE,\r\n        onHTextureLoad.bind(null, node)\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Create an edge and add it to the lineSegments.\r\n   */\r\n  self.drawEdge = function(source, target, visible = true) {\r\n    if (\r\n      source.renderData.draw_object === undefined ||\r\n      target.renderData.draw_object === undefined\r\n    ) {\r\n      setTimeout(self.drawEdge.bind(null, source, target), 50);\r\n      return;\r\n    }\r\n    var index = self.drawCount * 3;\r\n    self.lineObjects[index / 3] = source;\r\n    self.lineObjects[index / 3 + 1] = target;\r\n    if (!source.linkObjs) {\r\n      source.linkObjs = [];\r\n    }\r\n    if (!target.linkObjs) {\r\n      target.linkObjs = [];\r\n    }\r\n    self.lineIndices.push({\r\n      source: source,\r\n      target: target,\r\n      hide: !visible,\r\n      linecolor: source.renderData.linecolor\r\n    });\r\n    source.linkObjs.push(self.lineIndices[index / 6]);\r\n    target.linkObjs.push(self.lineIndices[index / 6]);\r\n    self.updateColorsAndPositions(source, target, index);\r\n    self.drawCount += 2;\r\n  };\r\n\r\n  /**\r\n   * Update the colors and positions of the edges between source and target\r\n   */\r\n  self.updateColorsAndPositions = function(source, target, index) {\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n\r\n    var v1pos = source.renderData.draw_object.position;\r\n    var v2pos = target.renderData.draw_object.position;\r\n    var v1color = self.lineIndices[index / 6].linecolor;\r\n    var v2color = self.lineIndices[index / 6].linecolor;\r\n    colors[index] = v1color.b;\r\n    positions[index++] = v1pos.x;\r\n    colors[index] = v1color.g;\r\n    positions[index++] = v1pos.y;\r\n    colors[index] = v1color.r;\r\n    positions[index++] = v1pos.z - 0.02;\r\n    colors[index] = v2color.b;\r\n    positions[index++] = v2pos.x;\r\n    colors[index] = v2color.g;\r\n    positions[index++] = v2pos.y;\r\n    colors[index] = v2color.r;\r\n    positions[index++] = v2pos.z - 0.02;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\n/**\r\n * These functions are endpoints revealed to Argo frontend\r\n */\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Set frame.mouseMode to the specified mode\r\n   * @param {string} mode name of the mode, currently supports ['select', 'move']\r\n   */\r\n  self.setMouseMode = mode => {\r\n    if (mode === \"select\") {\r\n      // This is the default mode, where users can select one or multiple nodes\r\n      self.mouseMode = \"select\";\r\n      self.isMouseModeMove = false;\r\n    } else if (mode === \"move\") {\r\n      // move mode, where user can drag the screen to achieve panning\r\n      self.mouseMode = \"move\";\r\n      self.isMouseModeMove = true;\r\n    }\r\n  };\r\n\r\n  self.pauseLayout = () => {\r\n    self.paused = true;\r\n  };\r\n  window.pause = self.pauseLayout;\r\n\r\n  self.resumeLayout = () => {\r\n    self.paused = false;\r\n  };\r\n\r\n  self.mapSelectedNodes = () => {\r\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"], self.selection);\r\n  };\r\n\r\n  self.mapAllNodes = () => {\r\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"]);\r\n  };\r\n\r\n  self.pinSelectedNodes = () => {\r\n    self.mapNodeAttributes([true, \"\", \"pinned\"], self.selection);\r\n  };\r\n\r\n  self.unpinSelectedNodes = () => {\r\n    self.mapNodeAttributes([false, \"\", \"pinned\"], self.selection);\r\n  };\r\n\r\n  self.setLabelFontSize = size => {\r\n    self.graph.forEachNode(function(node) {\r\n      self.changeLabelFontSize(node, size, self.relativeFontSize);\r\n    });\r\n  };\r\n\r\n  self.setLabelRelativeSize = size => {\r\n    self.relativeFontSize = size;\r\n    self.setLabelFontSize(self.labelSize);\r\n  };\r\n\r\n  self.setLabelLength = numChars => {\r\n    self.graph.forEachNode(function(node) {\r\n      self.changeLabelLength(node, numChars);\r\n    });\r\n  };\r\n\r\n  self.toggleMap = () => {\r\n    self.mapShowing = !self.mapShowing;\r\n  };\r\n\r\n  // The CSS Renderer for rendering labels is the most expensive\r\n  // renderer. For 300+ nodes it's recommended to turn it off by\r\n  // default and only use it when no node is moving to prevent\r\n  // visible lagging (during layout, dragging etc.)\r\n  self.turnOffLabelCSSRenderer = () => {\r\n    if (self.cssRenderer.isPaused) {\r\n      return;\r\n    }\r\n    self.element.removeChild(self.cssRenderer.domElement);\r\n    self.cssRenderer.isPaused = true;\r\n  };\r\n\r\n  // See turnOffLabelCSSRenderer.\r\n  self.turnOnLabelCSSRenderer = () => {\r\n    if (!self.cssRenderer.isPaused) {\r\n      return;\r\n    }\r\n    self.element.appendChild(self.cssRenderer.domElement);\r\n    self.cssRenderer.isPaused = false;\r\n  };\r\n\r\n  // Emits id of every node with label being displayed at this moment.\r\n  // Used to keep mobx state in sync since GraphStore and snapshot\r\n  // needs to save what nodes have labels shown and what not.\r\n  // Also turns off label CSSRenderer when no node is showing label.\r\n  self.updateNodesShowingLabels = () => {\r\n    var nodes = [];\r\n    self.graph.forEachNode(n => {\r\n      var node = self.graph.getNode(n.id);\r\n      if (node.renderData.textHolder.children[0].element.override) {\r\n        nodes.push(n.id);\r\n      }\r\n    });\r\n\r\n    // Turns off label CSSRenderer when no node is showing label.\r\n    // This is because CSSRenderer is slow.\r\n    if (nodes.length == 0) {\r\n      self.turnOffLabelCSSRenderer();\r\n    } else {\r\n      // TODO: Only turn on when no node is moving?\r\n      self.turnOnLabelCSSRenderer();\r\n    }\r\n\r\n    self.ee.emit(\"show-node-label\", nodes);\r\n  };\r\n\r\n  self.toggleSelectedLabels = () => {\r\n    self.toggleLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.showSelectedLabels = () => {\r\n    self.showLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.hideSelectedLabels = () => {\r\n    self.hideLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.toggleLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        if (\r\n          node.renderData.textHolder.children[0].element.override == undefined\r\n        ) {\r\n          node.renderData.textHolder.children[0].element.override = false;\r\n        }\r\n        node.renderData.textHolder.children[0].element.override = !node\r\n          .renderData.textHolder.children[0].element.override;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.showLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        node.renderData.textHolder.children[0].element.override = true;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.hideLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        node.renderData.textHolder.children[0].element.override = false;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.hideAllLabels = () => {\r\n    self.graph.forEachNode(function(node) {\r\n      var node = self.graph.getNode(node.id);\r\n      node.renderData.textHolder.children[0].element.override = false;\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.showAllLabels = () => {\r\n    self.graph.forEachNode(function(node) {\r\n      var node = self.graph.getNode(node.id);\r\n      node.renderData.textHolder.children[0].element.override = true;\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.setCanvasSize = function(size) {\r\n    self.setBoundarySize(size);\r\n  };\r\n\r\n  self.setAllNodesShape = function(shape) {\r\n    if (self.selection.length == 0) {\r\n      self.graph.forEachNode(function(node) {\r\n        self.setNodeShape(self.graph.getNode(node.id), shape);\r\n      });\r\n    } else {\r\n      self.selection.forEach(function(node) {\r\n        self.setNodeShape(self.graph.getNode(node.id), shape);\r\n      });\r\n    }\r\n  };\r\n\r\n  self.setNodeShape = function(node, shape) {\r\n    if (shape == \"square\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = self.make2x2Rect();\r\n      node.renderData.draw_object.children[0].geometry = self.make2x2Rect();\r\n    } else if (shape == \"circle\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 32);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        32\r\n      );\r\n    } else if (shape == \"triangle\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 3);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        3\r\n      );\r\n    } else if (shape == \"pentagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 5);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        5\r\n      );\r\n    } else if (shape == \"hexagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 6);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        6\r\n      );\r\n    } else if (shape == \"octagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 8);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        8\r\n      );\r\n    }\r\n  };\r\n\r\n  self.getNumSelected = function() {\r\n    if (self.selection.length == self.graph.getNodesCount()) {\r\n      return 0;\r\n    }\r\n    return self.selection.length;\r\n  };\r\n\r\n  self.toggleDark = function() {\r\n    self.darkMode = !self.darkMode;\r\n    self.updateViewPortEdgeColor();\r\n  };\r\n\r\n  self.updateViewPortEdgeColor = function() {\r\n    self.viewPort.material.color = new THREE.Color( self.darkMode? 0xffffff : 0x000000 );       \r\n  }\r\n\r\n  self.getGraph = function() {\r\n    return self.graph;\r\n  };\r\n\r\n  self.getNodeList = function() {\r\n    var nodes = [];\r\n    self.graph.forEachNode(function(node) {\r\n      nodes.push(node);\r\n    });\r\n    return nodes;\r\n  };\r\n\r\n  self.getPositions = function() {\r\n    var poses = {};\r\n    self.graph.forEachNode(function(node) {\r\n      poses[node.id] = [node.x, node.y];\r\n    });\r\n    return poses;\r\n  };\r\n\r\n  self.getPinPositions = function() {\r\n    var poses = {};\r\n    self.graph.forEachNode(function(node) {\r\n      poses[node.id] = [node.fx, node.fy];\r\n    });\r\n    return poses;\r\n  };\r\n\r\n  var alias = false;\r\n  self.toggleAlias = () => {\r\n    // TODO: recreate renderer with new antialias\r\n    // self.init(alias);\r\n    // self.display();\r\n    alias = !alias;\r\n  };\r\n\r\n  self.setLastNode = id => {\r\n    self.lastNode = self.graph.getNode(id);\r\n  };\r\n\r\n  self.dragLastNode = () => {\r\n    self.selectNode(self.lastNode);\r\n  };\r\n\r\n  var x = 1.0;\r\n  self.lowerRes = () => {\r\n    x -= 0.1;\r\n    self.renderer.setPixelRatio(x);\r\n    self.onWindowResize();\r\n  };\r\n\r\n  self.getNeighbors = function(node) {\r\n    if (node) {\r\n      self.addNeighbors(node);\r\n    } else {\r\n      self.addNeighbors(self.rightClickedNode);\r\n    }\r\n  };\r\n\r\n  self.toggleNeighborHighlight = function() {\r\n    self.doHighlightNeighbors = !self.doHighlightNeighbors;\r\n  };\r\n\r\n  self.highlightNodeIds = function(nodeids, toggle) {\r\n    if (nodeids.length > 0 && Array.isArray(nodeids[0])) {\r\n      nodeids = nodeids[0];\r\n    }\r\n    if (self.prevHighlights) {\r\n      for (var i = 0; i < self.prevHighlights.length; i++) {\r\n        self.highlightNode(\r\n          self.prevHighlights[i],\r\n          !toggle,\r\n          def.SEARCH_HIGHLIGHT\r\n        );\r\n      }\r\n    }\r\n    self.prevHighlights = [];\r\n    self.graph.forEachNode(function(node) {\r\n      if (nodeids.indexOf(node.id) != -1) {\r\n        self.highlightNode(node, toggle, def.SEARCH_HIGHLIGHT);\r\n        self.prevHighlights.push(node);\r\n      }\r\n    });\r\n  };\r\n\r\n  self.removeSelected = function() {\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      self.removeNode(self.selection[i]);\r\n    }\r\n    self.selection = [];\r\n  };\r\n\r\n  self.getSelected = function() {\r\n    return self.selection;\r\n  };\r\n\r\n  self.getSelectedIds = function() {\r\n    return self.selection.map(n => n.id);\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Update the position and color of the edges\r\n   */\r\n  self.updateEdges = function() {\r\n    self.edges.setDrawRange(0, self.drawCount + 6);\r\n    var total = self.drawCount + 6;\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n    for (var i = 0; i < total; i += 2) {\r\n      if (self.lineIndices[i / 2]) {\r\n        if (self.lineIndices[i / 2].hide) {\r\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\r\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\r\n          positions[i * 3] = v1pos.x;\r\n          positions[i * 3 + 1] = v1pos.y;\r\n          positions[i * 3 + 3] = v2pos.x;\r\n          positions[i * 3 + 4] = v2pos.y;\r\n          colors[i * 3] = 255;\r\n          colors[i * 3 + 1] = 255;\r\n          colors[i * 3 + 2] = 255;\r\n          colors[i * 3 + 3] = 255;\r\n          colors[i * 3 + 4] = 255;\r\n          colors[i * 3 + 5] = 255;\r\n        } else {\r\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\r\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\r\n          var v1color = self.lineIndices[i / 2].linecolor;\r\n          var v2color = self.lineIndices[i / 2].linecolor;\r\n          positions[i * 3] = v1pos.x;\r\n          positions[i * 3 + 1] = v1pos.y;\r\n          positions[i * 3 + 3] = v2pos.x;\r\n          positions[i * 3 + 4] = v2pos.y;\r\n          colors[i * 3] = v1color.r;\r\n          colors[i * 3 + 1] = v1color.g;\r\n          colors[i * 3 + 2] = v1color.b;\r\n          colors[i * 3 + 3] = v2color.r;\r\n          colors[i * 3 + 4] = v2color.g;\r\n          colors[i * 3 + 5] = v2color.b;\r\n        }\r\n      }\r\n    }\r\n    self.edges.attributes.position.needsUpdate = true;\r\n    self.edges.attributes.color.needsUpdate = true;\r\n  };\r\n\r\n  /**\r\n   *  Update the position of the labels\r\n   */\r\n  self.updateLabels = function() {\r\n    var nodes = self.force.nodes();\r\n    for (var i = 0; i < nodes.length; i++) {\r\n      let thisNode = self.graph.getNode(nodes[i].id);\r\n      if (thisNode.renderData.textHolder != undefined) {\r\n        if (\r\n          //thisNode.renderData.textHolder.children[0].element.hideme != false &&\r\n          !thisNode.renderData.textHolder.children[0].element.override\r\n        ) {\r\n          thisNode.renderData.textHolder.children[0].element.hidden = true;\r\n        } else {\r\n          thisNode.renderData.textHolder.children[0].element.hidden = false;\r\n        }\r\n      }\r\n      thisNode.renderData.textHolder.position.x =\r\n        thisNode.renderData.size + thisNode.renderData.draw_object.position.x;\r\n      thisNode.renderData.textHolder.position.y =\r\n        thisNode.renderData.draw_object.position.y;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Update the position and color of the edges\r\n   */\r\n  self.updateNodes = function() {\r\n    if (self.options.layout == \"ngraph\") {\r\n      self.graph.forEachNode(function(node) {\r\n        if (node.renderData) {\r\n          node.renderData.draw_object.position.x = self.force.getNodePosition(\r\n            node.id\r\n          ).x;\r\n          node.renderData.draw_object.position.y = self.force.getNodePosition(\r\n            node.id\r\n          ).y;\r\n        }\r\n      });\r\n      if (!self.paused) {\r\n        self.force.step();\r\n      }\r\n    } else if (self.options.layout == \"d3\") {\r\n      var nodes = self.force.nodes();\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        nodes[i].x = Math.max(\r\n          -self.renderWidth,\r\n          Math.min(self.renderWidth, nodes[i].x)\r\n        );\r\n        nodes[i].y = Math.max(\r\n          -self.renderHeight,\r\n          Math.min(self.renderHeight, nodes[i].y)\r\n        );\r\n        let thisNode = self.graph.getNode(nodes[i].id);\r\n        if (thisNode && thisNode.renderData.draw_object) {\r\n          if (!thisNode.pinnedx) {\r\n            thisNode.fx = null;\r\n            thisNode.renderData.draw_object.children[1].visible = false;\r\n          } else {\r\n            thisNode.fx = thisNode.x;\r\n            thisNode.renderData.draw_object.children[1].visible = true;\r\n          }\r\n          if (!thisNode.pinnedy) {\r\n            thisNode.fy = null;\r\n          } else {\r\n            thisNode.fy = thisNode.y;\r\n          }\r\n          thisNode.renderData.draw_object.position.x = nodes[i].x;\r\n          thisNode.renderData.draw_object.position.y = nodes[i].y;\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < self.fakeNodes.length; i++) {\r\n        self.fakeNodes[i].fx =\r\n          self.neighborHost.x + self.neighborHost.data.size * 3;\r\n        self.fakeNodes[i].fy =\r\n          self.neighborHost.y - self.neighborHost.data.size * 3 * i;\r\n      }\r\n\r\n      if (!self.paused) {\r\n        self.force.tick();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Restrict camera translation\r\n   */\r\n  self.updateCamera = function() {\r\n    self.controls.target.x -=\r\n      self.controls.object.position.x -\r\n      Math.max(\r\n        -self.renderWidth,\r\n        Math.min(self.renderWidth, self.controls.object.position.x)\r\n      );\r\n    self.controls.object.position.x -=\r\n      self.controls.object.position.x -\r\n      Math.max(\r\n        -self.renderWidth,\r\n        Math.min(self.renderWidth, self.controls.object.position.x)\r\n      );\r\n    self.controls.target.y -=\r\n      self.controls.object.position.y -\r\n      Math.max(\r\n        -self.renderHeight,\r\n        Math.min(self.renderHeight, self.controls.object.position.y)\r\n      );\r\n    self.controls.object.position.y -=\r\n      self.controls.object.position.y -\r\n      Math.max(\r\n        -self.renderHeight,\r\n        Math.min(self.renderHeight, self.controls.object.position.y)\r\n      );\r\n    self.setViewPortSize(self.ccamera);\r\n  };\r\n\r\n  /**\r\n   * Given an ngraph, update the current ngraph and add or remove inconsistent nodes\r\n   */\r\n  self.updateGraph = function(graph) {\r\n    var numNodesAdded = 0;\r\n    graph.forEachNode(function(node) {\r\n      var oldNode = self.graph.getNode(node.id);\r\n      if (!oldNode) {\r\n        if (!self.newNodeIds) {\r\n          self.newNodeIds = [];\r\n        }\r\n        self.newNodeIds.push(node.id);\r\n        self.addNode(node);\r\n        numNodesAdded += 1;\r\n        self.lastNode = self.graph.getNode(node.id);\r\n      } else {\r\n        self.updateNode(oldNode, node);\r\n      }\r\n    });\r\n    graph.forEachLink(function(link) {\r\n      if (!self.graph.getLink(link.fromId, link.toId)) {\r\n        self.addEdge(\r\n          self.graph.getNode(link.fromId),\r\n          self.graph.getNode(link.toId)\r\n        );\r\n      }\r\n    });\r\n\r\n    self.graph.forEachNode(function(node) {\r\n      var oldNode = graph.getNode(node.id);\r\n      if (!oldNode) {\r\n        self.removeNode(node);\r\n      }\r\n    });\r\n\r\n    self.force.alpha(1);\r\n    self.force.stop();\r\n\r\n    if (numNodesAdded > 10) {\r\n      // This seems unnecessary for now\r\n      // self.tickToStatic = true;\r\n      self.tickToStatic = false;\r\n    } else {\r\n      self.tickToStatic = false;\r\n    }\r\n    if (self.newNodeIds) {\r\n      self.highlightNodeIds(self.newNodeIds, true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * update positions in the ngraph given a list of positions\r\n   */\r\n  self.updatePositions = function(positions) {\r\n    self.graph.forEachNode(function(node) {\r\n      var pos = positions[node.id];\r\n      if (pos) {\r\n        self.graph.getNode(node.id).x = pos[0];\r\n        self.graph.getNode(node.id).y = pos[1];\r\n        self.graph.getNode(node.id).pinnedx = node.pinnedx;\r\n        self.graph.getNode(node.id).pinnedy = node.pinnedy;\r\n        if (node.pinnedx) {\r\n          self.graph.getNode(node.id).fx = pos[0];\r\n        }\r\n        if (node.pinnedy) {\r\n          self.graph.getNode(node.id).fy = pos[1];\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Update a node given a new node\r\n   */\r\n  self.updateNode = function(node, newNode) {\r\n    if (newNode.data) {\r\n      if (node.data.color && newNode.data.color) {\r\n        node.data.color = newNode.data.color;\r\n        node.renderData.color = node.data.color;\r\n        node.renderData.draw_object.material.color.set(\r\n          new THREE.Color(node.data.color)\r\n        );\r\n      }\r\n      if (newNode.data.size && newNode.data.size > 0) {\r\n        node.data.size = newNode.data.size;\r\n        node.renderData.size = newNode.data.size;\r\n        node.renderData.draw_object.scale.set(\r\n          newNode.data.size,\r\n          newNode.data.size,\r\n          1\r\n        );\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / newNode.data.size;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      }\r\n      if (newNode.data.label) {\r\n        node.data.label = newNode.data.label;\r\n        node.renderData.label = node.data.label;\r\n        node.renderData.textHolder.children[0].element.childNodes[0].innerText =\r\n          node.data.label;\r\n      }\r\n      if (newNode.data.shape) {\r\n        node.data.shape = newNode.data.shape;\r\n        node.renderData.shape = node.data.shape;\r\n        self.setNodeShape(node, node.data.shape);\r\n      }\r\n    }\r\n  };\r\n};\r\n"],"sourceRoot":""}